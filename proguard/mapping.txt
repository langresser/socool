com.umeng.analytics.MobclickAgent -> com.umeng.a.a:
    com.umeng.analytics.MobclickAgent d -> d
    int e -> e
    android.content.Context f -> f
    android.os.Handler g -> g
    com.umeng.analytics.UmengOnlineConfigureListener o -> h
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onError(android.content.Context) -> c
    void reportError(android.content.Context,java.lang.String) -> a
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> a
    void onEvent(android.content.Context,java.lang.String) -> b
    void onEvent(android.content.Context,java.lang.String,int) -> a
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    java.lang.String b(android.content.Context) -> g
    void a(android.content.Context,java.lang.String,java.lang.String) -> c
    void c(android.content.Context) -> h
    void b(android.content.Context,java.lang.String,java.lang.String,long,int) -> b
    void b(android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(android.content.Context,java.lang.String,java.util.Map,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> d
    void a(java.lang.String) -> a
    void a(android.content.Context,android.content.SharedPreferences,java.lang.String,org.json.JSONObject) -> a
    void a(android.content.Context,java.lang.String) -> c
    boolean a(android.content.SharedPreferences) -> a
    java.lang.String a(android.content.Context,java.lang.String,android.content.SharedPreferences) -> a
    java.lang.String getUmengHttpHeader(android.content.Context) -> d
    org.json.JSONObject e(android.content.Context) -> i
    java.lang.String a(android.content.Context,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    void b(android.content.Context,android.content.SharedPreferences) -> b
    void c(android.content.Context,android.content.SharedPreferences) -> c
    long[] d(android.content.Context,android.content.SharedPreferences) -> d
    void a(android.content.Context,android.content.SharedPreferences,java.lang.String,java.lang.String,long,int) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> e
    org.json.JSONArray b(org.json.JSONObject,org.json.JSONArray) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String,boolean,java.lang.String) -> a
    boolean a(java.lang.String,android.content.Context,java.lang.String[]) -> a
    java.lang.String a(java.io.InputStream) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    org.json.JSONObject g(android.content.Context) -> j
    void h(android.content.Context) -> k
    android.content.SharedPreferences i(android.content.Context) -> l
    android.content.SharedPreferences j(android.content.Context) -> m
    android.content.SharedPreferences k(android.content.Context) -> n
    java.lang.String l(android.content.Context) -> o
    java.lang.String m(android.content.Context) -> p
    android.content.SharedPreferences a(android.content.Context) -> e
    java.lang.String b() -> b
    android.content.SharedPreferences n(android.content.Context) -> q
    void b(android.content.Context,java.lang.String) -> d
    int o(android.content.Context) -> r
    java.lang.String p(android.content.Context) -> s
    void updateOnlineConfig(android.content.Context) -> f
    void c(android.content.Context,java.lang.String) -> e
    void c(android.content.Context,org.json.JSONObject) -> c
    org.json.JSONObject q(android.content.Context) -> t
    void d(android.content.Context,java.lang.String) -> f
    int e(android.content.Context,java.lang.String) -> g
    com.umeng.analytics.MobclickAgent a() -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,org.json.JSONObject) -> a
    void b(com.umeng.analytics.MobclickAgent,android.content.Context,org.json.JSONObject) -> b
    void a(com.umeng.analytics.MobclickAgent,android.content.Context) -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String,java.lang.String) -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String) -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String,java.util.Map,java.lang.String) -> a
    void b(com.umeng.analytics.MobclickAgent,android.content.Context,java.lang.String,java.lang.String) -> b
com.umeng.analytics.MobclickAgent$a -> com.umeng.a.b:
    java.lang.Object a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    long i -> i
    java.util.Map j -> j
    java.lang.String k -> k
    void run() -> run
com.umeng.analytics.MobclickAgent$b -> com.umeng.a.c:
    java.lang.Object a -> a
    com.umeng.analytics.MobclickAgent b -> b
    android.content.Context c -> c
    org.json.JSONObject d -> d
    void run() -> run
com.umeng.analytics.UmengOnlineConfigureListener -> com.umeng.a.d:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.a -> com.umeng.a.e:
    long d -> a
    boolean g -> b
    boolean h -> c
    boolean i -> d
    boolean j -> e
    java.lang.String k -> f
    java.lang.String l -> g
    java.lang.Object m -> h
    java.lang.String[] o -> i
    boolean r -> j
com.umeng.analytics.b -> com.umeng.a.f:
    java.lang.String a(android.content.Context) -> a
com.umeng.common.Log -> com.umeng.common.a:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
com.umeng.common.a.a -> com.umeng.common.a.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
com.umeng.common.a.b -> com.umeng.common.a.b:
    int a(android.content.Context) -> a
com.umeng.common.b -> com.umeng.common.b:
    java.lang.String a -> a
    java.lang.String d(android.content.Context) -> a
    java.lang.String e(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    android.location.Location l(android.content.Context) -> g
    boolean m(android.content.Context) -> h
    boolean b() -> b
    int n(android.content.Context) -> i
    java.lang.String[] o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    java.lang.String v(android.content.Context) -> q
    java.lang.String q(android.content.Context) -> l
    java.lang.String r(android.content.Context) -> m
    java.lang.String c() -> c
    java.lang.String s(android.content.Context) -> n
    java.lang.String t(android.content.Context) -> o
    java.lang.String u(android.content.Context) -> p
com.umeng.common.b.f -> com.umeng.common.b.a:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
com.umeng.common.b.g -> com.umeng.common.b.b:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
com.umeng.common.c -> com.umeng.common.c:
    java.lang.String a -> a
    com.umeng.common.c b -> b
    android.content.Context c -> c
    java.lang.Class d -> d
    java.lang.Class e -> e
    java.lang.Class f -> f
    java.lang.Class g -> g
    java.lang.Class h -> h
    java.lang.Class i -> i
    java.lang.Class j -> j
    com.umeng.common.c a(android.content.Context) -> a
    int b(java.lang.String) -> a
    int c(java.lang.String) -> b
    int d(java.lang.String) -> c
    int f(java.lang.String) -> d
    int g(java.lang.String) -> e
    int a(java.lang.Class,java.lang.String) -> a
com.umeng.common.net.DownloadingService -> com.umeng.common.net.DownloadingService:
    java.lang.String j -> c
    android.app.NotificationManager k -> d
    java.util.Map h -> a
    android.os.Messenger i -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void onCreate() -> onCreate
    void a(com.umeng.common.net.a$a) -> a
    boolean b(android.content.Context) -> b
    boolean b(com.umeng.common.net.a$a) -> b
    void onDestroy() -> onDestroy
    java.lang.String a() -> a
    boolean a(com.umeng.common.net.DownloadingService,com.umeng.common.net.a$a) -> a
    void b(com.umeng.common.net.DownloadingService,com.umeng.common.net.a$a) -> b
    android.app.NotificationManager a(com.umeng.common.net.DownloadingService) -> a
    void a(com.umeng.common.net.DownloadingService,android.app.NotificationManager) -> a
    boolean a(android.content.Context) -> a
com.umeng.common.net.DownloadingService$a -> com.umeng.common.net.a:
    android.content.Context b -> b
    java.lang.String c -> c
    android.app.Notification d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.umeng.common.net.a$a i -> i
    android.os.Handler k -> j
    com.umeng.common.net.DownloadingService a -> a
    void run() -> run
    void a(boolean) -> a
    void a(java.lang.Exception) -> a
    int a(com.umeng.common.net.DownloadingService$a) -> a
    android.content.Context b(com.umeng.common.net.DownloadingService$a) -> b
    com.umeng.common.net.a$a c(com.umeng.common.net.DownloadingService$a) -> c
    com.umeng.common.net.DownloadingService d(com.umeng.common.net.DownloadingService$a) -> d
com.umeng.common.net.DownloadingService$b -> com.umeng.common.net.b:
    com.umeng.common.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.a -> com.umeng.common.net.c:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.common.net.e d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.os.Messenger a -> a
    android.content.ServiceConnection i -> i
    void a() -> a
    java.lang.String b() -> b
    void a(com.umeng.common.net.a,android.os.Messenger) -> a
    com.umeng.common.net.e a(com.umeng.common.net.a) -> a
    java.lang.String b(com.umeng.common.net.a) -> b
    java.lang.String c(com.umeng.common.net.a) -> c
    java.lang.String d(com.umeng.common.net.a) -> d
    android.os.Messenger e(com.umeng.common.net.a) -> e
    android.content.Context f(com.umeng.common.net.a) -> f
    android.content.ServiceConnection g(com.umeng.common.net.a) -> g
com.umeng.common.net.a$a -> com.umeng.common.net.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Bundle a() -> a
    com.umeng.common.net.a$a a(android.os.Bundle) -> a
com.umeng.common.net.a$b -> com.umeng.common.net.e:
    com.umeng.common.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.b -> com.umeng.common.net.f:
    com.umeng.common.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.common.net.c -> com.umeng.common.net.g:
    java.lang.String a -> a
    android.content.Context i -> b
    com.umeng.common.net.c$a k -> c
    com.umeng.common.net.c a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.common.net.c$a -> com.umeng.common.net.h:
    com.umeng.common.net.c a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.common.net.c$b -> com.umeng.common.net.i:
    com.umeng.common.net.c a -> a
com.umeng.common.net.d -> com.umeng.common.net.j:
    com.umeng.common.net.DownloadingService$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.e -> com.umeng.common.net.k:
    void a() -> a
    void a(int) -> a
    void a(int,java.lang.String) -> a
com.umeng.common.net.j -> com.umeng.common.net.l:
    java.lang.String a -> a
    java.util.Map b -> b
    com.umeng.common.net.l a(com.umeng.common.net.k,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.umeng.common.net.k -> com.umeng.common.net.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
com.umeng.common.net.l -> com.umeng.common.net.n:
com.umeng.fb.UMFeedbackService -> com.umeng.fb.a:
    boolean c -> b
    com.umeng.fb.util.FeedBackListener fbListener -> a
    boolean getHasCheckedReply() -> a
    void openUmengFeedbackSDK(android.content.Context) -> a
    void setGoBackButtonVisible() -> b
com.umeng.fb.a -> com.umeng.fb.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Date e -> d
    com.umeng.fb.a$b f -> e
    com.umeng.fb.a$a g -> f
    org.json.JSONObject h -> g
    int a(com.umeng.fb.a) -> a
    java.lang.String a() -> a
    int compareTo(java.lang.Object) -> compareTo
com.umeng.fb.a$a -> com.umeng.fb.c:
    com.umeng.fb.a$a a -> a
    com.umeng.fb.a$a b -> b
    com.umeng.fb.a$a c -> c
    com.umeng.fb.a$a d -> d
    com.umeng.fb.a$a[] e -> e
    com.umeng.fb.a$a[] values() -> values
    com.umeng.fb.a$a valueOf(java.lang.String) -> valueOf
com.umeng.fb.a$b -> com.umeng.fb.d:
    com.umeng.fb.a$b a -> a
    com.umeng.fb.a$b b -> b
    com.umeng.fb.a$b c -> c
    com.umeng.fb.a$b[] d -> d
    com.umeng.fb.a$b[] values() -> values
    com.umeng.fb.a$b valueOf(java.lang.String) -> valueOf
com.umeng.fb.a.a -> com.umeng.fb.a.a:
    java.lang.String a -> a
    com.umeng.fb.a.c a(com.umeng.fb.a.b) -> a
com.umeng.fb.a.b -> com.umeng.fb.a.b:
    java.lang.String d -> d
    org.json.JSONObject e -> e
    java.lang.String f -> f
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.umeng.fb.a.c -> com.umeng.fb.a.c:
    org.json.JSONObject a -> a
    org.json.JSONObject a() -> a
com.umeng.fb.a.d -> com.umeng.fb.a.d:
    android.content.Context a -> a
    java.util.concurrent.ExecutorService b -> b
    void run() -> run
com.umeng.fb.a.e -> com.umeng.fb.a.e:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    android.os.Handler g -> g
    void run() -> run
com.umeng.fb.a.f -> com.umeng.fb.a.f:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    android.content.Context c -> c
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.umeng.fb.b -> com.umeng.fb.e:
    java.lang.String a -> a
    com.umeng.fb.b$a b -> b
    java.lang.String c -> c
    com.umeng.fb.a d -> d
    com.umeng.fb.a e -> e
    java.util.List f -> f
    int a(com.umeng.fb.b) -> a
    com.umeng.fb.a a(int) -> a
    void b(int) -> b
    int compareTo(java.lang.Object) -> compareTo
com.umeng.fb.b$a -> com.umeng.fb.f:
    com.umeng.fb.b$a a -> a
    com.umeng.fb.b$a b -> b
    com.umeng.fb.b$a c -> c
    com.umeng.fb.b$a d -> d
    com.umeng.fb.b$a[] e -> e
    com.umeng.fb.b$a[] values() -> values
    com.umeng.fb.b$a valueOf(java.lang.String) -> valueOf
com.umeng.fb.b.a -> com.umeng.fb.b.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.umeng.fb.b.b -> com.umeng.fb.b.b:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
com.umeng.fb.b.c -> com.umeng.fb.b.c:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int m(android.content.Context) -> l
    int n(android.content.Context) -> m
    int o(android.content.Context) -> n
    int p(android.content.Context) -> o
    int q(android.content.Context) -> p
    int r(android.content.Context) -> q
    int s(android.content.Context) -> r
    int t(android.content.Context) -> s
    int u(android.content.Context) -> t
com.umeng.fb.b.d -> com.umeng.fb.b.d:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
com.umeng.fb.b.e -> com.umeng.fb.b.e:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int d(android.content.Context) -> c
    int e(android.content.Context) -> d
    int f(android.content.Context) -> e
    int g(android.content.Context) -> f
    int h(android.content.Context) -> g
    int i(android.content.Context) -> h
    int j(android.content.Context) -> i
    int l(android.content.Context) -> j
    int m(android.content.Context) -> k
    int n(android.content.Context) -> l
    int o(android.content.Context) -> m
    int p(android.content.Context) -> n
    int q(android.content.Context) -> o
    int r(android.content.Context) -> p
    int s(android.content.Context) -> q
    int t(android.content.Context) -> r
    int u(android.content.Context) -> s
    int v(android.content.Context) -> t
com.umeng.fb.f -> com.umeng.fb.g:
    long d -> a
    boolean e -> b
    boolean h -> c
    boolean i -> d
    boolean j -> e
    boolean k -> f
    boolean l -> g
    java.lang.String m -> h
    java.lang.String n -> i
    java.lang.Object o -> j
    java.lang.String[] q -> k
    java.lang.String[] r -> l
    boolean u -> m
com.umeng.fb.g -> com.umeng.fb.h:
    java.util.Date a(java.lang.String) -> a
    org.json.JSONObject c(android.content.Context) -> a
com.umeng.fb.ui.FeedbackConversation -> com.umeng.fb.ui.FeedbackConversation:
    android.content.Context a -> a
    com.umeng.fb.b e -> f
    com.umeng.fb.ui.b f -> g
    android.widget.TextView g -> h
    android.widget.EditText h -> i
    android.widget.Button i -> j
    com.umeng.fb.ui.FeedbackConversation$a j -> k
    boolean b -> b
    java.lang.String c -> c
    boolean d -> d
    java.util.concurrent.ExecutorService executorService -> e
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setUserContext(android.content.Context) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    com.umeng.fb.b a(com.umeng.fb.ui.FeedbackConversation) -> a
    void a(com.umeng.fb.ui.FeedbackConversation,com.umeng.fb.b) -> a
    com.umeng.fb.ui.b b(com.umeng.fb.ui.FeedbackConversation) -> b
    android.widget.EditText c(com.umeng.fb.ui.FeedbackConversation) -> c
    android.widget.Button d(com.umeng.fb.ui.FeedbackConversation) -> d
com.umeng.fb.ui.FeedbackConversation$a -> com.umeng.fb.ui.a:
    com.umeng.fb.ui.FeedbackConversation a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.fb.ui.FeedbackConversations -> com.umeng.fb.ui.FeedbackConversations:
    com.umeng.fb.ui.FeedbackConversations$a a -> a
    android.widget.ImageButton b -> b
    int[] h -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void onRestart() -> onRestart
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void b() -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    int[] a() -> a
com.umeng.fb.ui.FeedbackConversations$a -> com.umeng.fb.ui.b:
    com.umeng.fb.ui.d a -> a
    com.umeng.fb.ui.FeedbackConversations b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.fb.ui.SendFeedback -> com.umeng.fb.ui.SendFeedback:
    java.lang.String b -> c
    android.widget.Spinner c -> d
    android.widget.Spinner d -> e
    android.widget.EditText e -> f
    android.widget.TextView f -> g
    android.widget.TextView g -> h
    android.widget.ImageButton h -> i
    com.umeng.fb.util.FeedBackListener i -> j
    java.util.Map j -> k
    java.util.Map k -> l
    org.json.JSONObject l -> m
    boolean a -> a
    java.util.concurrent.ExecutorService executorService -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void b() -> b
    void c() -> c
    int d() -> d
    int e() -> e
    void f() -> f
    java.util.Map getMap(org.json.JSONObject) -> a
    org.json.JSONObject getJSON(java.util.Map) -> a
    void setFBListener(com.umeng.fb.util.FeedBackListener) -> a
    void onPause() -> onPause
    android.widget.EditText a(com.umeng.fb.ui.SendFeedback) -> a
    android.widget.Spinner b(com.umeng.fb.ui.SendFeedback) -> b
    android.widget.Spinner c(com.umeng.fb.ui.SendFeedback) -> c
    com.umeng.fb.util.FeedBackListener d(com.umeng.fb.ui.SendFeedback) -> d
    void a(com.umeng.fb.ui.SendFeedback,java.util.Map) -> a
    void b(com.umeng.fb.ui.SendFeedback,java.util.Map) -> b
    java.util.Map e(com.umeng.fb.ui.SendFeedback) -> e
    java.util.Map f(com.umeng.fb.ui.SendFeedback) -> f
    void a(com.umeng.fb.ui.SendFeedback,org.json.JSONObject) -> a
    org.json.JSONObject g(com.umeng.fb.ui.SendFeedback) -> g
com.umeng.fb.ui.SendFeedback$a -> com.umeng.fb.ui.c:
    com.umeng.fb.ui.SendFeedback a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ui.SendFeedback$b -> com.umeng.fb.ui.d:
    com.umeng.fb.ui.SendFeedback a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ui.a -> com.umeng.fb.ui.e:
    com.umeng.fb.ui.FeedbackConversation a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ui.b -> com.umeng.fb.ui.f:
    android.content.Context a -> a
    android.view.LayoutInflater b -> b
    java.lang.String d -> c
    com.umeng.fb.b e -> d
    int[] f -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(com.umeng.fb.a,android.widget.TextView) -> a
    void a(com.umeng.fb.b) -> a
    int[] a() -> a
com.umeng.fb.ui.b$a -> com.umeng.fb.ui.g:
    android.widget.LinearLayout a -> a
    android.widget.RelativeLayout b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.view.View e -> e
    android.view.View f -> f
    com.umeng.fb.ui.b g -> g
com.umeng.fb.ui.c -> com.umeng.fb.ui.h:
    com.umeng.fb.ui.FeedbackConversations a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ui.d -> com.umeng.fb.ui.i:
    android.view.LayoutInflater a -> a
    android.content.Context b -> b
    java.util.List c -> c
    java.lang.String f -> d
    java.lang.String g -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    com.umeng.fb.b b(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String a(com.umeng.fb.b) -> a
    java.lang.String b(com.umeng.fb.b) -> b
    java.lang.String c(com.umeng.fb.b) -> c
    java.lang.String d(com.umeng.fb.b) -> d
    void a(java.util.List) -> a
com.umeng.fb.ui.d$a -> com.umeng.fb.ui.j:
    android.widget.ImageView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    com.umeng.fb.ui.d e -> e
com.umeng.fb.ui.e -> com.umeng.fb.ui.k:
    com.umeng.fb.ui.SendFeedback a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.util.ActivityStarter -> com.umeng.fb.c.a:
    android.content.Context userContext -> a
    android.content.Context lastContext -> b
    java.util.Map contactMap -> c
    java.util.Map remarkMap -> d
    boolean useGoBackButton -> e
    void openSendFeedbackActivity(android.content.Context) -> a
    void openSendFeedbackActivity(android.content.Context,com.umeng.fb.b) -> a
    void openFeedbackListActivity(android.content.Context) -> b
    void openDetailActivity(android.content.Context,com.umeng.fb.b) -> b
com.umeng.fb.util.FeedBackListener -> com.umeng.fb.c.b:
    void onSubmitFB(android.app.Activity) -> a
    void onResetFB(android.app.Activity,java.util.Map,java.util.Map) -> a
com.umeng.fb.util.a -> com.umeng.fb.c.c:
    java.lang.String a(java.util.Date,android.content.Context) -> a
    java.lang.String b(java.util.Date,android.content.Context) -> b
    java.lang.String b(java.lang.String,java.lang.String,org.json.JSONObject) -> b
    com.umeng.fb.a.c a(java.lang.String,java.lang.String,org.json.JSONObject) -> a
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
com.umeng.fb.util.b -> com.umeng.fb.c.d:
    org.json.JSONObject a(android.content.Context,java.lang.String,int,int,org.json.JSONObject,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject) -> a
    boolean c(org.json.JSONObject) -> b
    boolean d(org.json.JSONObject) -> c
    boolean e(org.json.JSONObject) -> d
    boolean a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.umeng.fb.util.c -> com.umeng.fb.c.e:
    boolean a(android.content.Context,org.json.JSONObject) -> a
    boolean b(android.content.Context,org.json.JSONObject) -> b
    java.lang.String a(android.content.Context,org.json.JSONArray) -> a
    java.lang.String d(android.content.Context,java.lang.String) -> d
    boolean a(android.content.Context,com.umeng.fb.b) -> a
    java.util.List a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void c(android.content.Context,org.json.JSONObject) -> c
    void d(android.content.Context,org.json.JSONObject) -> d
    boolean e(android.content.Context,org.json.JSONObject) -> e
    void a(android.content.SharedPreferences,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.umeng.fb.b,int) -> a
    com.umeng.fb.b b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
com.umeng.update.UmengDownloadListener -> com.umeng.b.a:
    void OnDownloadEnd(int) -> a
com.umeng.update.UmengUpdateAgent -> com.umeng.b.b:
    boolean b -> a
    boolean c -> b
    java.lang.String d -> c
    com.umeng.update.UmengUpdateListener f -> d
    java.lang.String[] i -> e
    com.umeng.update.UmengUpdateAgent j -> f
    com.umeng.update.UmengDownloadListener k -> g
    com.umeng.common.net.e l -> h
    com.umeng.update.UmengUpdateAgent f() -> f
    void setUpdateAutoPopup(boolean) -> a
    void setUpdateListener(com.umeng.update.UmengUpdateListener) -> a
    void b(int,com.umeng.update.UpdateResponse) -> b
    void update(android.content.Context) -> a
    void showUpdateDialog(android.content.Context,com.umeng.update.UpdateResponse) -> a
    void b(android.content.Context,java.lang.String) -> b
    com.umeng.update.UmengDownloadListener a() -> a
    void a(int,com.umeng.update.UpdateResponse) -> a
    java.lang.String b() -> b
    com.umeng.update.UmengUpdateAgent c() -> c
    java.lang.String[] d() -> d
    boolean e() -> e
    void a(android.content.Context,java.lang.String) -> a
com.umeng.update.UmengUpdateAgent$a -> com.umeng.b.c:
    android.content.Context a -> a
    com.umeng.update.UmengUpdateAgent b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
    org.json.JSONObject a(android.content.Context) -> a
com.umeng.update.UmengUpdateAgent$b -> com.umeng.b.d:
    org.json.JSONObject e -> e
    com.umeng.update.UmengUpdateAgent d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.update.UmengUpdateListener -> com.umeng.b.e:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UpdateResponse -> com.umeng.b.f:
    boolean hasUpdate -> a
    java.lang.String updateLog -> b
    java.lang.String version -> c
    java.lang.String path -> d
com.umeng.update.UpdateStatus -> com.umeng.b.g:
    int Yes -> a
    int No -> b
    int NoneWifi -> c
    int Timeout -> d
com.umeng.update.a -> com.umeng.b.h:
    void a() -> a
    void a(int) -> a
    void a(int,java.lang.String) -> a
com.umeng.update.b -> com.umeng.b.i:
    android.content.Context a -> a
    com.umeng.update.UpdateResponse b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.update.c -> com.umeng.b.j:
    void onClick(android.content.DialogInterface,int) -> onClick
info.monitorenter.cpdetector.io.ASCIIDetector -> a.a.a.a.a:
    info.monitorenter.cpdetector.io.ICodepageDetector instance -> a
    info.monitorenter.cpdetector.io.ICodepageDetector getInstance() -> a
    java.nio.charset.Charset detectCodepage(java.io.InputStream,int) -> a
info.monitorenter.cpdetector.io.AbstractCodepageDetector -> a.a.a.a.b:
    int compareTo(java.lang.Object) -> compareTo
info.monitorenter.cpdetector.io.CodepageDetectorProxy -> a.a.a.a.c:
    info.monitorenter.cpdetector.io.CodepageDetectorProxy instance -> a
    java.util.Set detectors -> b
    info.monitorenter.cpdetector.io.CodepageDetectorProxy getInstance() -> a
    boolean add(info.monitorenter.cpdetector.io.ICodepageDetector) -> a
    java.nio.charset.Charset detectCodepage(java.io.InputStream,int) -> a
    java.lang.String toString() -> toString
info.monitorenter.cpdetector.io.ICodepageDetector -> a.a.a.a.d:
    java.nio.charset.Charset detectCodepage(java.io.InputStream,int) -> a
info.monitorenter.cpdetector.io.JChardetFacade -> a.a.a.a.e:
    info.monitorenter.cpdetector.io.JChardetFacade instance -> a
    org.mozilla.intl.chardet.nsDetector det -> b
    byte[] buf -> c
    java.nio.charset.Charset codpage -> d
    boolean m_guessing -> e
    int amountOfVerifiers -> f
    info.monitorenter.cpdetector.io.JChardetFacade getInstance() -> a
    java.nio.charset.Charset detectCodepage(java.io.InputStream,int) -> a
    java.nio.charset.Charset guess() -> c
    void Notify(java.lang.String) -> a
    void Reset() -> b
info.monitorenter.cpdetector.io.UnicodeDetector -> a.a.a.a.f:
    info.monitorenter.cpdetector.io.ICodepageDetector instance -> a
    info.monitorenter.cpdetector.io.ICodepageDetector getInstance() -> a
    java.nio.charset.Charset detectCodepage(java.io.InputStream,int) -> a
info.monitorenter.cpdetector.io.UnknownCharset -> a.a.a.a.g:
    java.nio.charset.Charset instance -> a
    java.nio.charset.Charset getInstance() -> a
    boolean contains(java.nio.charset.Charset) -> contains
    java.nio.charset.CharsetDecoder newDecoder() -> newDecoder
    java.nio.charset.CharsetEncoder newEncoder() -> newEncoder
info.monitorenter.cpdetector.io.UnsupportedCharset -> a.a.a.a.h:
    java.lang.String m_name -> a
    java.util.Map singletons -> b
    java.nio.charset.Charset forName(java.lang.String) -> a
    boolean contains(java.nio.charset.Charset) -> contains
    java.nio.charset.CharsetDecoder newDecoder() -> newDecoder
    java.nio.charset.CharsetEncoder newEncoder() -> newEncoder
    java.lang.String displayName() -> displayName
    java.lang.String displayName(java.util.Locale) -> displayName
info.monitorenter.util.FileUtil -> a.a.b.a:
    java.util.ResourceBundle m_bundle -> a
    boolean isAllASCII(java.io.InputStream) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.youmi.android.appoffers.CheckStatusNotifier -> net.youmi.android.appoffers.CheckStatusNotifier:
    void onCheckStatusResponse(android.content.Context,boolean,boolean,boolean) -> onCheckStatusResponse
    void onCheckStatusConnectionFailed(android.content.Context) -> onCheckStatusConnectionFailed
net.youmi.android.appoffers.YoumiOffersActivity -> net.youmi.android.appoffers.YoumiOffersActivity:
    net.youmi.android.appoffers.ea a -> a
    net.youmi.android.appoffers.af b -> b
    java.lang.String c -> c
    void a() -> a
    void b() -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean c() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    java.lang.String a(net.youmi.android.appoffers.YoumiOffersActivity) -> a
net.youmi.android.appoffers.YoumiOffersManager -> net.youmi.android.appoffers.YoumiOffersManager:
    int TYPE_REWARD_OFFERS -> TYPE_REWARD_OFFERS
    int TYPE_REWARDLESS_APPLIST -> TYPE_REWARDLESS_APPLIST
    int TYPE_REWARDLESS_FEATUREDAPP -> TYPE_REWARDLESS_FEATUREDAPP
    int a -> a
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    boolean a(android.content.Context) -> a
    boolean showOffers(android.content.Context,int) -> showOffers
    android.content.Intent showOffers_forTab(android.content.Context,int) -> showOffers_forTab
    boolean checkStatus(android.content.Context,net.youmi.android.appoffers.CheckStatusNotifier) -> checkStatus
    boolean a(int) -> a
net.youmi.android.appoffers.YoumiPointsManager -> net.youmi.android.appoffers.YoumiPointsManager:
    java.lang.String getCurrencyName(android.content.Context) -> getCurrencyName
    boolean awardPoints(android.content.Context,int) -> awardPoints
    int queryPoints(android.content.Context) -> queryPoints
    boolean spendPoints(android.content.Context,int) -> spendPoints
    void a(android.content.Context,net.youmi.android.appoffers.q) -> a
net.youmi.android.appoffers.a -> net.youmi.android.appoffers.a:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    long l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    boolean p -> p
    int a() -> a
    void a(int) -> a
    void b(int) -> b
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void c(int) -> c
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    boolean f() -> f
    void a(boolean) -> a
    java.lang.String g() -> g
    void d(java.lang.String) -> d
    java.lang.String h() -> h
    void e(java.lang.String) -> e
    int i() -> i
    void d(int) -> d
    java.lang.String j() -> j
    void f(java.lang.String) -> f
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    boolean l() -> l
    boolean m() -> m
    void b(boolean) -> b
    boolean n() -> n
net.youmi.android.appoffers.aa -> net.youmi.android.appoffers.aa:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
net.youmi.android.appoffers.ab -> net.youmi.android.appoffers.ab:
    void a(java.lang.String) -> a
net.youmi.android.appoffers.ac -> net.youmi.android.appoffers.ac:
    void a(android.content.Context,net.youmi.android.appoffers.es) -> a
    void f() -> f
net.youmi.android.appoffers.ad -> net.youmi.android.appoffers.ad:
    void a(android.webkit.WebView,int) -> a
net.youmi.android.appoffers.ae -> net.youmi.android.appoffers.ae:
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.appoffers.af -> net.youmi.android.appoffers.af:
    boolean g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    boolean k() -> k
    boolean l() -> l
net.youmi.android.appoffers.ag -> net.youmi.android.appoffers.ag:
    java.lang.String a(int) -> a
    net.youmi.android.appoffers.z a(net.youmi.android.appoffers.y,int) -> a
net.youmi.android.appoffers.ah -> net.youmi.android.appoffers.ah:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ai -> net.youmi.android.appoffers.ai:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.aj -> net.youmi.android.appoffers.aj:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ak -> net.youmi.android.appoffers.ak:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.al -> net.youmi.android.appoffers.al:
    net.youmi.android.appoffers.ak a -> a
    android.content.Context b -> b
    void run() -> run
net.youmi.android.appoffers.am -> net.youmi.android.appoffers.am:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.an -> net.youmi.android.appoffers.an:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ao -> net.youmi.android.appoffers.ao:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ap -> net.youmi.android.appoffers.ap:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.aq -> net.youmi.android.appoffers.aq:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ar -> net.youmi.android.appoffers.ar:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.as -> net.youmi.android.appoffers.as:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.at -> net.youmi.android.appoffers.at:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.au -> net.youmi.android.appoffers.au:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.av -> net.youmi.android.appoffers.av:
    net.youmi.android.appoffers.au a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    int d -> d
    void run() -> run
net.youmi.android.appoffers.aw -> net.youmi.android.appoffers.aw:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ax -> net.youmi.android.appoffers.ax:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.ay -> net.youmi.android.appoffers.ay:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.az -> net.youmi.android.appoffers.az:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.b -> net.youmi.android.appoffers.b:
    int d -> d
    int a -> a
    net.youmi.android.appoffers.q b -> b
    android.content.Context c -> c
    int e -> e
    net.youmi.android.appoffers.ch a(java.lang.Void[]) -> a
    void a(net.youmi.android.appoffers.ch) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.appoffers.ba -> net.youmi.android.appoffers.ba:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
net.youmi.android.appoffers.bb -> net.youmi.android.appoffers.bb:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.bc -> net.youmi.android.appoffers.bc:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.bd -> net.youmi.android.appoffers.bd:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.be -> net.youmi.android.appoffers.be:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.bf -> net.youmi.android.appoffers.bf:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.bg -> net.youmi.android.appoffers.bg:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
net.youmi.android.appoffers.bh -> net.youmi.android.appoffers.bh:
    java.util.Hashtable a -> a
    net.youmi.android.appoffers.bh b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.appoffers.bh a() -> a
    void b(java.lang.String,java.lang.String) -> b
net.youmi.android.appoffers.bi -> net.youmi.android.appoffers.bi:
    java.util.Hashtable a -> a
    net.youmi.android.appoffers.bi b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.appoffers.bi a() -> a
    void b(java.lang.String,java.lang.String) -> b
net.youmi.android.appoffers.bj -> net.youmi.android.appoffers.bj:
    java.util.Hashtable a -> a
    net.youmi.android.appoffers.bj b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.appoffers.bj a() -> a
    void b(java.lang.String,java.lang.String) -> b
net.youmi.android.appoffers.bk -> net.youmi.android.appoffers.bk:
    java.util.Hashtable a -> a
    net.youmi.android.appoffers.bk b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    net.youmi.android.appoffers.bk a() -> a
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.appoffers.bl -> net.youmi.android.appoffers.bl:
    android.content.Context a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void a() -> a
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
net.youmi.android.appoffers.bm -> net.youmi.android.appoffers.bm:
    java.util.HashSet a -> a
    java.util.HashSet b -> b
    java.util.HashSet c -> c
    java.util.HashSet d -> d
    java.util.HashSet e -> e
    net.youmi.android.appoffers.cg f -> f
    long g -> g
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(java.io.File) -> a
    boolean a(android.content.Context,java.io.File) -> a
    boolean a(android.content.Context,net.youmi.android.appoffers.a,java.io.File,boolean,java.lang.String) -> a
net.youmi.android.appoffers.bn -> net.youmi.android.appoffers.bn:
    int a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String a(android.content.Context,int,java.lang.String,java.lang.String,int,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,int,java.lang.String,java.lang.String,int,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List) -> a
net.youmi.android.appoffers.bo -> net.youmi.android.appoffers.bo:
    long c -> c
    int a -> a
    long b -> b
    java.lang.String d -> d
    net.youmi.android.appoffers.ch a(android.content.Context) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
net.youmi.android.appoffers.bp -> net.youmi.android.appoffers.bp:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.appoffers.bp d -> d
    net.youmi.android.appoffers.bp a() -> a
    int a(android.content.Context) -> a
    boolean a(android.content.Context,int) -> a
    boolean b(android.content.Context,int) -> b
    boolean c(android.content.Context,int) -> c
    int b(android.content.Context) -> b
net.youmi.android.appoffers.bq -> net.youmi.android.appoffers.bq:
    android.location.Location a -> a
    net.youmi.android.appoffers.bl b -> b
    void a(android.content.Context) -> a
    void a(android.location.Location) -> a
    android.location.Location a() -> a
net.youmi.android.appoffers.br -> net.youmi.android.appoffers.br:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
net.youmi.android.appoffers.bs -> net.youmi.android.appoffers.bs:
    boolean a(android.content.Context,int,int,android.app.Notification) -> a
    boolean a(android.content.Context,int,android.app.Notification) -> a
    int a(int,int) -> a
    boolean a(android.content.Context,int,int) -> a
    boolean a(android.content.Context,int) -> a
net.youmi.android.appoffers.bt -> net.youmi.android.appoffers.bt:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.youmi.android.appoffers.bu -> net.youmi.android.appoffers.bu:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    int f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
    long f() -> f
    boolean g() -> g
    boolean a(long) -> a
net.youmi.android.appoffers.bv -> net.youmi.android.appoffers.bv:
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context) -> b
net.youmi.android.appoffers.bw -> net.youmi.android.appoffers.bw:
    net.youmi.android.appoffers.q a -> a
    boolean a() -> a
    net.youmi.android.appoffers.q b() -> b
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.appoffers.bx -> net.youmi.android.appoffers.bx:
    boolean a() -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.appoffers.by -> net.youmi.android.appoffers.by:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String[] d -> d
    java.lang.String e -> e
    net.youmi.android.appoffers.by f -> f
    net.youmi.android.appoffers.by g -> g
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    net.youmi.android.appoffers.by a(android.content.Context) -> a
    net.youmi.android.appoffers.by b(android.content.Context) -> b
net.youmi.android.appoffers.bz -> net.youmi.android.appoffers.bz:
    net.youmi.android.appoffers.es a(android.content.Context,java.lang.String) -> a
    net.youmi.android.appoffers.es b(android.content.Context,java.lang.String) -> b
    net.youmi.android.appoffers.es c(android.content.Context,java.lang.String) -> c
    net.youmi.android.appoffers.es a(android.content.Context,java.lang.String,int) -> a
net.youmi.android.appoffers.c -> net.youmi.android.appoffers.c:
    android.content.Context a -> a
    net.youmi.android.appoffers.ac b -> b
    int c -> c
    net.youmi.android.appoffers.es a(java.lang.Void[]) -> a
    void a(net.youmi.android.appoffers.es) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.appoffers.ca -> net.youmi.android.appoffers.ca:
    java.util.Hashtable a -> a
    java.util.Hashtable b -> b
    java.lang.String a(net.youmi.android.appoffers.y,java.lang.String) -> a
    java.lang.String a(int) -> a
net.youmi.android.appoffers.cb -> net.youmi.android.appoffers.cb:
    net.youmi.android.appoffers.cb a -> a
    java.util.LinkedList b -> b
    net.youmi.android.appoffers.cb a() -> a
    java.util.LinkedList b() -> b
    void a(net.youmi.android.appoffers.aa) -> a
    void b(net.youmi.android.appoffers.aa) -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
net.youmi.android.appoffers.cc -> net.youmi.android.appoffers.cc:
    net.youmi.android.appoffers.cc a -> a
    net.youmi.android.appoffers.cc a() -> a
    void a(android.content.Context,java.util.List) -> a
net.youmi.android.appoffers.cd -> net.youmi.android.appoffers.cd:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.HashMap h() -> h
    java.util.HashMap i() -> i
    java.util.HashMap j() -> j
    java.util.HashMap a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
net.youmi.android.appoffers.ce -> net.youmi.android.appoffers.ce:
    java.util.Hashtable a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    java.io.File d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    void a() -> a
    void a(android.content.Context,int,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String) -> a
    void b() -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.util.Hashtable c() -> c
    net.youmi.android.appoffers.ce a(java.lang.String) -> a
    void b(java.lang.String) -> b
    net.youmi.android.appoffers.ce b(android.content.Context,net.youmi.android.appoffers.a,java.io.File,java.lang.String) -> b
    boolean a(android.content.Context,net.youmi.android.appoffers.a,java.io.File,java.lang.String) -> a
    int a(net.youmi.android.appoffers.ce) -> a
    java.lang.String b(net.youmi.android.appoffers.ce) -> b
net.youmi.android.appoffers.cf -> net.youmi.android.appoffers.cf:
    net.youmi.android.appoffers.ce a -> a
    void run() -> run
net.youmi.android.appoffers.cg -> net.youmi.android.appoffers.cg:
    android.content.IntentFilter a -> a
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.appoffers.ch -> net.youmi.android.appoffers.ch:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int a() -> a
    java.util.List b() -> b
    net.youmi.android.appoffers.ch a(java.lang.String,java.util.List) -> a
    net.youmi.android.appoffers.ch c() -> c
    net.youmi.android.appoffers.ch a(java.lang.String) -> a
net.youmi.android.appoffers.ci -> net.youmi.android.appoffers.ci:
    android.content.Context a -> a
    java.io.File c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    net.youmi.android.appoffers.a m -> m
    android.app.Notification n -> n
    android.app.PendingIntent o -> o
    boolean p -> p
    java.lang.String b -> b
    int a() -> a
    void a(int) -> a
    void run() -> run
    void a(int,int) -> a
    void b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
    void d() -> d
    void f() -> f
    void e() -> e
    void a(java.lang.String) -> a
    boolean g() -> g
    boolean a(android.content.Context,net.youmi.android.appoffers.a,java.lang.String) -> a
    boolean a(android.content.Context,net.youmi.android.appoffers.a) -> a
    boolean h() -> h
    android.app.Notification a(boolean) -> a
    android.app.PendingIntent i() -> i
net.youmi.android.appoffers.cj -> net.youmi.android.appoffers.cj:
    android.content.Context a -> a
    int c -> c
    java.io.File d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    long n -> n
    int o -> o
    java.lang.String p -> p
    boolean q -> q
    java.lang.String b -> b
    int a() -> a
    void a(int) -> a
    void run() -> run
    void a(int,int) -> a
    void b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String) -> a
net.youmi.android.appoffers.ck -> net.youmi.android.appoffers.ck:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    android.content.Context d -> d
    int e -> e
    java.lang.StringBuilder f -> f
    void a(java.lang.String) -> a
    void a(android.content.Context,java.util.List) -> a
    void b(android.content.Context,java.util.List) -> b
    void a(android.content.Context) -> a
    void run() -> run
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean a(android.content.Context,int,java.lang.String) -> a
net.youmi.android.appoffers.cl -> net.youmi.android.appoffers.cl:
    int a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void run() -> run
    void a(net.youmi.android.appoffers.cl) -> a
    void b(net.youmi.android.appoffers.cl) -> b
    void c(net.youmi.android.appoffers.cl) -> c
    net.youmi.android.appoffers.bu a(java.io.File,java.lang.String) -> a
    void d(net.youmi.android.appoffers.cl) -> d
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(net.youmi.android.appoffers.bu,java.lang.String) -> a
    net.youmi.android.appoffers.bu a(java.lang.String,java.lang.String) -> a
net.youmi.android.appoffers.cm -> net.youmi.android.appoffers.cm:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    boolean g -> g
    java.lang.String[] h -> h
    void run() -> run
    void a(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void b(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> b
    void a(android.content.Context,int,java.lang.String,java.lang.String,boolean) -> a
    void c(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> c
net.youmi.android.appoffers.cn -> net.youmi.android.appoffers.cn:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.lang.String b -> b
    void run() -> run
net.youmi.android.appoffers.co -> net.youmi.android.appoffers.co:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void run() -> run
net.youmi.android.appoffers.cp -> net.youmi.android.appoffers.cp:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
    boolean a(android.content.Context,java.lang.String) -> a
net.youmi.android.appoffers.cq -> net.youmi.android.appoffers.cq:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
    void a(android.content.Context,java.lang.String) -> a
net.youmi.android.appoffers.cr -> net.youmi.android.appoffers.cr:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.appoffers.cs -> net.youmi.android.appoffers.cs:
    net.youmi.android.appoffers.y a -> a
    java.lang.String a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
net.youmi.android.appoffers.ct -> net.youmi.android.appoffers.ct:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a() -> a
net.youmi.android.appoffers.cu -> net.youmi.android.appoffers.cu:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.appoffers.cv -> net.youmi.android.appoffers.cv:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
    java.lang.String a(java.util.Properties,java.lang.String,java.lang.String) -> a
net.youmi.android.appoffers.cw -> net.youmi.android.appoffers.cw:
    java.util.Random a -> a
    int a(int) -> a
    java.lang.String b(int) -> b
net.youmi.android.appoffers.cx -> net.youmi.android.appoffers.cx:
    java.lang.String a -> a
    android.database.sqlite.SQLiteDatabase$CursorFactory b -> b
    int c -> c
    android.content.Context d -> d
    android.database.sqlite.SQLiteDatabase e -> e
    boolean f -> f
    boolean g -> g
    android.database.sqlite.SQLiteDatabase a() -> a
    android.database.sqlite.SQLiteDatabase b() -> b
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
net.youmi.android.appoffers.cy -> net.youmi.android.appoffers.cy:
    boolean a -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String) -> d
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.String) -> d
net.youmi.android.appoffers.cz -> net.youmi.android.appoffers.cz:
    void a(android.content.Context) -> a
net.youmi.android.appoffers.d -> net.youmi.android.appoffers.d:
    android.content.Context a -> a
    net.youmi.android.appoffers.CheckStatusNotifier b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.appoffers.da -> net.youmi.android.appoffers.da:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    net.youmi.android.appoffers.da e -> e
    net.youmi.android.appoffers.da f -> f
    net.youmi.android.appoffers.da g -> g
    void a() -> a
    java.lang.String a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
    boolean b(java.io.File) -> b
    void e() -> e
    net.youmi.android.appoffers.da b() -> b
    net.youmi.android.appoffers.da c() -> c
    net.youmi.android.appoffers.da d() -> d
    java.lang.String a(net.youmi.android.appoffers.da) -> a
    boolean a(net.youmi.android.appoffers.da,java.io.File) -> a
    long b(net.youmi.android.appoffers.da) -> b
net.youmi.android.appoffers.db -> net.youmi.android.appoffers.db:
    net.youmi.android.appoffers.da a -> a
    void run() -> run
net.youmi.android.appoffers.dc -> net.youmi.android.appoffers.dc:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.youmi.android.appoffers.dd -> net.youmi.android.appoffers.dd:
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.youmi.android.appoffers.de -> net.youmi.android.appoffers.de:
    java.lang.String a(android.content.Context) -> a
net.youmi.android.appoffers.df -> net.youmi.android.appoffers.df:
    android.graphics.Bitmap a(android.content.Context,java.lang.String,int) -> a
net.youmi.android.appoffers.dg -> net.youmi.android.appoffers.dg:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String b(android.content.Context,java.lang.String,java.util.List) -> b
net.youmi.android.appoffers.dh -> net.youmi.android.appoffers.dh:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.youmi.android.appoffers.ab) -> a
net.youmi.android.appoffers.di -> net.youmi.android.appoffers.di:
    void a(java.lang.String) -> a
net.youmi.android.appoffers.dj -> net.youmi.android.appoffers.dj:
    net.youmi.android.appoffers.ab a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.youmi.android.appoffers.dk -> net.youmi.android.appoffers.dk:
    java.util.regex.Pattern a -> a
    java.util.regex.Pattern b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(org.apache.http.HttpResponse,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.appoffers.dl -> net.youmi.android.appoffers.dl:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    int a(android.content.Context,java.lang.String) -> a
net.youmi.android.appoffers.dm -> net.youmi.android.appoffers.dm:
    void a() -> a
    android.webkit.WebViewClient a(net.youmi.android.appoffers.ae) -> a
    int b() -> b
    android.webkit.WebChromeClient a(net.youmi.android.appoffers.ad) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.appoffers.dn -> net.youmi.android.appoffers.dn:
    void a() -> a
net.youmi.android.appoffers.do -> net.youmi.android.appoffers.do:
    int a() -> a
net.youmi.android.appoffers.dp -> net.youmi.android.appoffers.dp:
    net.youmi.android.appoffers.ad a -> a
    net.youmi.android.appoffers.dp a(net.youmi.android.appoffers.ad) -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
net.youmi.android.appoffers.dq -> net.youmi.android.appoffers.dq:
    net.youmi.android.appoffers.ad a -> a
    net.youmi.android.appoffers.dq a(net.youmi.android.appoffers.ad) -> a
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
net.youmi.android.appoffers.dr -> net.youmi.android.appoffers.dr:
    net.youmi.android.appoffers.ad a -> a
    net.youmi.android.appoffers.dr a(net.youmi.android.appoffers.ad) -> a
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
net.youmi.android.appoffers.ds -> net.youmi.android.appoffers.ds:
    net.youmi.android.appoffers.ae a -> a
    net.youmi.android.appoffers.ds a(net.youmi.android.appoffers.ae) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.appoffers.dt -> net.youmi.android.appoffers.dt:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.appoffers.du -> net.youmi.android.appoffers.du:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.appoffers.dv -> net.youmi.android.appoffers.dv:
    boolean a(android.content.Context,int,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,java.lang.String) -> a
net.youmi.android.appoffers.dw -> net.youmi.android.appoffers.dw:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.youmi.android.appoffers.dx -> net.youmi.android.appoffers.dx:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.youmi.android.appoffers.dy -> net.youmi.android.appoffers.dy:
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.appoffers.dz -> net.youmi.android.appoffers.dz:
    boolean a(long) -> a
net.youmi.android.appoffers.e -> net.youmi.android.appoffers.e:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.appoffers.q d -> d
    net.youmi.android.appoffers.r a(java.lang.Void[]) -> a
    void a(net.youmi.android.appoffers.r) -> a
    void a(java.lang.Integer[]) -> a
    void b(net.youmi.android.appoffers.r) -> b
    void a(int) -> a
    void run() -> run
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
net.youmi.android.appoffers.ea -> net.youmi.android.appoffers.ea:
    boolean a -> a
    int b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    net.youmi.android.appoffers.ea i -> i
    boolean a() -> a
    int b() -> b
    net.youmi.android.appoffers.ea a(android.content.Context) -> a
    net.youmi.android.appoffers.ea b(android.content.Context) -> b
    int c() -> c
    int d() -> d
    int a(int) -> a
net.youmi.android.appoffers.eb -> net.youmi.android.appoffers.eb:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String) -> b
net.youmi.android.appoffers.ec -> net.youmi.android.appoffers.ec:
    void a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.appoffers.ed -> net.youmi.android.appoffers.ed:
    java.lang.String a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    net.youmi.android.appoffers.bt b(android.content.Context,java.lang.String) -> b
    android.content.pm.PackageInfo c(android.content.Context,java.lang.String) -> c
    android.content.pm.PackageInfo d(android.content.Context,java.lang.String) -> d
    int a(android.content.Context,java.lang.String,int) -> a
net.youmi.android.appoffers.ee -> net.youmi.android.appoffers.ee:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    boolean i(android.content.Context) -> i
net.youmi.android.appoffers.ef -> net.youmi.android.appoffers.ef:
    boolean a(android.content.Context) -> a
net.youmi.android.appoffers.eg -> net.youmi.android.appoffers.eg:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b(android.content.Context) -> b
net.youmi.android.appoffers.eh -> net.youmi.android.appoffers.eh:
    android.widget.TextView a -> a
    android.content.Context b -> b
    void a() -> a
    void b() -> b
net.youmi.android.appoffers.ei -> net.youmi.android.appoffers.ei:
    int a -> a
    int b -> b
    int c -> c
    android.graphics.RectF d -> d
    android.graphics.Paint e -> e
    void a(int) -> a
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
net.youmi.android.appoffers.ej -> net.youmi.android.appoffers.ej:
    int f -> f
    int g -> g
    net.youmi.android.appoffers.g h -> h
    int i -> i
    net.youmi.android.appoffers.YoumiOffersActivity a -> a
    net.youmi.android.appoffers.ea b -> b
    net.youmi.android.appoffers.eo c -> c
    net.youmi.android.appoffers.ei d -> d
    net.youmi.android.appoffers.eh e -> e
    android.os.Handler j -> j
    void m() -> m
    void n() -> n
    boolean g() -> g
    void i() -> i
    void h() -> h
    void a(boolean) -> a
    void b(boolean) -> b
    void o() -> o
    void p() -> p
    void a(int) -> a
    void q() -> q
    void b(java.lang.String) -> b
    net.youmi.android.appoffers.g b() -> b
    java.lang.String b(int) -> b
    boolean r() -> r
    boolean s() -> s
    void j() -> j
    boolean k() -> k
    boolean l() -> l
    void a(android.content.Context,net.youmi.android.appoffers.es) -> a
    void a(net.youmi.android.appoffers.g) -> a
    void f() -> f
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    android.content.Context a() -> a
    boolean c() -> c
    boolean a(java.lang.Runnable) -> a
    boolean d() -> d
    boolean e() -> e
net.youmi.android.appoffers.ek -> net.youmi.android.appoffers.ek:
    net.youmi.android.appoffers.ej a -> a
    void run() -> run
net.youmi.android.appoffers.el -> net.youmi.android.appoffers.el:
    net.youmi.android.appoffers.ej a -> a
    void run() -> run
net.youmi.android.appoffers.em -> net.youmi.android.appoffers.em:
    android.app.Activity a -> a
    android.widget.VideoView b -> b
    android.widget.ImageView c -> c
    android.widget.TextView d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    net.youmi.android.appoffers.f h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    void a() -> a
    boolean b() -> b
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(int) -> a
    void a(boolean) -> a
    int m() -> m
    void n() -> n
    boolean g() -> g
    void i() -> i
    void h() -> h
    void j() -> j
    boolean k() -> k
    boolean l() -> l
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void o() -> o
    void p() -> p
    void q() -> q
net.youmi.android.appoffers.en -> net.youmi.android.appoffers.en:
    net.youmi.android.appoffers.em a -> a
    void onClick(android.view.View) -> onClick
net.youmi.android.appoffers.eo -> net.youmi.android.appoffers.eo:
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    net.youmi.android.appoffers.ad f -> f
    net.youmi.android.appoffers.ae g -> g
    android.content.Context a -> a
    void a() -> a
    void a(net.youmi.android.appoffers.y) -> a
    void b() -> b
    void c() -> c
    void a(net.youmi.android.appoffers.ae) -> a
    void a(net.youmi.android.appoffers.ad) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
net.youmi.android.appoffers.ep -> net.youmi.android.appoffers.ep:
    net.youmi.android.appoffers.eo a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.youmi.android.appoffers.eq -> net.youmi.android.appoffers.eq:
    net.youmi.android.appoffers.YoumiOffersActivity a -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
net.youmi.android.appoffers.er -> net.youmi.android.appoffers.er:
    net.youmi.android.appoffers.YoumiOffersActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.appoffers.es -> net.youmi.android.appoffers.es:
    net.youmi.android.appoffers.es m -> m
    net.youmi.android.appoffers.es n -> n
    net.youmi.android.appoffers.es o -> o
    net.youmi.android.appoffers.es p -> p
    net.youmi.android.appoffers.es q -> q
    void a(net.youmi.android.appoffers.es,int) -> a
    net.youmi.android.appoffers.es a(int) -> a
    java.lang.String b(int) -> b
    java.lang.String c(int) -> c
    java.lang.String d(int) -> d
    net.youmi.android.appoffers.es a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int,boolean,int,long,java.lang.String) -> a
net.youmi.android.appoffers.f -> net.youmi.android.appoffers.f:
    java.lang.Boolean a(net.youmi.android.appoffers.em[]) -> a
    void b(net.youmi.android.appoffers.em[]) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
net.youmi.android.appoffers.g -> net.youmi.android.appoffers.g:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    boolean g() -> g
    boolean h() -> h
net.youmi.android.appoffers.h -> net.youmi.android.appoffers.h:
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.youmi.android.appoffers.i -> net.youmi.android.appoffers.i:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.youmi.android.appoffers.j -> net.youmi.android.appoffers.j:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.youmi.android.appoffers.k -> net.youmi.android.appoffers.k:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.youmi.android.appoffers.l -> net.youmi.android.appoffers.l:
    java.lang.String a -> a
    char b -> b
net.youmi.android.appoffers.m -> net.youmi.android.appoffers.m:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.appoffers.n -> net.youmi.android.appoffers.n:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.youmi.android.appoffers.o -> net.youmi.android.appoffers.o:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.youmi.android.appoffers.p -> net.youmi.android.appoffers.p:
    int a -> a
    long b -> b
    org.json.JSONObject a(android.content.Context,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.util.List) -> a
    int a() -> a
    void a(java.lang.String) -> a
    long b() -> b
net.youmi.android.appoffers.q -> net.youmi.android.appoffers.q:
    void a(android.content.Context,java.util.List) -> a
net.youmi.android.appoffers.r -> net.youmi.android.appoffers.r:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    long h -> h
    int i -> i
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    int g() -> g
    void c(int) -> c
    long h() -> h
    void a(long) -> a
    int i() -> i
    void d(int) -> d
net.youmi.android.appoffers.s -> net.youmi.android.appoffers.s:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a() -> a
    boolean d(android.content.Context,java.lang.String) -> d
    void b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean c(android.content.Context,java.lang.String) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    int g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    int i(android.content.Context) -> i
    java.lang.String b() -> b
net.youmi.android.appoffers.t -> net.youmi.android.appoffers.t:
    boolean a() -> a
net.youmi.android.appoffers.u -> net.youmi.android.appoffers.u:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
    boolean b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    long c(android.content.Context) -> c
    boolean a(android.content.Context,long) -> a
net.youmi.android.appoffers.v -> net.youmi.android.appoffers.v:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
net.youmi.android.appoffers.w -> net.youmi.android.appoffers.w:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    net.youmi.android.appoffers.w g -> g
    net.youmi.android.appoffers.w a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    boolean f() -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.youmi.android.appoffers.x -> net.youmi.android.appoffers.x:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
net.youmi.android.appoffers.y -> net.youmi.android.appoffers.y:
    android.content.Context a() -> a
    net.youmi.android.appoffers.g b() -> b
    boolean c() -> c
    boolean a(java.lang.Runnable) -> a
    boolean d() -> d
    boolean e() -> e
net.youmi.android.appoffers.z -> net.youmi.android.appoffers.z:
    java.lang.String a(net.youmi.android.appoffers.y,org.json.JSONObject) -> a
org.mozilla.intl.chardet.Big5Statistics -> org.a.a.a.a:
    float[] mFirstByteFreq -> a
    float mFirstByteStdDev -> b
    float mFirstByteMean -> c
    float mFirstByteWeight -> d
    float[] mSecondByteFreq -> e
    float mSecondByteStdDev -> f
    float mSecondByteMean -> g
    float mSecondByteWeight -> h
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.EUCJPStatistics -> org.a.a.a.b:
    float[] mFirstByteFreq -> a
    float mFirstByteStdDev -> b
    float mFirstByteMean -> c
    float mFirstByteWeight -> d
    float[] mSecondByteFreq -> e
    float mSecondByteStdDev -> f
    float mSecondByteMean -> g
    float mSecondByteWeight -> h
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.EUCKRStatistics -> org.a.a.a.c:
    float[] mFirstByteFreq -> a
    float mFirstByteStdDev -> b
    float mFirstByteMean -> c
    float mFirstByteWeight -> d
    float[] mSecondByteFreq -> e
    float mSecondByteStdDev -> f
    float mSecondByteMean -> g
    float mSecondByteWeight -> h
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.EUCTWStatistics -> org.a.a.a.d:
    float[] mFirstByteFreq -> a
    float mFirstByteStdDev -> b
    float mFirstByteMean -> c
    float mFirstByteWeight -> d
    float[] mSecondByteFreq -> e
    float mSecondByteStdDev -> f
    float mSecondByteMean -> g
    float mSecondByteWeight -> h
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.GB2312Statistics -> org.a.a.a.e:
    float[] mFirstByteFreq -> a
    float mFirstByteStdDev -> b
    float mFirstByteMean -> c
    float mFirstByteWeight -> d
    float[] mSecondByteFreq -> e
    float mSecondByteStdDev -> f
    float mSecondByteMean -> g
    float mSecondByteWeight -> h
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.nsBIG5Verifier -> org.a.a.a.f:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsCP1252Verifier -> org.a.a.a.g:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsDetector -> org.a.a.a.h:
    org.mozilla.intl.chardet.nsICharsetDetectionObserver mObserver -> a
    void Init(org.mozilla.intl.chardet.nsICharsetDetectionObserver) -> a
    boolean DoIt(byte[],int,boolean) -> a
    void Report(java.lang.String) -> a
org.mozilla.intl.chardet.nsEUCJPVerifier -> org.a.a.a.i:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsEUCKRVerifier -> org.a.a.a.j:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsEUCSampler -> org.a.a.a.k:
    int mTotal -> a
    int mThreshold -> b
    int mState -> c
    int[] mFirstByteCnt -> d
    int[] mSecondByteCnt -> e
    float[] mFirstByteFreq -> f
    float[] mSecondByteFreq -> g
    void Reset() -> a
    boolean EnoughData() -> b
    boolean GetSomeData() -> c
    boolean Sample(byte[],int) -> a
    void CalFreq() -> d
    float GetScore(float[],float,float[],float) -> a
    float GetScore(float[],float[]) -> a
org.mozilla.intl.chardet.nsEUCStatistics -> org.a.a.a.l:
    float[] mFirstByteFreq() -> a
    float mFirstByteWeight() -> b
    float[] mSecondByteFreq() -> c
    float mSecondByteWeight() -> d
org.mozilla.intl.chardet.nsEUCTWVerifier -> org.a.a.a.m:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsGB18030Verifier -> org.a.a.a.n:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsGB2312Verifier -> org.a.a.a.o:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsHZVerifier -> org.a.a.a.p:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsICharsetDetectionObserver -> org.a.a.a.q:
    void Notify(java.lang.String) -> a
org.mozilla.intl.chardet.nsISO2022CNVerifier -> org.a.a.a.r:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsISO2022JPVerifier -> org.a.a.a.s:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsISO2022KRVerifier -> org.a.a.a.t:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsPSMDetector -> org.a.a.a.u:
    org.mozilla.intl.chardet.nsVerifier[] mVerifier -> b
    org.mozilla.intl.chardet.nsEUCStatistics[] mStatisticsData -> c
    org.mozilla.intl.chardet.nsEUCSampler mSampler -> d
    byte[] mState -> e
    int[] mItemIdx -> f
    int mItems -> g
    int mClassItems -> h
    boolean mDone -> i
    boolean mRunSampler -> j
    boolean mClassRunSampler -> k
    void Reset() -> a
    void initVerifiers(int) -> a
    void Report(java.lang.String) -> a
    boolean HandleData(byte[],int) -> a
    void DataEnd() -> b
    void Sample(byte[],int) -> b
    void Sample(byte[],int,boolean) -> b
    java.lang.String[] getProbableCharsets() -> c
org.mozilla.intl.chardet.nsSJISVerifier -> org.a.a.a.v:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsUCS2BEVerifier -> org.a.a.a.w:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsUCS2LEVerifier -> org.a.a.a.x:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsUTF8Verifier -> org.a.a.a.y:
    int[] cclass -> a
    int[] states -> b
    int stFactor -> c
    java.lang.String charset -> d
    int[] cclass() -> a
    int[] states() -> b
    int stFactor() -> c
    java.lang.String charset() -> d
    boolean isUCS2() -> e
org.mozilla.intl.chardet.nsVerifier -> org.a.a.a.z:
    java.lang.String charset() -> d
    int stFactor() -> c
    int[] cclass() -> a
    int[] states() -> b
    boolean isUCS2() -> e
    byte getNextState(org.mozilla.intl.chardet.nsVerifier,byte,byte) -> a
org.socool.android.BookChapterJuanAdapter -> org.socool.android.a:
    android.view.LayoutInflater mInflater -> d
    org.socool.screader.bookmodel.BookChapter m_chapter -> e
    int m_currentChapter -> a
    int m_currentGroup -> b
    android.app.Activity m_baseActivity -> c
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
org.socool.android.BookChapterJuanAdapter$GroupViewHolder -> org.socool.android.b:
    android.widget.TextView title -> a
    android.widget.ImageView expand -> b
    org.socool.android.BookChapterJuanAdapter this$0 -> c
org.socool.android.BookChapterJuanAdapter$ViewHolder -> org.socool.android.c:
    android.widget.TextView title -> a
    android.widget.TextView percent -> b
    org.socool.android.BookChapterJuanAdapter this$0 -> c
org.socool.android.BookCommentAdapter -> org.socool.android.d:
    android.view.LayoutInflater mInflater -> d
    java.util.ArrayList m_bookmarks -> a
    android.app.Activity m_baseActivity -> b
    java.text.SimpleDateFormat format -> c
    int getCount() -> getCount
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void gotoBookmark(org.socool.screader.library.Bookmark) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.socool.android.BookCommentAdapter$ViewHolder -> org.socool.android.e:
    android.widget.TextView textBookmark -> a
    android.widget.TextView textTime -> b
    android.widget.TextView textPercent -> c
    org.socool.android.BookCommentAdapter this$0 -> d
org.socool.android.BookInfoActivity -> org.socool.android.BookInfoActivity:
    java.lang.String m_currentBookPath -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String access$0(org.socool.android.BookInfoActivity) -> a
org.socool.android.BookInfoActivity$1 -> org.socool.android.f:
    org.socool.android.BookInfoActivity this$0 -> a
    android.widget.Button val$btnOpen -> b
    android.widget.Button val$btnApp -> c
    android.widget.Button val$btnImport -> d
    void onClick(android.view.View) -> onClick
    org.socool.android.BookInfoActivity access$0(org.socool.android.BookInfoActivity$1) -> a
org.socool.android.BookInfoActivity$1$1 -> org.socool.android.g:
    org.socool.android.BookInfoActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.BookInfoActivity$1$2 -> org.socool.android.h:
    org.socool.android.BookInfoActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.BookInfoActivity$1$3 -> org.socool.android.i:
    org.socool.android.BookInfoActivity$1 this$1 -> a
    android.widget.EditText val$edit -> b
    android.widget.EditText val$editFile -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.BookInfoActivity$1$4 -> org.socool.android.j:
    org.socool.android.BookInfoActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.BookmarkAdapter -> org.socool.android.k:
    android.view.LayoutInflater mInflater -> d
    java.util.ArrayList m_bookmarks -> a
    android.app.Activity m_baseActivity -> b
    java.text.SimpleDateFormat format -> c
    int getCount() -> getCount
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void gotoBookmark(org.socool.screader.library.Bookmark) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.socool.android.BookmarkAdapter$ViewHolder -> org.socool.android.l:
    android.widget.TextView textBookmark -> a
    android.widget.TextView textTime -> b
    android.widget.TextView textPercent -> c
    org.socool.android.BookmarkAdapter this$0 -> d
org.socool.android.BookmarksActivity -> org.socool.android.BookmarksActivity:
    android.widget.Button m_btnChapter -> a
    android.widget.Button m_btnBookmark -> b
    android.widget.Button m_btnComment -> c
    android.widget.ImageButton m_btnApp -> d
    android.widget.ListView m_bookmark -> e
    android.widget.ListView m_bookComment -> f
    android.widget.ExpandableListView m_chapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void gotoPage(int) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
org.socool.android.BookmarksActivity$1 -> org.socool.android.m:
    org.socool.android.BookmarksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.socool.android.ButtonsPopupPanel -> org.socool.android.n:
    java.util.ArrayList myButtons -> c
    void addButton(java.lang.String,boolean,int) -> a
    void addButton(java.lang.String,boolean,java.lang.String) -> a
    void update() -> a
    void onClick(android.view.View) -> onClick
org.socool.android.ButtonsPopupPanel$ActionButton -> org.socool.android.o:
    java.lang.String ActionId -> a
    boolean IsCloseButton -> b
    org.socool.android.ButtonsPopupPanel this$0 -> c
org.socool.android.ChangeFontSizePopup -> org.socool.android.p:
    boolean myIsInProgress -> c
    void run() -> b
    java.lang.String getId() -> c
    void show_() -> d
    void update() -> a
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
    void setupNavigation(org.socool.android.PopupWindow) -> a
    void access$0(org.socool.android.ChangeFontSizePopup,boolean) -> a
    void access$1(org.socool.android.ChangeFontSizePopup,org.socool.android.PopupWindow) -> a
org.socool.android.ChangeFontSizePopup$1 -> org.socool.android.q:
    org.socool.android.ChangeFontSizePopup this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
org.socool.android.ChangeFontSizePopup$2 -> org.socool.android.r:
    org.socool.android.ChangeFontSizePopup this$0 -> a
    android.widget.ImageButton val$btnPlus -> b
    android.widget.ImageButton val$btnDec -> c
    void onClick(android.view.View) -> onClick
org.socool.android.ChangeFontSizePopup$3 -> org.socool.android.s:
    org.socool.android.ChangeFontSizePopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.socool.android.ChangeLightPopup -> org.socool.android.t:
    boolean myIsInProgress -> c
    void run() -> b
    java.lang.String getId() -> c
    void show_() -> d
    void update() -> a
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
    void setupNavigation(org.socool.android.PopupWindow) -> a
    void setupNavigation(org.socool.android.PopupWindow,int,boolean,boolean) -> a
    void access$0(org.socool.android.ChangeLightPopup,boolean) -> a
    void access$1(org.socool.android.ChangeLightPopup,org.socool.android.PopupWindow) -> a
    void access$2(org.socool.android.ChangeLightPopup,org.socool.android.PopupWindow,int,boolean,boolean) -> a
org.socool.android.ChangeLightPopup$1 -> org.socool.android.u:
    org.socool.android.ChangeLightPopup this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
org.socool.android.ChangeLightPopup$2 -> org.socool.android.v:
    org.socool.android.ChangeLightPopup this$0 -> a
    android.widget.ImageButton val$btnPlus -> b
    android.widget.ImageButton val$btnDec -> c
    void onClick(android.view.View) -> onClick
org.socool.android.ChangeLightPopup$3 -> org.socool.android.w:
    org.socool.android.ChangeLightPopup this$0 -> a
    android.widget.ImageButton val$btnNeight -> b
    android.widget.ImageButton val$btnAuto -> c
    void onClick(android.view.View) -> onClick
org.socool.android.ComparatorBookmark -> org.socool.android.x:
    int compare(org.socool.screader.library.Bookmark,org.socool.screader.library.Bookmark) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.socool.android.DictionaryUtil -> org.socool.android.y:
    int FLAG_INSTALLED_ONLY -> a
    int FLAG_SHOW_AS_DICTIONARY -> b
    int FLAG_SHOW_AS_TRANSLATOR -> c
    org.socool.zlibrary.options.ZLStringOption ourSingleWordTranslatorOption -> d
    org.socool.zlibrary.options.ZLStringOption ourMultiWordTranslatorOption -> e
    java.util.Map ourInfos -> f
    org.socool.android.PackageInfo firstInfo() -> c
    org.socool.zlibrary.options.ZLStringOption singleWordTranslatorOption() -> a
    org.socool.zlibrary.options.ZLStringOption multiWordTranslatorOption() -> b
    org.socool.android.PackageInfo getCurrentDictionaryInfo(boolean) -> a
    android.content.Intent getDictionaryIntent(java.lang.String,boolean) -> a
    android.content.Intent getDictionaryIntent(org.socool.android.PackageInfo,java.lang.String) -> a
    void openTextInDictionary(android.app.Activity,java.lang.String,boolean,int,int) -> a
    void openWordInDictionary(android.app.Activity,org.socool.zlibrary.text.ZLTextWord,org.socool.zlibrary.text.ZLTextRegion) -> a
    void installDictionaryIfNotInstalled(android.app.Activity,boolean) -> a
    void installDictionary(android.app.Activity,org.socool.android.PackageInfo) -> b
    void access$4(android.app.Activity,org.socool.android.PackageInfo) -> a
org.socool.android.DictionaryUtil$1 -> org.socool.android.z:
    android.app.Activity val$activity -> a
    org.socool.android.PackageInfo val$dictionaryInfo -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.FBReaderApplication -> org.socool.android.FBReaderApplication:
    void onCreate() -> onCreate
org.socool.android.FixBooksDirectoryActivity -> org.socool.android.FixBooksDirectoryActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.socool.android.FixBooksDirectoryActivity$1 -> org.socool.android.aa:
    org.socool.android.FixBooksDirectoryActivity this$0 -> a
    android.widget.EditText val$directoryView -> b
    void onClick(android.view.View) -> onClick
org.socool.android.FixBooksDirectoryActivity$2 -> org.socool.android.ab:
    org.socool.android.FixBooksDirectoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.socool.android.ImageViewActivity -> org.socool.android.ImageViewActivity:
    android.graphics.Bitmap myBitmap -> a
    org.socool.zlibrary.util.ZLColor myBgColor -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    org.socool.zlibrary.util.ZLColor access$0(org.socool.android.ImageViewActivity) -> a
    android.graphics.Bitmap access$1(org.socool.android.ImageViewActivity) -> b
org.socool.android.ImageViewActivity$ImageView -> org.socool.android.ac:
    android.graphics.Paint myPaint -> b
    int myDx -> c
    int myDy -> d
    float myZoomFactor -> e
    boolean myMotionControl -> f
    int mySavedX -> g
    int mySavedY -> h
    float myStartPinchDistance2 -> i
    float myStartZoomFactor -> j
    org.socool.android.ImageViewActivity this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void shift(int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onSingleTouchEvent(android.view.MotionEvent) -> a
    boolean onDoubleTouchEvent(android.view.MotionEvent) -> b
org.socool.android.LibraryActivity -> org.socool.android.LibraryActivity:
    boolean ourToBeKilled -> a
    org.socool.screader.library.Book mySelectedBook -> c
    org.socool.zlibrary.options.ZLStringOption BookSearchPatternOption -> b
    void onCreate(android.os.Bundle) -> onCreate
    org.socool.screader.FBTree getTreeByKey(org.socool.screader.FBTree$Key) -> a
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean isTreeSelected(org.socool.screader.FBTree) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void showBookInfo(org.socool.screader.library.Book) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void openSearchResults() -> e
    boolean onSearchRequested() -> onSearchRequested
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void createBookContextMenu(android.view.ContextMenu,org.socool.screader.library.Book) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onContextItemSelected(int,org.socool.screader.library.Book) -> a
    void openBook(org.socool.screader.library.Book) -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void tryToDeleteBook(org.socool.screader.library.Book) -> c
    void deleteBook(org.socool.screader.library.Book,int) -> a
    void onLibraryChanged(org.socool.screader.screader.FBReaderApp$ChangeListener$Code) -> a
    void access$0(org.socool.android.LibraryActivity,org.socool.screader.library.Book,int) -> a
    org.socool.screader.FBTree access$1(org.socool.android.LibraryActivity) -> a
    void access$2(org.socool.android.LibraryActivity) -> b
org.socool.android.LibraryActivity$1 -> org.socool.android.ad:
    org.socool.android.LibraryActivity this$0 -> a
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code val$code -> b
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$ChangeListener$Code -> c
    void run() -> run
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$ChangeListener$Code() -> a
org.socool.android.LibraryActivity$BookDeleter -> org.socool.android.ae:
    org.socool.screader.library.Book myBook -> b
    int myMode -> c
    org.socool.android.LibraryActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.LibraryTreeAdapter -> org.socool.android.af:
    org.socool.android.covers.CoverManager myCoverManager -> a
    android.view.View createView(android.view.View,android.view.ViewGroup,org.socool.screader.library.LibraryTree) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCoverResourceId(org.socool.screader.library.LibraryTree) -> a
org.socool.android.NavigationPopup -> org.socool.android.ag:
    boolean myIsInProgress -> c
    void run() -> b
    java.lang.String getId() -> c
    void show_() -> d
    void update() -> a
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
    void setupNavigation(org.socool.android.PopupWindow) -> a
    void access$0(org.socool.android.NavigationPopup,boolean) -> a
    void access$1(org.socool.android.NavigationPopup,org.socool.android.PopupWindow) -> a
org.socool.android.NavigationPopup$1 -> org.socool.android.ah:
    org.socool.android.NavigationPopup this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
org.socool.android.NavigationPopup$2 -> org.socool.android.ai:
    org.socool.android.NavigationPopup this$0 -> a
    android.widget.Button val$btnCancel -> b
    android.widget.Button val$btnOk -> c
    void onClick(android.view.View) -> onClick
org.socool.android.NavigationPopup$3 -> org.socool.android.aj:
    org.socool.android.NavigationPopup this$0 -> a
    android.widget.ImageButton val$btnLastChapter -> b
    android.widget.ImageButton val$btnNextChapter -> c
    void onClick(android.view.View) -> onClick
org.socool.android.PackageInfo -> org.socool.android.ak:
    java.lang.String Id -> a
    java.lang.String PackageName -> b
    java.lang.String ClassName -> c
    java.lang.String Title -> d
    java.lang.String IntentAction -> e
    java.lang.String IntentKey -> f
    java.lang.String IntentDataPattern -> g
org.socool.android.PopupPanel -> org.socool.android.al:
    org.socool.zlibrary.text.ZLTextWordCursor StartPosition -> a
    org.socool.android.PopupWindow myWindow -> b
    org.socool.android.SCReaderActivity myActivity -> c
    android.widget.RelativeLayout myRoot -> d
    java.lang.String getId() -> c
    void run() -> b
    void update() -> a
    void show_() -> d
    void hide_() -> e
    void removeWindow(android.app.Activity) -> a
    void removeAllWindows(android.app.Activity) -> b
    void restoreVisibilities() -> f
    void initPosition() -> g
    void storePosition() -> h
    void setPanelInfo(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> b
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
org.socool.android.PopupWindow -> org.socool.android.am:
    android.app.Activity myActivity -> a
    android.app.Activity getActivity() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void show() -> b
    void hide() -> c
    void addView(android.view.View) -> addView
org.socool.android.PopupWindow$1 -> org.socool.android.an:
    org.socool.android.PopupWindow this$0 -> a
    void run() -> run
org.socool.android.PopupWindow$2 -> org.socool.android.ao:
    org.socool.android.PopupWindow this$0 -> a
    void run() -> run
org.socool.android.PopupWindow$Location -> org.socool.android.ap:
    org.socool.android.PopupWindow$Location Bottom -> a
    org.socool.android.PopupWindow$Location Floating -> b
    org.socool.android.PopupWindow$Location[] ENUM$VALUES -> c
    org.socool.android.PopupWindow$Location[] values() -> values
    org.socool.android.PopupWindow$Location valueOf(java.lang.String) -> valueOf
org.socool.android.SCReaderActivity -> org.socool.android.SCReaderActivity:
    org.socool.zlibrary.view.ZLGLWidget m_bookViewGL -> a
    org.socool.zlibrary.view.ZLViewWidget m_bookView -> b
    android.widget.RelativeLayout m_mainLayout -> c
    boolean m_enableButtonLight -> d
    android.os.PowerManager$WakeLock myWakeLock -> f
    boolean myWakeLockToCreate -> g
    boolean myStartTimer -> h
    android.content.BroadcastReceiver myBatteryInfoReceiver -> e
    org.socool.zlibrary.filesystem.ZLFile fileFromIntent(android.content.Intent) -> a
    java.lang.Runnable getPostponedInitAction() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void createBookView() -> b
    void onDestroy() -> onDestroy
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void setButtonLight(boolean) -> a
    boolean onSearchRequested() -> onSearchRequested
    void showSelectionPanel() -> c
    void hideSelectionPanel() -> d
    void onPreferencesUpdate(int) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addMenuItem(android.view.Menu,java.lang.String,int) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void setScreenBrightnessAuto(boolean) -> b
    void setScreenBrightness(int) -> a
    void createWakeLock() -> e
    void switchWakeLock(boolean) -> c
    void onPause() -> onPause
    void onLowMemory() -> onLowMemory
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void access$0(org.socool.android.SCReaderActivity,boolean) -> a
org.socool.android.SCReaderActivity$1 -> org.socool.android.aq:
    org.socool.android.SCReaderActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.socool.android.SCReaderActivity$2 -> org.socool.android.ar:
    org.socool.android.SCReaderActivity this$0 -> a
    void run() -> run
    org.socool.android.SCReaderActivity access$0(org.socool.android.SCReaderActivity$2) -> a
org.socool.android.SCReaderActivity$2$1 -> org.socool.android.as:
    org.socool.android.SCReaderActivity$2 this$1 -> a
    void run() -> run
org.socool.android.SCReaderActivity$3 -> org.socool.android.at:
    org.socool.android.SCReaderActivity this$0 -> a
    void run() -> run
org.socool.android.SCReaderActivity$4 -> org.socool.android.au:
    org.socool.android.SCReaderActivity this$0 -> a
    org.socool.screader.screader.FBReaderApp val$fbReader -> b
    java.lang.String val$pattern -> c
    void run() -> run
    org.socool.android.SCReaderActivity access$0(org.socool.android.SCReaderActivity$4) -> a
org.socool.android.SCReaderActivity$4$1 -> org.socool.android.av:
    org.socool.android.SCReaderActivity$4 this$1 -> a
    org.socool.screader.screader.FBReaderApp val$fbReader -> b
    org.socool.android.TextSearchPopup val$popup -> c
    void run() -> run
org.socool.android.SCReaderActivity$4$2 -> org.socool.android.aw:
    org.socool.android.SCReaderActivity$4 this$1 -> a
    org.socool.android.TextSearchPopup val$popup -> b
    void run() -> run
org.socool.android.SCReaderActivity$5 -> org.socool.android.ax:
    org.socool.android.SCReaderActivity this$0 -> a
    org.socool.android.PopupPanel val$popup -> b
    org.socool.screader.screader.FBReaderApp val$fbreader -> c
    android.app.SearchManager val$manager -> d
    void onCancel() -> onCancel
org.socool.android.SCReaderActivity$TipRunner -> org.socool.android.ay:
    org.socool.android.SCReaderActivity this$0 -> a
    void run() -> run
org.socool.android.SelectionPopup -> org.socool.android.az:
    java.lang.String getId() -> c
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
    void move(int,int) -> a
    void run() -> b
    void onClick(android.view.View) -> onClick
    void update() -> a
org.socool.android.TextSearchPopup -> org.socool.android.ba:
    java.lang.String getId() -> c
    void hide_() -> e
    void createControlPanel(org.socool.android.SCReaderActivity,android.widget.RelativeLayout) -> a
    void run() -> b
    void onClick(android.view.View) -> onClick
    void update() -> a
org.socool.android.TipsActivity -> org.socool.android.TipsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void showText(java.lang.CharSequence) -> a
org.socool.android.TipsActivity$1 -> org.socool.android.bb:
    org.socool.android.TipsActivity this$0 -> a
    android.widget.CheckBox val$checkBox -> b
    void onClick(android.view.View) -> onClick
org.socool.android.TipsActivity$2 -> org.socool.android.bc:
    org.socool.android.TipsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.socool.android.action.AddBookmarkAction -> org.socool.android.a.a:
    void run(java.lang.Object[]) -> a
org.socool.android.action.FBAndroidAction -> org.socool.android.a.b:
    org.socool.android.SCReaderActivity BaseActivity -> a
org.socool.android.action.ProcessHyperlinkAction -> org.socool.android.a.c:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
    void openInBrowser(java.lang.String) -> a
org.socool.android.action.RunActivityAction -> org.socool.android.a.d:
    java.lang.Class myActivityClass -> c
    void run(java.lang.Object[]) -> a
org.socool.android.action.SelectionBookmarkAction -> org.socool.android.a.e:
    void run(java.lang.Object[]) -> a
org.socool.android.action.SelectionCopyAction -> org.socool.android.a.f:
    void run(java.lang.Object[]) -> a
org.socool.android.action.SelectionHidePanelAction -> org.socool.android.a.g:
    void run(java.lang.Object[]) -> a
org.socool.android.action.SelectionShowPanelAction -> org.socool.android.a.h:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
org.socool.android.action.SelectionTranslateAction -> org.socool.android.a.i:
    void run(java.lang.Object[]) -> a
org.socool.android.action.SetOrientationAction -> org.socool.android.a.j:
    java.lang.String myOptionValue -> c
    void setOrientation(android.app.Activity,java.lang.String) -> a
    org.socool.zlibrary.util.ZLBoolean3 isChecked() -> b
    void run(java.lang.Object[]) -> a
    boolean isVisible() -> c
org.socool.android.action.ShowBookInfoAction -> org.socool.android.a.k:
    boolean isVisible() -> c
    void run(java.lang.Object[]) -> a
org.socool.android.action.ShowBookmarksAction -> org.socool.android.a.l:
org.socool.android.action.ShowFontAction -> org.socool.android.a.m:
    boolean isVisible() -> c
    void run(java.lang.Object[]) -> a
org.socool.android.action.ShowLightAction -> org.socool.android.a.n:
    boolean isVisible() -> c
    void run(java.lang.Object[]) -> a
org.socool.android.action.ShowMenuAction -> org.socool.android.a.o:
    void run(java.lang.Object[]) -> a
org.socool.android.action.ShowNavigationAction -> org.socool.android.a.p:
    boolean isVisible() -> c
    void run(java.lang.Object[]) -> a
org.socool.android.action.ShowPreferencesAction -> org.socool.android.a.q:
    void run(java.lang.Object[]) -> a
org.socool.android.bookshelf.BooksAdapter -> org.socool.android.bookshelf.a:
    android.view.LayoutInflater mInflater -> a
    org.socool.android.bookshelf.ShelvesActivity mActivity -> b
    org.socool.android.bookshelf.FastBitmapDrawable[] mDefaultCoverSet -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.socool.android.bookshelf.BooksAdapter$BookViewHolder -> org.socool.android.bookshelf.b:
    org.socool.android.bookshelf.BubbleTextView title -> a
    java.lang.String bookId -> b
    org.socool.android.bookshelf.BooksAdapter this$0 -> c
org.socool.android.bookshelf.BubbleTextView -> org.socool.android.bookshelf.c:
    android.graphics.RectF mRect -> a
    android.graphics.Paint mPaint -> b
    android.graphics.drawable.Drawable mDrawableBottom -> c
    boolean mBackgroundSizeChanged -> d
    android.graphics.drawable.Drawable mBackground -> e
    float mCornerRadius -> f
    float mPaddingH -> g
    float mPaddingV -> h
    boolean setFrame(int,int,int,int) -> setFrame
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void draw(android.graphics.Canvas) -> draw
    void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
org.socool.android.bookshelf.FastBitmapDrawable -> org.socool.android.bookshelf.d:
    android.graphics.Bitmap mBitmap -> a
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
org.socool.android.bookshelf.LayerDrawable -> org.socool.android.bookshelf.e:
    org.socool.android.bookshelf.LayerDrawable$LayerState mLayerState -> a
    int[] mPaddingL -> b
    int[] mPaddingT -> c
    int[] mPaddingR -> d
    int[] mPaddingB -> e
    android.graphics.Rect mTmpRect -> f
    android.graphics.drawable.Drawable mParent -> g
    boolean mBlockSetBounds -> h
    org.socool.android.bookshelf.LayerDrawable$LayerState createConstantState(org.socool.android.bookshelf.LayerDrawable$LayerState) -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    boolean getPadding(android.graphics.Rect) -> getPadding
    boolean setVisible(boolean,boolean) -> setVisible
    void setDither(boolean) -> setDither
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    boolean onLevelChange(int) -> onLevelChange
    void setBounds(int,int,int,int) -> setBounds
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean reapplyPadding(int,org.socool.android.bookshelf.LayerDrawable$Rec) -> a
    void ensurePadding() -> a
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
org.socool.android.bookshelf.LayerDrawable$LayerState -> org.socool.android.bookshelf.f:
    int mNum -> a
    org.socool.android.bookshelf.LayerDrawable$Rec[] mArray -> b
    int mChangingConfigurations -> c
    int mChildrenChangingConfigurations -> d
    boolean mHaveOpacity -> e
    int mOpacity -> f
    boolean mHaveStateful -> g
    boolean mStateful -> h
    boolean mCheckedConstantState -> i
    boolean mCanConstantState -> j
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    int getOpacity() -> a
    boolean isStateful() -> b
    boolean canConstantState() -> c
org.socool.android.bookshelf.LayerDrawable$Rec -> org.socool.android.bookshelf.g:
    android.graphics.drawable.Drawable mDrawable -> a
    int mInsetL -> b
    int mInsetT -> c
    int mInsetR -> d
    int mInsetB -> e
    int mId -> f
org.socool.android.bookshelf.ShelvesActivity -> org.socool.android.bookshelf.ShelvesActivity:
    org.socool.android.bookshelf.ShelvesView mGrid -> c
    boolean m_realExit -> a
    java.util.ArrayList m_bookList -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onLibraryChanged(org.socool.screader.screader.FBReaderApp$ChangeListener$Code) -> a
    void tryToDeleteBook(org.socool.screader.library.Book) -> b
    void deleteBook(org.socool.screader.library.Book,int) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void showBookInfo(org.socool.screader.library.Book) -> a
    void openBook(org.socool.screader.library.Book) -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(org.socool.android.bookshelf.ShelvesActivity,org.socool.screader.library.Book,int) -> a
org.socool.android.bookshelf.ShelvesActivity$1 -> org.socool.android.bookshelf.h:
    org.socool.android.bookshelf.ShelvesActivity this$0 -> a
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code val$code -> b
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$ChangeListener$Code -> c
    void run() -> run
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$ChangeListener$Code() -> a
org.socool.android.bookshelf.ShelvesActivity$BookDeleter -> org.socool.android.bookshelf.i:
    org.socool.screader.library.Book myBook -> b
    int myMode -> c
    org.socool.android.bookshelf.ShelvesActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.bookshelf.ShelvesActivity$BookViewer -> org.socool.android.bookshelf.j:
    org.socool.android.bookshelf.ShelvesActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.socool.android.bookshelf.ShelvesView -> org.socool.android.bookshelf.k:
    android.graphics.Bitmap mShelfBackground -> a
    int mShelfWidth -> b
    int mShelfHeight -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setPressed(boolean) -> setPressed
org.socool.android.bookshelf.TransitionDrawable -> org.socool.android.bookshelf.l:
    int mTransitionState -> b
    boolean mReverse -> c
    long mStartTimeMillis -> d
    int mFrom -> e
    int mTo -> f
    int mDuration -> g
    org.socool.android.bookshelf.TransitionDrawable$TransitionState mState -> h
    org.socool.android.bookshelf.LayerDrawable$LayerState createConstantState(org.socool.android.bookshelf.LayerDrawable$LayerState) -> a
    void startTransition(int) -> a
    void resetTransition() -> a
    void draw(android.graphics.Canvas) -> draw
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void setBounds(int,int,int,int) -> setBounds
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    boolean setVisible(boolean,boolean) -> setVisible
    boolean isStateful() -> isStateful
    void setDither(boolean) -> setDither
    boolean getPadding(android.graphics.Rect) -> getPadding
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    int getIntrinsicHeight() -> getIntrinsicHeight
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getChangingConfigurations() -> getChangingConfigurations
org.socool.android.bookshelf.TransitionDrawable$TransitionState -> org.socool.android.bookshelf.m:
    int mAlpha -> e
    int mDuration -> f
    boolean mCrossFade -> g
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
org.socool.android.covers.CoverCache -> org.socool.android.covers.CoverCache:
    java.lang.Object NULL_BITMAP -> b
    int HoldersCounter -> a
    java.util.Map myBitmaps -> c
    android.graphics.Bitmap getBitmap(org.socool.screader.FBTree$Key) -> a
    void putBitmap(org.socool.screader.FBTree$Key,android.graphics.Bitmap) -> a
org.socool.android.covers.CoverCache$1 -> org.socool.android.covers.a:
    org.socool.android.covers.CoverCache this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.socool.android.covers.CoverCache$NullObjectException -> org.socool.android.covers.CoverCache$NullObjectException:
org.socool.android.covers.CoverHolder -> org.socool.android.covers.b:
    org.socool.android.covers.CoverManager myManager -> d
    android.widget.ImageView CoverView -> a
    org.socool.screader.FBTree$Key Key -> b
    org.socool.android.covers.CoverHolder$CoverSyncRunnable coverSyncRunnable -> e
    java.util.concurrent.Future coverBitmapTask -> c
    java.lang.Runnable coverBitmapRunnable -> f
    void setKey(org.socool.screader.FBTree$Key) -> a
    void access$0(org.socool.android.covers.CoverHolder,org.socool.android.covers.CoverHolder$CoverSyncRunnable) -> a
    org.socool.android.covers.CoverHolder$CoverSyncRunnable access$1(org.socool.android.covers.CoverHolder) -> a
    org.socool.android.covers.CoverManager access$2(org.socool.android.covers.CoverHolder) -> b
    void access$3(org.socool.android.covers.CoverHolder,java.lang.Runnable) -> a
    java.lang.Runnable access$4(org.socool.android.covers.CoverHolder) -> c
org.socool.android.covers.CoverHolder$CoverBitmapRunnable -> org.socool.android.covers.c:
    org.socool.zlibrary.image.ZLLoadableImage myImage -> b
    org.socool.screader.FBTree$Key myKey -> c
    org.socool.android.covers.CoverHolder this$0 -> a
    void run() -> run
    org.socool.screader.FBTree$Key access$0(org.socool.android.covers.CoverHolder$CoverBitmapRunnable) -> a
    org.socool.android.covers.CoverHolder access$1(org.socool.android.covers.CoverHolder$CoverBitmapRunnable) -> b
org.socool.android.covers.CoverHolder$CoverBitmapRunnable$1 -> org.socool.android.covers.d:
    org.socool.android.covers.CoverHolder$CoverBitmapRunnable this$1 -> a
    android.graphics.Bitmap val$coverBitmap -> b
    void run() -> run
org.socool.android.covers.CoverHolder$CoverSyncRunnable -> org.socool.android.covers.e:
    org.socool.zlibrary.image.ZLLoadableImage myImage -> b
    org.socool.screader.FBTree$Key myKey -> c
    org.socool.android.covers.CoverHolder this$0 -> a
    void run() -> run
    org.socool.screader.FBTree$Key access$0(org.socool.android.covers.CoverHolder$CoverSyncRunnable) -> a
    org.socool.zlibrary.image.ZLLoadableImage access$1(org.socool.android.covers.CoverHolder$CoverSyncRunnable) -> b
    org.socool.android.covers.CoverHolder access$2(org.socool.android.covers.CoverHolder$CoverSyncRunnable) -> c
org.socool.android.covers.CoverHolder$CoverSyncRunnable$1 -> org.socool.android.covers.f:
    org.socool.android.covers.CoverHolder$CoverSyncRunnable this$1 -> a
    void run() -> run
org.socool.android.covers.CoverManager -> org.socool.android.covers.g:
    org.socool.android.covers.CoverCache Cache -> a
    java.util.concurrent.ExecutorService myPool -> b
    android.app.Activity myActivity -> c
    int myCoverWidth -> d
    int myCoverHeight -> e
    int[] m_coverResId -> f
    android.graphics.Paint EDGE_PAINT -> g
    android.graphics.Paint END_EDGE_PAINT -> h
    android.graphics.Paint FOLD_PAINT -> i
    android.graphics.Paint SHADOW_PAINT -> j
    android.graphics.Paint SCALE_PAINT -> k
    org.socool.android.bookshelf.FastBitmapDrawable NULL_DRAWABLE -> l
    java.util.HashMap sArtCache -> m
    void runOnUiThread(java.lang.Runnable) -> a
    void setupCoverView(android.widget.ImageView) -> a
    android.graphics.Bitmap getBitmap(org.socool.zlibrary.image.ZLImage) -> a
    void setCoverForView(org.socool.android.covers.CoverHolder,org.socool.zlibrary.image.ZLLoadableImage) -> a
    org.socool.android.covers.CoverHolder getHolder(android.widget.ImageView,org.socool.screader.FBTree) -> b
    boolean trySetCoverImage(android.widget.ImageView,org.socool.screader.FBTree) -> a
    int getCoverResIdByIndex(int) -> a
    void cleanupCache() -> a
org.socool.android.covers.CoverManager$MinPriorityThreadFactory -> org.socool.android.covers.h:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.socool.android.preferences.AnimationSpeedPreference -> org.socool.android.preferences.a:
    org.socool.zlibrary.options.ZLIntegerRangeOption myOption -> a
    org.socool.zlibrary.filesystem.ZLResource myResource -> b
    android.widget.SeekBar mySlider -> c
    void onBindDialogView(android.view.View) -> onBindDialogView
    void onClick(android.content.DialogInterface,int) -> onClick
    android.widget.SeekBar access$0(org.socool.android.preferences.AnimationSpeedPreference) -> a
    org.socool.zlibrary.filesystem.ZLResource access$1(org.socool.android.preferences.AnimationSpeedPreference) -> b
org.socool.android.preferences.AnimationSpeedPreference$SeekBarDrawable -> org.socool.android.preferences.b:
    android.graphics.drawable.Drawable myBase -> b
    android.graphics.Paint myPaint -> c
    android.graphics.Paint myOutlinePaint -> d
    org.socool.android.preferences.AnimationSpeedPreference this$0 -> a
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    boolean isStateful() -> isStateful
    boolean onLevelChange(int) -> onLevelChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.socool.android.preferences.FontOption -> org.socool.android.preferences.c:
    org.socool.zlibrary.options.ZLStringOption myOption -> a
    java.lang.String UNCHANGED -> c
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.PreferenceActivity -> org.socool.android.preferences.PreferenceActivity:
    java.lang.String SCREEN_KEY -> a
    java.util.HashMap myScreenMap -> c
    android.preference.PreferenceScreen myScreen -> d
    org.socool.zlibrary.filesystem.ZLResource Resource -> b
    org.socool.android.preferences.PreferenceActivity$Screen createPreferenceScreen(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void init(android.content.Intent) -> a
org.socool.android.preferences.PreferenceActivity$1 -> org.socool.android.preferences.d:
    org.socool.android.preferences.PreferenceActivity this$0 -> a
    org.socool.android.preferences.ZLPreferenceSet val$bgPreferences -> c
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.PreferenceActivity$2 -> org.socool.android.preferences.e:
    org.socool.android.preferences.PreferenceActivity this$0 -> a
    org.socool.screader.screader.ZLKeyBindings val$keyBindings -> b
    void onClick() -> onClick
org.socool.android.preferences.PreferenceActivity$3 -> org.socool.android.preferences.f:
    org.socool.android.preferences.PreferenceActivity this$0 -> a
    android.preference.Preference val$fbPreferenceFeedback -> b
    android.preference.Preference val$fbPreferenceUpdate -> c
    android.preference.Preference val$fbPreferenceRemove -> d
    android.preference.Preference val$fbPreferenceAbout -> e
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    org.socool.android.preferences.PreferenceActivity access$0(org.socool.android.preferences.PreferenceActivity$3) -> a
org.socool.android.preferences.PreferenceActivity$3$1 -> org.socool.android.preferences.g:
    org.socool.android.preferences.PreferenceActivity$3 this$1 -> a
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> a
org.socool.android.preferences.PreferenceActivity$3$2 -> org.socool.android.preferences.h:
    org.socool.android.preferences.PreferenceActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.preferences.PreferenceActivity$3$3 -> org.socool.android.preferences.i:
    org.socool.android.preferences.PreferenceActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.android.preferences.PreferenceActivity$Screen -> org.socool.android.preferences.j:
    org.socool.zlibrary.filesystem.ZLResource Resource -> a
    android.preference.PreferenceScreen myScreen -> c
    org.socool.android.preferences.PreferenceActivity this$0 -> b
    android.preference.Preference addPreference(android.preference.Preference) -> a
    android.preference.Preference addOption(org.socool.zlibrary.options.ZLBooleanOption,java.lang.String) -> a
    android.preference.Preference addOption(org.socool.zlibrary.options.ZLColorOption,java.lang.String) -> a
    android.preference.Preference addOption(org.socool.zlibrary.options.ZLEnumOption,java.lang.String) -> a
    android.preference.PreferenceScreen access$1(org.socool.android.preferences.PreferenceActivity$Screen) -> a
org.socool.android.preferences.WallpaperPreference -> org.socool.android.preferences.k:
    boolean $assertionsDisabled -> b
    void onDialogClosed(boolean) -> onDialogClosed
    void setLists(java.lang.String[],java.lang.String[]) -> a
    boolean setInitialValue(java.lang.String) -> a
org.socool.android.preferences.ZLBooleanPreference -> org.socool.android.preferences.l:
    org.socool.zlibrary.options.ZLBooleanOption myOption -> a
    void onClick() -> onClick
org.socool.android.preferences.ZLCheckBoxPreference -> org.socool.android.preferences.m:
org.socool.android.preferences.ZLChoicePreference -> org.socool.android.preferences.n:
    org.socool.zlibrary.options.ZLIntegerRangeOption myOption -> c
    boolean $assertionsDisabled -> a
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.ZLColorPreference -> org.socool.android.preferences.o:
    org.socool.zlibrary.options.ZLColorOption myOption -> a
    android.widget.SeekBar myRedSlider -> b
    android.widget.SeekBar myGreenSlider -> c
    android.widget.SeekBar myBlueSlider -> d
    android.graphics.drawable.GradientDrawable myPreviewDrawable -> e
    android.widget.SeekBar createSlider(android.view.View,int,int,java.lang.String) -> a
    void onBindDialogView(android.view.View) -> onBindDialogView
    void onClick(android.content.DialogInterface,int) -> onClick
    android.graphics.drawable.GradientDrawable access$0(org.socool.android.preferences.ZLColorPreference) -> a
    android.widget.SeekBar access$1(org.socool.android.preferences.ZLColorPreference) -> b
    android.widget.SeekBar access$2(org.socool.android.preferences.ZLColorPreference) -> c
    android.widget.SeekBar access$3(org.socool.android.preferences.ZLColorPreference) -> d
org.socool.android.preferences.ZLColorPreference$1 -> org.socool.android.preferences.p:
    org.socool.android.preferences.ZLColorPreference this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.socool.android.preferences.ZLColorPreference$SeekBarDrawable -> org.socool.android.preferences.q:
    android.widget.SeekBar mySlider -> a
    android.graphics.drawable.Drawable myBase -> b
    java.lang.String myText -> c
    android.graphics.Paint myPaint -> d
    android.graphics.Paint myOutlinePaint -> e
    boolean myLabelOnRight -> f
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    boolean isStateful() -> isStateful
    boolean onLevelChange(int) -> onLevelChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.socool.android.preferences.ZLEnumPreference -> org.socool.android.preferences.r:
    org.socool.zlibrary.options.ZLEnumOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.ZLIntegerRangePreference -> org.socool.android.preferences.s:
    org.socool.zlibrary.options.ZLIntegerRangeOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.ZLPreferenceSet -> org.socool.android.preferences.t:
    java.util.LinkedList myPreferences -> a
    void add(android.preference.Preference) -> a
    void setEnabled(boolean) -> a
org.socool.android.preferences.ZLStringChoicePreference -> org.socool.android.preferences.u:
    org.socool.zlibrary.options.ZLStringOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.preferences.ZLStringListPreference -> org.socool.android.preferences.v:
    org.socool.zlibrary.filesystem.ZLResource myResource -> a
    boolean $assertionsDisabled -> b
    void setList(java.lang.String[]) -> a
    void setLists(java.lang.String[],java.lang.String[]) -> a
    boolean setInitialValue(java.lang.String) -> a
    void onDialogClosed(boolean) -> onDialogClosed
org.socool.android.tree.TreeActivity -> org.socool.android.tree.TreeActivity:
    org.socool.screader.FBTree myCurrentTree -> a
    org.socool.screader.FBTree$Key myCurrentKey -> b
    java.util.ArrayList myHistory -> c
    int[] $SWITCH_TABLE$org$socool$screader$FBTree$Status -> d
    void onCreate(android.os.Bundle) -> onCreate
    org.socool.android.tree.TreeAdapter getListAdapter() -> a
    org.socool.screader.FBTree getCurrentTree() -> b
    void onNewIntent(android.content.Intent) -> onNewIntent
    org.socool.screader.FBTree getTreeByKey(org.socool.screader.FBTree$Key) -> a
    boolean isTreeSelected(org.socool.screader.FBTree) -> a
    boolean isTreeInvisible(org.socool.screader.FBTree) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void openTree(org.socool.screader.FBTree) -> c
    void onCurrentTreeChanged() -> c
    void openTree(org.socool.screader.FBTree,org.socool.screader.FBTree,boolean) -> a
    void init(android.content.Intent) -> a
    void openTreeInternal(org.socool.screader.FBTree,org.socool.screader.FBTree,boolean) -> b
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void access$1(org.socool.android.tree.TreeActivity,org.socool.screader.FBTree,org.socool.screader.FBTree,boolean) -> a
    int[] $SWITCH_TABLE$org$socool$screader$FBTree$Status() -> d
org.socool.android.tree.TreeActivity$1 -> org.socool.android.tree.a:
    org.socool.android.tree.TreeActivity this$0 -> a
    android.content.Intent val$intent -> b
    void run() -> run
org.socool.android.tree.TreeActivity$2 -> org.socool.android.tree.b:
    org.socool.android.tree.TreeActivity this$0 -> a
    org.socool.screader.FBTree val$tree -> b
    void run() -> run
org.socool.android.tree.TreeActivity$3 -> org.socool.android.tree.c:
    org.socool.android.tree.TreeActivity this$0 -> a
    org.socool.screader.FBTree val$tree -> b
    org.socool.screader.FBTree val$treeToSelect -> c
    boolean val$storeInHistory -> d
    void run() -> run
org.socool.android.tree.TreeActivity$4 -> org.socool.android.tree.d:
    org.socool.android.tree.TreeActivity this$0 -> a
    int val$index -> b
    void run() -> run
org.socool.android.tree.TreeAdapter -> org.socool.android.tree.e:
    org.socool.android.tree.TreeActivity myActivity -> a
    java.util.List myItems -> b
    org.socool.android.tree.TreeActivity getActivity() -> a
    void remove(org.socool.screader.FBTree) -> a
    void replaceAll(java.util.Collection) -> a
    int getCount() -> getCount
    org.socool.screader.FBTree getItem(int) -> a
    long getItemId(int) -> getItemId
    int getIndex(org.socool.screader.FBTree) -> b
    org.socool.screader.FBTree getFirstSelectedItem() -> b
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(org.socool.android.tree.TreeAdapter) -> a
org.socool.android.tree.TreeAdapter$1 -> org.socool.android.tree.f:
    org.socool.android.tree.TreeAdapter this$0 -> a
    org.socool.screader.FBTree val$item -> b
    void run() -> run
org.socool.android.tree.TreeAdapter$4 -> org.socool.android.tree.g:
    org.socool.android.tree.TreeAdapter this$0 -> a
    java.util.Collection val$items -> b
    void run() -> run
org.socool.android.util.PackageUtil -> org.socool.android.b.a:
    android.net.Uri marketUri(java.lang.String) -> a
    boolean canBeStarted(android.content.Context,android.content.Intent,boolean) -> a
    boolean installFromMarket(android.app.Activity,java.lang.String) -> a
org.socool.android.util.SQLiteUtil -> org.socool.android.b.b:
    void bindString(android.database.sqlite.SQLiteStatement,int,java.lang.String) -> a
    void bindDate(android.database.sqlite.SQLiteStatement,int,java.util.Date) -> a
    java.util.Date getDate(android.database.Cursor,int) -> a
org.socool.android.util.UIUtil -> org.socool.android.b.c:
    java.lang.Object ourMonitor -> a
    android.app.ProgressDialog ourProgress -> b
    java.util.Queue ourTaskQueue -> c
    android.os.Handler ourProgressHandler -> d
    boolean init() -> e
    void wait(java.lang.String,java.lang.Runnable,android.content.Context) -> a
    void runWithMessage(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> a
    void showMessageText(android.content.Context,java.lang.String) -> a
    void showErrorMessage(android.content.Context,java.lang.String) -> b
    void showErrorMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    void shareBook(android.app.Activity,org.socool.screader.library.Book) -> a
    java.lang.Object access$0() -> a
    java.util.Queue access$1() -> b
    android.app.ProgressDialog access$2() -> c
    void access$3(android.app.ProgressDialog) -> a
    android.os.Handler access$4() -> d
org.socool.android.util.UIUtil$1 -> org.socool.android.b.d:
    void handleMessage(android.os.Message) -> handleMessage
org.socool.android.util.UIUtil$2 -> org.socool.android.b.e:
    android.app.ProgressDialog val$currentProgress -> a
    void run() -> run
org.socool.android.util.UIUtil$3 -> org.socool.android.b.f:
    android.app.Activity val$activity -> a
    java.lang.String val$message -> b
    boolean val$minPriority -> c
    java.lang.Runnable val$action -> d
    java.lang.Runnable val$postAction -> e
    void run() -> run
org.socool.android.util.UIUtil$3$1 -> org.socool.android.b.g:
    org.socool.android.util.UIUtil$3 this$1 -> a
    java.lang.Runnable val$action -> b
    android.app.Activity val$activity -> c
    android.app.ProgressDialog val$progress -> d
    java.lang.Runnable val$postAction -> e
    void run() -> run
org.socool.android.util.UIUtil$3$1$1 -> org.socool.android.b.h:
    org.socool.android.util.UIUtil$3$1 this$2 -> a
    android.app.ProgressDialog val$progress -> b
    java.lang.Runnable val$postAction -> c
    void run() -> run
org.socool.android.util.UIUtil$Pair -> org.socool.android.b.i:
    java.lang.Runnable Action -> a
    java.lang.String Message -> b
org.socool.screader.FBTree -> org.socool.a.a:
    org.socool.zlibrary.image.ZLImage myCover -> a
    boolean myCoverRequested -> d
    org.socool.screader.FBTree$Key myKey -> e
    org.socool.screader.FBTree$Key getUniqueKey() -> a
    java.lang.String getStringId() -> b
    org.socool.screader.FBTree getSubTree(java.lang.String) -> a
    int indexOf(org.socool.screader.FBTree) -> a
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> d
    java.lang.String getSortKey() -> e
    int compareTo(org.socool.screader.FBTree) -> b
    java.lang.String getSummary() -> f
    org.socool.zlibrary.image.ZLImage createCover() -> g
    boolean canUseParentCover() -> h
    org.socool.zlibrary.image.ZLImage getCover() -> i
    org.socool.screader.FBTree$Status getOpeningStatus() -> j
    java.lang.String getOpeningStatusMessage() -> k
    void waitForOpening() -> l
    int compareTo(java.lang.Object) -> compareTo
org.socool.screader.FBTree$Key -> org.socool.a.b:
    org.socool.screader.FBTree$Key Parent -> a
    java.lang.String Id -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.socool.screader.FBTree$Status -> org.socool.a.c:
    org.socool.screader.FBTree$Status READY_TO_OPEN -> a
    org.socool.screader.FBTree$Status WAIT_FOR_OPEN -> b
    org.socool.screader.FBTree$Status ALWAYS_RELOAD_BEFORE_OPENING -> c
    org.socool.screader.FBTree$Status CANNOT_OPEN -> d
    org.socool.screader.FBTree$Status[] ENUM$VALUES -> e
    org.socool.screader.FBTree$Status[] values() -> values
    org.socool.screader.FBTree$Status valueOf(java.lang.String) -> valueOf
org.socool.screader.FileUtil -> org.socool.a.d:
    java.lang.String getExtension(java.lang.String) -> a
org.socool.screader.Paths -> org.socool.a.e:
    java.lang.String cardDirectory() -> a
    org.socool.zlibrary.options.ZLStringOption BooksDirectoryOption() -> b
    org.socool.zlibrary.options.ZLStringOption FontsDirectoryOption() -> c
    java.lang.String systemShareDirectory() -> d
org.socool.screader.bookmodel.BookChapter -> org.socool.a.a.a:
    java.util.ArrayList m_chapterData -> a
    java.util.ArrayList m_juanData -> b
    int m_allParagraphNumber -> c
    int m_allTextSize -> d
    int m_currentJuanIndex -> e
    void addChapterData(org.socool.screader.bookmodel.BookChapter$BookChapterData) -> a
    int getChapterCount() -> a
    int getChapterOffset(int) -> a
    org.socool.screader.bookmodel.BookChapter$BookChapterData getChapter(int) -> b
    int getParagraphTextOffset(int) -> c
    java.lang.String getChapterTitle(int) -> d
    void gotoPositionByOffset(int) -> e
    int getParagraphIndexByTxtOffset(int,int) -> a
    int getChapterByTxtOffset(int) -> f
    int getChapterIndexByParagraph(int) -> g
    java.lang.String getJuanTitle(int) -> h
org.socool.screader.bookmodel.BookChapter$BookChapterData -> org.socool.a.a.b:
    int m_startOffset -> a
    int m_paragraphCount -> b
    int m_textSize -> c
    int m_startTxtOffset -> d
    java.lang.String m_title -> e
    int m_juanIndex -> f
    java.util.ArrayList paragraphOffset -> g
org.socool.screader.bookmodel.BookChapter$JuanData -> org.socool.a.a.c:
    java.lang.String m_juanTitle -> a
    java.util.ArrayList m_juanChapter -> b
org.socool.screader.bookmodel.BookModel -> org.socool.a.a.d:
    org.socool.screader.library.Book Book -> a
    org.socool.screader.bookmodel.TOCTree TOCTree -> b
    java.util.HashMap myImageMap -> c
    java.lang.String myId -> d
    int READ_TYPE_NORMAL -> e
    int READ_TYPE_STREAM -> f
    int READ_TYPE_CHAPTER -> g
    int m_readType -> h
    java.util.ArrayList myMarks -> i
    java.util.HashMap myInternalHyperlinks -> j
    org.socool.screader.bookmodel.BookChapter m_chapter -> k
    org.socool.screader.bookmodel.BookParagraph m_paragraph -> l
    org.socool.screader.bookmodel.BookModel$LabelResolver myResolver -> m
    org.socool.screader.bookmodel.BookModel createModel(org.socool.screader.library.Book) -> a
    org.socool.zlibrary.text.ZLTextMark getFirstMark() -> a
    org.socool.zlibrary.text.ZLTextMark getLastMark() -> b
    org.socool.zlibrary.text.ZLTextMark getNextMark(org.socool.zlibrary.text.ZLTextMark) -> a
    org.socool.zlibrary.text.ZLTextMark getPreviousMark(org.socool.zlibrary.text.ZLTextMark) -> b
    int search(java.lang.String,int,int,boolean) -> a
    java.util.List getMarks() -> c
    int getParagraphNumber() -> d
    org.socool.screader.bookmodel.BookModel$Label getLabel(java.lang.String) -> a
org.socool.screader.bookmodel.BookModel$Label -> org.socool.a.a.e:
    java.lang.String ModelId -> a
    int ParagraphIndex -> b
org.socool.screader.bookmodel.BookModel$LabelResolver -> org.socool.a.a.f:
    java.util.List getCandidates(java.lang.String) -> a
org.socool.screader.bookmodel.BookParagraph -> org.socool.a.a.g:
    java.util.Vector m_paragraphs -> a
    org.socool.screader.bookmodel.BookParagraph$ParagraphData m_currentParagraph -> b
    int m_beginParagraph -> c
    void clearParagraphData() -> a
    byte getParagraphKind(int) -> a
    org.socool.screader.bookmodel.BookParagraph$ParagraphData getParagraph(int) -> b
    void createParagraph(int) -> c
    void insertEndOfChapter() -> b
    void addText(char[],int,int) -> a
    void addControl(byte,boolean) -> a
    void addHyperlinkControl(byte,byte,java.lang.String) -> a
org.socool.screader.bookmodel.BookParagraph$Element -> org.socool.a.a.h:
    int m_type -> a
    char[] m_text -> b
    java.lang.String m_imageId -> c
    short m_imagevOffset -> d
    boolean m_isCover -> e
    short m_kind -> f
    boolean m_isStart -> g
    byte m_hyperlinkType -> h
    java.lang.String m_label -> i
    org.socool.zlibrary.text.ZLTextStyleEntry m_textStyle -> j
    int m_len -> k
    org.socool.screader.bookmodel.BookParagraph this$0 -> l
org.socool.screader.bookmodel.BookParagraph$ParagraphData -> org.socool.a.a.i:
    int m_kind -> a
    int m_textSize -> b
    int m_index -> c
    java.util.Vector m_paragraphElement -> d
    org.socool.screader.bookmodel.BookParagraph this$0 -> e
org.socool.screader.bookmodel.BookReader -> org.socool.a.a.j:
    org.socool.screader.bookmodel.BookModel m_bookModel -> a
    boolean myTextParagraphExists -> b
    boolean myTextParagraphIsNonEmpty -> c
    char[] myTextBuffer -> f
    int myTextBufferLength -> g
    java.lang.StringBuilder myContentsBuffer -> h
    byte[] myKindStack -> i
    int myKindStackSize -> j
    byte myHyperlinkKind -> k
    java.lang.String myHyperlinkReference -> l
    boolean myInsideTitle -> d
    boolean mySectionContainsRegularContents -> m
    org.socool.screader.bookmodel.TOCTree myCurrentContentsTree -> e
    java.nio.charset.CharsetDecoder myByteDecoder -> n
    byte[] myUnderflowByteBuffer -> o
    void flushTextBufferToParagraph() -> c
    void pushKind(byte) -> a
    boolean popKind() -> a
    void beginParagraph(int) -> a
    void endParagraph() -> b
    void addData(char[],int,int,boolean) -> a
    byte hyperlinkType(byte) -> b
    void addContentsData(char[],int,int) -> a
org.socool.screader.bookmodel.TOCTree -> org.socool.a.a.k:
org.socool.screader.filetype.FileType -> org.socool.a.b.a:
    java.lang.String Id -> a
    boolean acceptsFile(java.lang.String) -> a
org.socool.screader.filetype.FileTypeCollection -> org.socool.a.b.b:
    org.socool.screader.filetype.FileTypeCollection Instance -> a
    java.util.TreeMap myTypes -> b
    void addType(org.socool.screader.filetype.FileType) -> a
    java.util.Collection types() -> a
    org.socool.screader.filetype.FileType typeForFile(java.lang.String) -> a
org.socool.screader.filetype.FileTypeHtml -> org.socool.a.b.c:
    boolean acceptsFile(java.lang.String) -> a
org.socool.screader.filetype.SimpleFileType -> org.socool.a.b.d:
    java.lang.String myExtension -> b
    java.util.List myMimeTypes -> c
    boolean acceptsFile(java.lang.String) -> a
org.socool.screader.formats.FormatPlugin -> org.socool.a.c.a:
    java.lang.String myFileType -> a
    java.lang.String supportedFileType() -> a
    void readParagraph(int) -> a
    void readModel(org.socool.screader.bookmodel.BookModel) -> a
    void detectLanguageAndEncoding(org.socool.screader.library.Book) -> a
    org.socool.zlibrary.image.ZLImage readCover(org.socool.screader.library.Book) -> b
org.socool.screader.formats.PluginCollection -> org.socool.a.c.b:
    org.socool.screader.formats.PluginCollection ourInstance -> a
    java.util.ArrayList myPlugins -> b
    org.socool.screader.formats.txt.TxtChapterPlugin m_txtPlugin -> c
    org.socool.screader.formats.PluginCollection Instance() -> a
    org.socool.screader.formats.txt.TxtChapterPlugin getPlugin() -> b
    org.socool.screader.formats.FormatPlugin getPlugin(org.socool.screader.filetype.FileType) -> a
org.socool.screader.formats.txt.TxtChapterPlugin -> org.socool.a.c.a.a:
    org.socool.screader.formats.txt.TxtChapterReader m_reader -> a
    void readMetaInfo(org.socool.screader.library.Book) -> c
    void readParagraph(int) -> a
    void readModel(org.socool.screader.bookmodel.BookModel) -> a
    org.socool.zlibrary.image.ZLImage readCover(org.socool.screader.library.Book) -> b
    void detectLanguageAndEncoding(org.socool.screader.library.Book) -> a
org.socool.screader.formats.txt.TxtChapterReader -> org.socool.a.c.a.b:
    boolean myInitialized -> f
    int myIgnoredIndent -> g
    int myEmptyLinesBeforeNewSection -> h
    void setModel(org.socool.screader.bookmodel.BookModel) -> a
    void initData() -> c
    void readChapter(int) -> b
    void readDocument(int) -> c
    void startDocumentHandler() -> d
    void endDocumentHandler() -> e
    boolean characterDataHandler(char[],int,int) -> b
    boolean newLineHandler() -> f
org.socool.screader.formats.txt.TxtPlugin -> org.socool.a.c.a.c:
    org.socool.screader.formats.txt.TxtReader m_reader -> a
    void readParagraph(int) -> a
    void readModel(org.socool.screader.bookmodel.BookModel) -> a
    org.socool.zlibrary.image.ZLImage readCover(org.socool.screader.library.Book) -> b
    void detectLanguageAndEncoding(org.socool.screader.library.Book) -> a
org.socool.screader.formats.txt.TxtReader -> org.socool.a.c.a.d:
    boolean myInitialized -> f
    int myIgnoredIndent -> g
    int myEmptyLinesBeforeNewSection -> h
    int BUFFER_SIZE -> i
    java.nio.channels.FileChannel m_streamReader -> j
    java.util.HashMap m_paraOffset -> k
    void setModel(org.socool.screader.bookmodel.BookModel) -> a
    void initParagraphData() -> f
    int getParagraphByOffset(int) -> b
    void readDocument(int) -> c
    void startDocumentHandler() -> c
    void endDocumentHandler() -> d
    boolean characterDataHandler(char[],int,int) -> b
    boolean newLineHandler() -> e
org.socool.screader.library.Book -> org.socool.a.d.a:
    java.lang.String m_filePath -> a
    int m_fileSize -> b
    java.lang.String m_bookAuthor -> c
    java.lang.String m_bookAuthorIntro -> d
    java.lang.String m_bookIntro -> e
    int m_coverId -> f
    long myId -> g
    java.lang.String myEncoding -> h
    java.lang.String myTitle -> i
    boolean myIsSaved -> j
    java.lang.ref.WeakReference NULL_IMAGE -> k
    java.lang.ref.WeakReference myCover -> l
    java.util.Set myVisitedHyperlinks -> m
    org.socool.screader.library.Book getById(long) -> a
    org.socool.screader.library.Book getByFile(org.socool.zlibrary.filesystem.ZLFile) -> a
    org.socool.screader.library.Book getByPath(java.lang.String) -> a
    void reloadInfoFromDatabase() -> a
    boolean isSingleFile() -> b
    org.socool.screader.formats.FormatPlugin getPlugin() -> c
    void readMetaInfo() -> i
    java.lang.String authors() -> d
    void setTitle(java.lang.String) -> b
    java.lang.String getEncoding() -> e
    void setEncoding(java.lang.String) -> c
    boolean save() -> f
    org.socool.zlibrary.text.ZLTextPosition getStoredPosition() -> g
    void storePosition(org.socool.zlibrary.text.ZLTextPosition) -> a
    void initHyperlinkSet() -> j
    boolean isHyperlinkVisited(java.lang.String) -> d
    void markHyperlinkAsVisited(java.lang.String) -> e
    void storeAllVisitedHyperinks() -> k
    org.socool.zlibrary.image.ZLImage getCover() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void access$0(org.socool.screader.library.Book) -> a
org.socool.screader.library.Book$1 -> org.socool.a.d.b:
    org.socool.screader.library.Book this$0 -> a
    org.socool.screader.library.BooksDatabase val$database -> b
    void run() -> run
org.socool.screader.library.BookTree -> org.socool.a.d.c:
    org.socool.screader.library.Book Book -> a
    boolean myShowAuthors -> d
    java.lang.String getName() -> c
    org.socool.screader.library.Book getBook() -> m
    java.lang.String getStringId() -> b
    java.lang.String getSummary() -> f
    org.socool.zlibrary.image.ZLImage createCover() -> g
    boolean containsBook(org.socool.screader.library.Book) -> a
    java.lang.String getSortKey() -> e
    int compareTo(org.socool.screader.FBTree) -> b
    boolean equals(java.lang.Object) -> equals
org.socool.screader.library.Bookmark -> org.socool.a.d.d:
    long myId -> j
    long myBookId -> k
    java.lang.String myBookTitle -> l
    java.lang.String myText -> a
    java.lang.String ModelId -> b
    int m_bookmarkType -> c
    java.lang.String m_bookmarkComment -> d
    java.util.Date myModificationDate -> e
    org.socool.zlibrary.text.ZLTextFixedPosition m_posCurrentPage -> f
    org.socool.zlibrary.text.ZLTextFixedPosition m_posBegin -> g
    org.socool.zlibrary.text.ZLTextFixedPosition m_posEnd -> h
    int m_percent -> i
    boolean myIsChanged -> m
    long getId() -> a
    long getBookId() -> b
    java.lang.String getText() -> c
    java.util.Date getTime() -> d
    void save() -> e
    void delete() -> f
    java.lang.String createBookmarkText(org.socool.zlibrary.text.ZLTextWordCursor,int) -> a
org.socool.screader.library.BooksDatabase -> org.socool.a.d.e:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    android.database.sqlite.SQLiteStatement myUpdateBookInfoStatement -> b
    android.database.sqlite.SQLiteStatement myInsertBookInfoStatement -> c
    android.database.sqlite.SQLiteStatement mySaveRecentBookStatement -> d
    android.database.sqlite.SQLiteStatement myAddToFavoritesStatement -> e
    android.database.sqlite.SQLiteStatement myRemoveFromFavoritesStatement -> f
    android.database.sqlite.SQLiteStatement myInsertBookmarkStatement -> g
    android.database.sqlite.SQLiteStatement myUpdateBookmarkStatement -> h
    android.database.sqlite.SQLiteStatement myDeleteBookmarkStatement -> i
    android.database.sqlite.SQLiteStatement myStorePositionStatement -> j
    android.database.sqlite.SQLiteStatement myStoreVisitedHyperlinksStatement -> k
    org.socool.screader.library.Book createBook(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void executeAsATransaction(java.lang.Runnable) -> a
    void updateDatabase() -> d
    org.socool.screader.library.Book loadBook(long) -> a
    void reloadBook(org.socool.screader.library.Book) -> a
    org.socool.screader.library.Book loadBookByFile(java.lang.String) -> a
    java.util.Map loadBooks() -> a
    void updateBookInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    long insertBookInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void saveRecentBookIds(java.util.List) -> a
    java.util.List loadRecentBookIds() -> b
    void addToFavorites(long) -> b
    void removeFromFavorites(long) -> c
    java.util.List loadFavoritesIds() -> c
    java.util.List loadBookmarks(long) -> d
    long saveBookmark(org.socool.screader.library.Bookmark) -> a
    void deleteBookmark(org.socool.screader.library.Bookmark) -> b
    org.socool.zlibrary.text.ZLTextPosition getStoredPosition(long) -> e
    void storePosition(long,org.socool.zlibrary.text.ZLTextPosition) -> a
    void addVisitedHyperlink(long,java.lang.String) -> a
    java.util.Collection loadVisitedHyperlinks(long) -> f
    void createTables() -> e
    android.database.sqlite.SQLiteDatabase access$0(org.socool.screader.library.BooksDatabase) -> a
    android.database.sqlite.SQLiteStatement access$1(org.socool.screader.library.BooksDatabase) -> b
org.socool.screader.library.BooksDatabase$1 -> org.socool.a.d.f:
    org.socool.screader.library.BooksDatabase this$0 -> a
    java.util.List val$ids -> b
    void run() -> run
org.socool.screader.library.FileTree -> org.socool.a.d.g:
    org.socool.zlibrary.filesystem.ZLFile myFile -> a
    java.lang.String myName -> d
    java.lang.String mySummary -> e
    boolean myIsSelectable -> f
    java.lang.Object myBook -> g
    java.lang.Object NULL_BOOK -> h
    java.util.Comparator ourFileComparator -> i
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> d
    java.lang.String getStringId() -> b
    java.lang.String getSummary() -> f
    boolean isSelectable() -> n
    org.socool.zlibrary.image.ZLImage createCover() -> g
    org.socool.zlibrary.filesystem.ZLFile getFile() -> o
    org.socool.screader.library.Book getBook() -> m
    boolean containsBook(org.socool.screader.library.Book) -> a
    org.socool.screader.FBTree$Status getOpeningStatus() -> j
    java.lang.String getOpeningStatusMessage() -> k
    void waitForOpening() -> l
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.socool.screader.FBTree) -> b
org.socool.screader.library.FileTree$1 -> org.socool.a.d.h:
    int compare(org.socool.zlibrary.filesystem.ZLFile,org.socool.zlibrary.filesystem.ZLFile) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.socool.screader.library.FirstLevelTree -> org.socool.a.d.i:
    java.lang.String myId -> a
    org.socool.zlibrary.filesystem.ZLResource myResource -> d
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> d
    java.lang.String getSummary() -> f
    java.lang.String getStringId() -> b
    boolean isSelectable() -> n
org.socool.screader.library.LibraryTree -> org.socool.a.d.j:
    org.socool.screader.library.Book getBook() -> m
    boolean containsBook(org.socool.screader.library.Book) -> a
    boolean isSelectable() -> n
    org.socool.screader.library.TitleTree getTitleSubTree(java.lang.String) -> b
    org.socool.screader.library.BookTree getBookSubTree(org.socool.screader.library.Book,boolean) -> a
    boolean removeBook(org.socool.screader.library.Book,boolean) -> b
    int compareTo(org.socool.screader.FBTree) -> b
org.socool.screader.library.RootTree -> org.socool.a.d.k:
    java.lang.String getName() -> c
    java.lang.String getStringId() -> b
org.socool.screader.library.TitleTree -> org.socool.a.d.l:
    java.lang.String Title -> a
    java.lang.String firstTitleLetter(org.socool.screader.library.Book) -> b
    java.lang.String getName() -> c
    java.lang.String getStringId() -> b
    boolean containsBook(org.socool.screader.library.Book) -> a
org.socool.screader.screader.ClearFindResultsAction -> org.socool.a.e.a:
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.ColorProfile -> org.socool.a.e.b:
    org.socool.zlibrary.options.ZLStringOption BaseThemeOption -> a
    org.socool.zlibrary.options.ZLStringOption WallpaperOption -> b
    org.socool.zlibrary.options.ZLColorOption BackgroundOption -> c
    org.socool.zlibrary.options.ZLColorOption SelectionBackgroundOption -> d
    org.socool.zlibrary.options.ZLColorOption SelectionForegroundOption -> e
    org.socool.zlibrary.options.ZLColorOption HighlightingOption -> f
    org.socool.zlibrary.options.ZLColorOption RegularTextOption -> g
    org.socool.zlibrary.options.ZLColorOption HyperlinkTextOption -> h
    org.socool.zlibrary.options.ZLColorOption VisitedHyperlinkTextOption -> i
    org.socool.zlibrary.options.ZLColorOption FooterFillOption -> j
    org.socool.zlibrary.options.ZLColorOption createOption(java.lang.String,java.lang.String,int,int,int) -> a
    void ChangeTheme(org.socool.screader.screader.TextTheme) -> a
org.socool.screader.screader.ExitAction -> org.socool.a.e.c:
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.FBAction -> org.socool.a.e.d:
    org.socool.screader.screader.FBReaderApp Reader -> b
org.socool.screader.screader.FBReaderApp -> org.socool.a.e.e:
    org.socool.zlibrary.options.ZLBooleanOption EnableTipOption -> a
    boolean m_hasShowTip -> b
    org.socool.zlibrary.options.ZLStringOption TextSearchPatternOption -> c
    org.socool.zlibrary.options.ZLBooleanOption UseSeparateBindingsOption -> d
    org.socool.zlibrary.options.ZLBooleanOption EnableDoubleTapOption -> e
    org.socool.zlibrary.options.ZLBooleanOption NavigateAllWordsOption -> f
    org.socool.zlibrary.options.ZLBooleanOption SoundTurnOption -> g
    org.socool.zlibrary.options.ZLStringOption TurnOffMenuLight -> h
    org.socool.zlibrary.options.ZLEnumOption WordTappingActionOption -> i
    org.socool.zlibrary.options.ZLColorOption ImageViewBackgroundOption -> j
    org.socool.zlibrary.options.ZLEnumOption ImageTappingActionOption -> k
    org.socool.zlibrary.options.ZLIntegerRangeOption LeftMarginOption -> l
    org.socool.zlibrary.options.ZLIntegerRangeOption RightMarginOption -> m
    org.socool.zlibrary.options.ZLIntegerRangeOption TopMarginOption -> n
    org.socool.zlibrary.options.ZLIntegerRangeOption BottomMarginOption -> o
    org.socool.zlibrary.options.ZLIntegerRangeOption FooterHeightOption -> p
    org.socool.zlibrary.options.ZLIntegerRangeOption FirstLineIndentDeltaOption -> q
    org.socool.zlibrary.options.ZLIntegerRangeOption ParagraphSpaceOption -> r
    org.socool.zlibrary.options.ZLBooleanOption AutoLineBreakOption -> s
    org.socool.screader.screader.ZLKeyBindings myBindings -> G
    org.socool.zlibrary.text.ZLTextView BookTextView -> t
    org.socool.screader.bookmodel.BookModel Model -> u
    org.socool.screader.screader.FBReaderApp ourInstance -> H
    org.socool.zlibrary.text.ZLTextView myView -> I
    java.util.HashMap myIdToActionMap -> J
    org.socool.screader.library.BooksDatabase m_booksDatabase -> K
    org.socool.zlibrary.options.ZLBooleanOption isNightModeOption -> v
    org.socool.screader.screader.ColorProfile myColorProfile -> L
    org.socool.screader.screader.ColorProfile m_colorProfileNight -> M
    java.util.ArrayList m_themes -> w
    java.util.HashMap myPopups -> x
    org.socool.android.PopupPanel myActivePopup -> N
    java.util.Timer myTimer -> O
    java.util.HashMap myTimerTaskPeriods -> P
    java.util.HashMap myTimerTasks -> Q
    java.lang.Object myTimerLock -> R
    org.socool.zlibrary.options.ZLStringOption OrientationOption -> y
    org.socool.zlibrary.options.ZLIntegerRangeOption BatteryLevelToTurnScreenOffOption -> z
    org.socool.zlibrary.options.ZLStringOption TurnOffTimeOpion -> A
    org.socool.zlibrary.options.ZLIntegerRangeOption ScreenBrightnessLevelOption -> B
    org.socool.zlibrary.options.ZLBooleanOption ScreenBrightnessAuto -> C
    java.lang.Boolean myIsKindleFire -> S
    org.socool.android.SCReaderActivity myActivity -> T
    android.app.Application myApplication -> U
    android.util.DisplayMetrics myMetrics -> V
    java.util.HashMap myMenuItemMap -> W
    android.view.MenuItem$OnMenuItemClickListener myMenuListener -> X
    int myBatteryLevel -> Y
    java.util.List myListeners -> Z
    java.util.List myBooks -> aa
    org.socool.screader.library.RootTree myRootTree -> ab
    boolean myDoGroupTitlesByFirstLetter -> ac
    int myStatusMask -> ad
    boolean myBuildStarted -> ae
    org.socool.zlibrary.options.ZLBooleanOption EnableAdsOption -> D
    int m_adsHeight -> E
    boolean m_initOfferWall -> F
    int[] $SWITCH_TABLE$org$socool$zlibrary$util$ZLBoolean3 -> af
    org.socool.screader.library.BooksDatabase getDatabase() -> a
    void openBook(org.socool.screader.library.Book,org.socool.screader.library.Bookmark,java.lang.Runnable) -> a
    void reloadBook() -> b
    java.lang.String getCurrentTheme() -> c
    void initTheme() -> d
    org.socool.screader.screader.TextTheme getThemeByName(java.lang.String) -> a
    org.socool.screader.screader.ColorProfile getColorProfile() -> e
    void changeTheme(java.lang.String) -> b
    org.socool.screader.screader.ZLKeyBindings keyBindings() -> f
    int getLeftMargin() -> g
    int getRightMargin() -> h
    int getTopMargin() -> i
    int getBottomMargin() -> j
    int getFooterHeight() -> k
    void tryOpenInternalLink(java.lang.String) -> c
    void clearTextCaches() -> l
    void openBookInternal(org.socool.screader.library.Book,org.socool.screader.library.Bookmark) -> a
    void gotoBookmark(org.socool.screader.library.Bookmark) -> a
    void showBookTextView() -> m
    org.socool.screader.library.Book createBookForFile(org.socool.zlibrary.filesystem.ZLFile) -> a
    void openFile(org.socool.zlibrary.filesystem.ZLFile,java.lang.Runnable) -> a
    void onWindowClosing() -> n
    org.socool.screader.screader.FBReaderApp Instance() -> o
    void setView(org.socool.zlibrary.text.ZLTextView) -> a
    org.socool.zlibrary.text.ZLTextView getCurrentView() -> p
    void onRepaintFinished() -> q
    void onViewChanged() -> r
    void hideActivePopup() -> s
    void showPopup(java.lang.String) -> d
    void addAction(java.lang.String,org.socool.screader.screader.FBReaderApp$ZLAction) -> a
    boolean isActionVisible(java.lang.String) -> e
    boolean isActionEnabled(java.lang.String) -> f
    org.socool.zlibrary.util.ZLBoolean3 isActionChecked(java.lang.String) -> g
    void runAction(java.lang.String,java.lang.Object[]) -> a
    boolean hasActionForKey(int,boolean) -> a
    boolean runActionByKey(int,boolean) -> b
    boolean closeWindow() -> t
    java.util.Collection popupPanels() -> u
    org.socool.android.PopupPanel getActivePopup() -> v
    org.socool.android.PopupPanel getPopupById(java.lang.String) -> h
    void addTimerTaskInternal(java.lang.Runnable,long) -> b
    void startTimer() -> w
    void stopTimer() -> x
    void addTimerTask(java.lang.Runnable,long) -> a
    void removeTimerTask(java.lang.Runnable) -> a
    boolean isUseGLView() -> y
    boolean isKindleFire() -> z
    void setActivity(org.socool.android.SCReaderActivity) -> a
    org.socool.android.SCReaderActivity getActivity() -> A
    org.socool.zlibrary.view.ZLViewWidget getWidget() -> B
    org.socool.zlibrary.view.ZLGLWidget getWidgetGL() -> C
    void resetWidget() -> D
    void repaintStatusBar() -> E
    void repaintWidget() -> F
    void repaintWidget(boolean) -> a
    org.socool.zlibrary.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> i
    java.lang.String getCurrentTimeString() -> G
    void setScreenBrightnessAuto(boolean) -> b
    void setScreenBrightness(int) -> a
    void initDisplayMetrics() -> R
    int getDisplayDPI() -> H
    float getDensity() -> I
    java.io.InputStream getBookFile(java.lang.String) -> j
    void addMenuItem(android.view.Menu,java.lang.String,java.lang.Integer,java.lang.String) -> a
    void refresh() -> J
    void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    void setTitle(java.lang.String) -> k
    int getBatteryLevel() -> K
    void setBatteryLevel(int) -> b
    void addChangeListener(org.socool.screader.screader.FBReaderApp$ChangeListener) -> a
    void removeChangeListener(org.socool.screader.screader.FBReaderApp$ChangeListener) -> b
    void fireModelChangedEvent(org.socool.screader.screader.FBReaderApp$ChangeListener$Code) -> a
    void setStatus(int) -> c
    org.socool.screader.library.LibraryTree getRootTree() -> L
    org.socool.screader.library.FirstLevelTree getFirstLevelTree(java.lang.String) -> l
    org.socool.screader.library.LibraryTree getLibraryTree(org.socool.screader.FBTree$Key) -> a
    org.socool.zlibrary.filesystem.ZLResourceFile getHelpFile() -> M
    void addBookToLibrary(org.socool.screader.library.Book) -> g
    void removeFromTree(java.lang.String,org.socool.screader.library.Book) -> a
    void refreshInTree(java.lang.String,org.socool.screader.library.Book) -> b
    void refreshBookInfo(org.socool.screader.library.Book) -> a
    void build() -> S
    void startBuild() -> N
    boolean isUpToDate() -> O
    org.socool.screader.library.Book getRecentBook() -> P
    void addBookToRecentList(org.socool.screader.library.Book) -> b
    boolean isBookInFavorites(org.socool.screader.library.Book) -> c
    void addBookToFavorites(org.socool.screader.library.Book) -> d
    void removeBookFromFavorites(org.socool.screader.library.Book) -> e
    boolean canRemoveBookFile(org.socool.screader.library.Book) -> f
    void removeBook(org.socool.screader.library.Book,int) -> a
    void initOfferWall(android.content.Context) -> a
    void showOfferWall(android.content.Context) -> b
    int getOfferPoints(android.content.Context) -> c
    void costOfferPoints(android.content.Context,int) -> a
    void removeAds(android.content.Context) -> d
    void importBook(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    org.socool.android.SCReaderActivity access$0(org.socool.screader.screader.FBReaderApp) -> a
    java.util.HashMap access$1(org.socool.screader.screader.FBReaderApp) -> b
    android.app.Application access$2(org.socool.screader.screader.FBReaderApp) -> c
    int[] $SWITCH_TABLE$org$socool$zlibrary$util$ZLBoolean3() -> Q
    int access$4(org.socool.screader.screader.FBReaderApp) -> d
    void access$5(org.socool.screader.screader.FBReaderApp,int) -> a
    void access$6(org.socool.screader.screader.FBReaderApp) -> e
org.socool.screader.screader.FBReaderApp$1 -> org.socool.a.e.f:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
org.socool.screader.screader.FBReaderApp$2 -> org.socool.a.e.g:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    void run() -> run
org.socool.screader.screader.FBReaderApp$3 -> org.socool.a.e.h:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    android.app.Activity val$activity -> b
    java.lang.String val$title -> c
    void run() -> run
org.socool.screader.screader.FBReaderApp$4 -> org.socool.a.e.i:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    void run() -> run
org.socool.screader.screader.FBReaderApp$6 -> org.socool.a.e.j:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.screader.screader.FBReaderApp$7 -> org.socool.a.e.k:
    org.socool.screader.screader.FBReaderApp this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.socool.screader.screader.FBReaderApp$AndroidAssetsFile -> org.socool.a.e.l:
    org.socool.screader.screader.FBReaderApp$AndroidAssetsFile myParent -> c
    long mySize -> d
    org.socool.screader.screader.FBReaderApp this$0 -> a
    java.util.List directoryEntries() -> a
    boolean isDirectory() -> b
    boolean exists() -> c
    java.io.InputStream getInputStream() -> d
org.socool.screader.screader.FBReaderApp$ChangeListener -> org.socool.a.e.m:
    void onLibraryChanged(org.socool.screader.screader.FBReaderApp$ChangeListener$Code) -> a
org.socool.screader.screader.FBReaderApp$ChangeListener$Code -> org.socool.a.e.n:
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code BookAdded -> a
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code BookRemoved -> b
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code StatusChanged -> c
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code Found -> d
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code NotFound -> e
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code[] ENUM$VALUES -> f
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code[] values() -> values
    org.socool.screader.screader.FBReaderApp$ChangeListener$Code valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.FBReaderApp$ImageTappingAction -> org.socool.a.e.o:
    org.socool.screader.screader.FBReaderApp$ImageTappingAction doNothing -> a
    org.socool.screader.screader.FBReaderApp$ImageTappingAction selectImage -> b
    org.socool.screader.screader.FBReaderApp$ImageTappingAction openImageView -> c
    org.socool.screader.screader.FBReaderApp$ImageTappingAction[] ENUM$VALUES -> d
    org.socool.screader.screader.FBReaderApp$ImageTappingAction[] values() -> values
    org.socool.screader.screader.FBReaderApp$ImageTappingAction valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.FBReaderApp$MyTimerTask -> org.socool.a.e.p:
    java.lang.Runnable myRunnable -> a
    void run() -> run
org.socool.screader.screader.FBReaderApp$WordTappingAction -> org.socool.a.e.q:
    org.socool.screader.screader.FBReaderApp$WordTappingAction doNothing -> a
    org.socool.screader.screader.FBReaderApp$WordTappingAction selectSingleWord -> b
    org.socool.screader.screader.FBReaderApp$WordTappingAction startSelecting -> c
    org.socool.screader.screader.FBReaderApp$WordTappingAction openDictionary -> d
    org.socool.screader.screader.FBReaderApp$WordTappingAction[] ENUM$VALUES -> e
    org.socool.screader.screader.FBReaderApp$WordTappingAction[] values() -> values
    org.socool.screader.screader.FBReaderApp$WordTappingAction valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.FBReaderApp$ZLAction -> org.socool.a.e.r:
    boolean isVisible() -> c
    boolean isEnabled() -> a
    org.socool.zlibrary.util.ZLBoolean3 isChecked() -> b
    boolean checkAndRun(java.lang.Object[]) -> b
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.FindNextAction -> org.socool.a.e.s:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.FindPreviousAction -> org.socool.a.e.t:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.MoveCursorAction -> org.socool.a.e.u:
    org.socool.zlibrary.text.ZLTextView$Direction myDirection -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Direction -> c
    void run(java.lang.Object[]) -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Direction() -> d
org.socool.screader.screader.ScrollingPreferences -> org.socool.a.e.v:
    org.socool.screader.screader.ScrollingPreferences ourInstance -> e
    org.socool.zlibrary.options.ZLEnumOption FingerScrollingOption -> a
    org.socool.zlibrary.options.ZLEnumOption AnimationOption -> b
    org.socool.zlibrary.options.ZLIntegerRangeOption AnimationSpeedOption -> c
    org.socool.zlibrary.options.ZLEnumOption TapZonesSchemeOption -> d
    org.socool.screader.screader.ScrollingPreferences Instance() -> a
org.socool.screader.screader.ScrollingPreferences$FingerScrolling -> org.socool.a.e.w:
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling byTap -> a
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling byFlick -> b
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling byTapAndFlick -> c
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling[] ENUM$VALUES -> d
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling[] values() -> values
    org.socool.screader.screader.ScrollingPreferences$FingerScrolling valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.ScrollingPreferences$TapZonesScheme -> org.socool.a.e.x:
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme left_to_right -> a
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme right_to_left -> b
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme up -> c
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme down -> d
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme custom -> e
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme[] ENUM$VALUES -> f
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme[] values() -> values
    org.socool.screader.screader.ScrollingPreferences$TapZonesScheme valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.SelectionClearAction -> org.socool.a.e.y:
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.SwitchProfileAction -> org.socool.a.e.z:
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.TapZoneMap -> org.socool.a.e.aa:
    int myVerticalSize -> a
    int myHorizontalSize -> b
    java.util.HashMap myZoneMap -> c
    java.util.HashMap myZoneMap2 -> d
    int[] $SWITCH_TABLE$org$socool$screader$screader$TapZoneMap$Tap -> e
    java.lang.String getActionByCoordinates(int,int,int,int,org.socool.screader.screader.TapZoneMap$Tap) -> a
    java.util.HashMap access$0(org.socool.screader.screader.TapZoneMap) -> a
    java.util.HashMap access$1(org.socool.screader.screader.TapZoneMap) -> b
    void access$2(org.socool.screader.screader.TapZoneMap,int) -> a
    void access$3(org.socool.screader.screader.TapZoneMap,int) -> b
    int[] $SWITCH_TABLE$org$socool$screader$screader$TapZoneMap$Tap() -> a
org.socool.screader.screader.TapZoneMap$Reader -> org.socool.a.e.ab:
    org.socool.screader.screader.TapZoneMap this$0 -> a
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
org.socool.screader.screader.TapZoneMap$Tap -> org.socool.a.e.ac:
    org.socool.screader.screader.TapZoneMap$Tap singleTap -> a
    org.socool.screader.screader.TapZoneMap$Tap singleNotDoubleTap -> b
    org.socool.screader.screader.TapZoneMap$Tap doubleTap -> c
    org.socool.screader.screader.TapZoneMap$Tap[] ENUM$VALUES -> d
    org.socool.screader.screader.TapZoneMap$Tap[] values() -> values
    org.socool.screader.screader.TapZoneMap$Tap valueOf(java.lang.String) -> valueOf
org.socool.screader.screader.TapZoneMap$Zone -> org.socool.a.e.ad:
    int HIndex -> a
    int VIndex -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.socool.screader.screader.TextBuildTraverser -> org.socool.a.e.ae:
    java.lang.StringBuilder myBuffer -> a
    void processWord(org.socool.zlibrary.text.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    java.lang.String getText() -> c
org.socool.screader.screader.TextTheme -> org.socool.a.e.af:
    java.lang.String m_path -> a
    java.lang.String m_title -> b
    java.lang.String m_imagePath -> c
    java.lang.String m_thumbPath -> d
    org.socool.zlibrary.util.ZLColor m_textColor -> e
    org.socool.zlibrary.util.ZLColor m_bgColor -> f
    org.socool.zlibrary.util.ZLColor m_selectTextColor -> g
    org.socool.zlibrary.util.ZLColor m_selectBgColor -> h
    boolean m_isNightMode -> i
org.socool.screader.screader.TurnPageAction -> org.socool.a.e.ag:
    boolean myForward -> a
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.VolumeKeyTurnPageAction -> org.socool.a.e.ah:
    boolean myForward -> a
    void run(java.lang.Object[]) -> a
org.socool.screader.screader.WallpapersUtil -> org.socool.a.e.ai:
    java.util.List predefinedWallpaperFiles() -> a
org.socool.screader.screader.WordCountTraverser -> org.socool.a.e.aj:
    int myCount -> a
    void processWord(org.socool.zlibrary.text.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    int getCount() -> c
org.socool.screader.screader.ZLKeyBindings -> org.socool.a.e.ak:
    java.lang.String myName -> a
    org.socool.zlibrary.options.ZLStringListOption myKeysOption -> b
    java.util.TreeMap myActionMap -> c
    java.util.TreeMap myLongPressActionMap -> d
    org.socool.zlibrary.options.ZLStringOption createOption(int,boolean,java.lang.String) -> b
    org.socool.zlibrary.options.ZLStringOption getOption(int,boolean) -> a
    void bindKey(int,boolean,java.lang.String) -> a
    java.lang.String getBinding(int,boolean) -> b
    java.util.TreeMap access$0(org.socool.screader.screader.ZLKeyBindings) -> a
    org.socool.zlibrary.options.ZLStringOption access$1(org.socool.screader.screader.ZLKeyBindings,int,boolean,java.lang.String) -> a
org.socool.screader.screader.ZLKeyBindings$Reader -> org.socool.a.e.al:
    java.util.Set myKeySet -> b
    org.socool.screader.screader.ZLKeyBindings this$0 -> a
    boolean dontCacheAttributeValues() -> a
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
org.socool.zlibrary.filesystem.ZLFile -> org.socool.b.a.a:
    java.util.HashMap ourCachedFiles -> a
    java.lang.String myExtension -> c
    java.lang.String myShortName -> d
    int myArchiveType -> b
    void init() -> e
    org.socool.zlibrary.filesystem.ZLFile createFileByPath(java.lang.String) -> a
    boolean exists() -> c
    boolean isDirectory() -> b
    java.lang.String getPath() -> f
    org.socool.zlibrary.filesystem.ZLPhysicalFile getPhysicalFile() -> g
    java.io.InputStream getInputStream() -> d
    boolean isReadable() -> h
    boolean isArchive() -> i
    java.lang.String getLongName() -> j
    java.lang.String getShortName() -> k
    java.util.List directoryEntries() -> a
    java.util.List children() -> l
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.socool.zlibrary.filesystem.ZLPhysicalFile -> org.socool.b.a.b:
    java.io.File myFile -> a
    boolean exists() -> c
    boolean isDirectory() -> b
    boolean isReadable() -> h
    boolean delete() -> m
    java.lang.String getPath() -> f
    java.lang.String getLongName() -> j
    org.socool.zlibrary.filesystem.ZLPhysicalFile getPhysicalFile() -> g
    java.io.InputStream getInputStream() -> d
    java.util.List directoryEntries() -> a
org.socool.zlibrary.filesystem.ZLResource -> org.socool.b.a.c:
    java.lang.String Name -> a
    org.socool.zlibrary.filesystem.ZLResource ourRoot -> b
    java.lang.Object ourLock -> c
    java.lang.String ourLanguage -> d
    boolean myHasValue -> e
    java.lang.String myValue -> f
    java.util.HashMap myChildren -> g
    java.util.LinkedHashMap myConditionalValues -> h
    org.socool.zlibrary.filesystem.ZLResource resource(java.lang.String) -> a
    org.socool.zlibrary.filesystem.ZLResource$Condition parseCondition(java.lang.String) -> d
    void buildTree() -> a
    void loadData(org.socool.zlibrary.filesystem.ZLResource$ResourceTreeReader,java.lang.String) -> a
    void loadData() -> d
    void setValue(java.lang.String) -> e
    boolean hasValue() -> b
    java.lang.String getValue() -> c
    org.socool.zlibrary.filesystem.ZLResource getResource(java.lang.String) -> b
    java.util.HashMap access$0(org.socool.zlibrary.filesystem.ZLResource) -> a
    void access$1(org.socool.zlibrary.filesystem.ZLResource,java.util.HashMap) -> a
    void access$3(org.socool.zlibrary.filesystem.ZLResource,java.lang.String) -> a
    void access$4(org.socool.zlibrary.filesystem.ZLResource,java.util.LinkedHashMap) -> a
    org.socool.zlibrary.filesystem.ZLResource$Condition access$5(java.lang.String) -> c
    java.util.LinkedHashMap access$6(org.socool.zlibrary.filesystem.ZLResource) -> b
org.socool.zlibrary.filesystem.ZLResource$Condition -> org.socool.b.a.d:
org.socool.zlibrary.filesystem.ZLResource$ModCondition -> org.socool.b.a.e:
    int myMod -> a
    int myBase -> b
org.socool.zlibrary.filesystem.ZLResource$ModRangeCondition -> org.socool.b.a.f:
    int myMin -> a
    int myMax -> b
    int myBase -> c
org.socool.zlibrary.filesystem.ZLResource$RangeCondition -> org.socool.b.a.g:
    int myMin -> a
    int myMax -> b
org.socool.zlibrary.filesystem.ZLResource$ResourceTreeReader -> org.socool.b.a.h:
    java.util.ArrayList myStack -> a
    void readDocument(org.socool.zlibrary.filesystem.ZLResource,org.socool.zlibrary.filesystem.ZLFile) -> a
    boolean dontCacheAttributeValues() -> a
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
    boolean endElementHandler(java.lang.String) -> a
org.socool.zlibrary.filesystem.ZLResource$ValueCondition -> org.socool.b.a.i:
    int myValue -> a
org.socool.zlibrary.filesystem.ZLResourceFile -> org.socool.b.a.j:
    java.lang.String myPath -> a
    java.lang.String getPath() -> f
    java.lang.String getLongName() -> j
    org.socool.zlibrary.filesystem.ZLPhysicalFile getPhysicalFile() -> g
org.socool.zlibrary.image.ZLFileImage -> org.socool.b.b.a:
    org.socool.zlibrary.filesystem.ZLFile myFile -> a
    java.lang.String myEncoding -> b
    int myOffset -> c
    int myLength -> d
    org.socool.zlibrary.image.ZLFileImage byUrlPath(java.lang.String) -> a
    java.lang.String getURI() -> a
    java.io.InputStream inputStream() -> b
org.socool.zlibrary.image.ZLImage -> org.socool.b.b.b:
    org.socool.zlibrary.util.MimeType myMimeType -> a
    java.io.InputStream inputStream() -> b
    java.lang.String getURI() -> a
    org.socool.zlibrary.util.MimeType mimeType() -> c
org.socool.zlibrary.image.ZLImageData -> org.socool.b.b.c:
    android.graphics.Bitmap myBitmap -> a
    int myRealWidth -> b
    int myRealHeight -> c
    org.socool.zlibrary.view.ZLPaintContext$Size myLastRequestedSize -> d
    org.socool.zlibrary.view.ZLPaintContext$ScalingType myLastRequestedScaling -> e
    org.socool.zlibrary.image.ZLImage myImage -> f
    int[] $SWITCH_TABLE$org$socool$zlibrary$view$ZLPaintContext$ScalingType -> g
    android.graphics.Bitmap decodeWithOptions(android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap getFullSizeBitmap() -> a
    android.graphics.Bitmap getBitmap(int,int) -> a
    android.graphics.Bitmap getBitmap(org.socool.zlibrary.view.ZLPaintContext$Size,org.socool.zlibrary.view.ZLPaintContext$ScalingType) -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$view$ZLPaintContext$ScalingType() -> b
org.socool.zlibrary.image.ZLImageManager -> org.socool.b.b.d:
    org.socool.zlibrary.image.ZLImageManager ourInstance -> b
    java.util.concurrent.ExecutorService myPool -> c
    java.util.concurrent.ExecutorService mySinglePool -> d
    java.util.HashMap myOnImageSyncRunnables -> e
    org.socool.zlibrary.image.ZLImageManager$ImageSynchronizedHandler myImageSynchronizedHandler -> f
    int[][] PalmImage8bitColormap -> a
    org.socool.zlibrary.image.ZLImageManager Instance() -> a
    void startImageLoading(org.socool.zlibrary.image.ZLLoadableImage,java.lang.Runnable) -> a
    org.socool.zlibrary.image.ZLImageData getImageData(org.socool.zlibrary.image.ZLImage) -> a
    java.util.HashMap access$0(org.socool.zlibrary.image.ZLImageManager) -> a
    org.socool.zlibrary.image.ZLImageManager$ImageSynchronizedHandler access$2(org.socool.zlibrary.image.ZLImageManager) -> b
org.socool.zlibrary.image.ZLImageManager$1 -> org.socool.b.b.e:
    org.socool.zlibrary.image.ZLImageManager this$0 -> a
    org.socool.zlibrary.image.ZLLoadableImage val$image -> b
    void run() -> run
org.socool.zlibrary.image.ZLImageManager$ImageSynchronizedHandler -> org.socool.b.b.f:
    org.socool.zlibrary.image.ZLImageManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void fireMessage(java.lang.String) -> a
org.socool.zlibrary.image.ZLImageManager$MinPriorityThreadFactory -> org.socool.b.b.g:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.socool.zlibrary.image.ZLLoadableImage -> org.socool.b.b.h:
    boolean myIsSynchronized -> a
    org.socool.zlibrary.image.ZLImage myImage -> b
    boolean isSynchronized() -> d
    void setSynchronized() -> e
    void startSynchronization(java.lang.Runnable) -> a
    java.lang.String getURI() -> a
    java.io.InputStream inputStream() -> b
    void synchronize() -> f
    int sourceType() -> g
    java.lang.String getId() -> h
    org.socool.zlibrary.image.ZLImage getRealImage() -> i
org.socool.zlibrary.options.ZLBoolean3Option -> org.socool.b.c.a:
    org.socool.zlibrary.util.ZLBoolean3 myValue -> a
    org.socool.zlibrary.util.ZLBoolean3 myDefaultValue -> b
    org.socool.zlibrary.util.ZLBoolean3 getValue() -> a
org.socool.zlibrary.options.ZLBooleanOption -> org.socool.b.c.b:
    boolean myDefaultValue -> a
    boolean myValue -> b
    boolean getValue() -> a
    void setValue(boolean) -> a
org.socool.zlibrary.options.ZLColorOption -> org.socool.b.c.c:
    org.socool.zlibrary.util.ZLColor myDefaultValue -> a
    org.socool.zlibrary.util.ZLColor myValue -> b
    org.socool.zlibrary.util.ZLColor getValue() -> a
    void setValue(org.socool.zlibrary.util.ZLColor) -> a
org.socool.zlibrary.options.ZLEnumOption -> org.socool.b.c.d:
    java.lang.Enum myDefaultValue -> a
    java.lang.Enum myValue -> b
    java.lang.Enum getValue() -> a
    void setValue(java.lang.Enum) -> a
org.socool.zlibrary.options.ZLIntegerOption -> org.socool.b.c.e:
    int myDefaultValue -> a
    int myValue -> b
    int getValue() -> a
org.socool.zlibrary.options.ZLIntegerRangeOption -> org.socool.b.c.f:
    int MinValue -> a
    int MaxValue -> b
    int myDefaultValue -> d
    int myValue -> e
    int getValue() -> a
    void setValue(int) -> a
org.socool.zlibrary.options.ZLOption -> org.socool.b.c.g:
    java.lang.String myGroup -> a
    java.lang.String myOptionName -> b
    boolean myIsSynchronized -> c
    java.lang.String getConfigValue(java.lang.String) -> a
    void setConfigValue(java.lang.String) -> b
    void unsetConfigValue() -> b
org.socool.zlibrary.options.ZLStringListOption -> org.socool.b.c.h:
    java.util.List myDefaultValue -> a
    java.util.List myValue -> b
    java.lang.String myDelimiter -> d
    java.util.List getValue() -> a
    void setValue(java.util.List) -> a
org.socool.zlibrary.options.ZLStringOption -> org.socool.b.c.i:
    java.lang.String myDefaultValue -> a
    java.lang.String myValue -> b
    java.lang.String getValue() -> a
    void setValue(java.lang.String) -> c
org.socool.zlibrary.text.ZLImageEntry -> org.socool.b.d.a:
    java.util.HashMap myImageMap -> d
    java.lang.String Id -> a
    short VOffset -> b
    boolean IsCover -> c
    org.socool.zlibrary.image.ZLImage getImage() -> a
org.socool.zlibrary.text.ZLTextBaseStyle -> org.socool.b.d.b:
    org.socool.zlibrary.options.ZLBooleanOption AutoHyphenationOption -> a
    org.socool.zlibrary.options.ZLBooleanOption BoldOption -> b
    org.socool.zlibrary.options.ZLBooleanOption ItalicOption -> c
    org.socool.zlibrary.options.ZLBooleanOption UnderlineOption -> d
    org.socool.zlibrary.options.ZLBooleanOption StrikeThroughOption -> e
    org.socool.zlibrary.options.ZLIntegerRangeOption AlignmentOption -> f
    org.socool.zlibrary.options.ZLIntegerRangeOption LineSpaceOption -> g
    org.socool.zlibrary.options.ZLStringOption FontFamilyOption -> h
    org.socool.zlibrary.options.ZLIntegerRangeOption FontSizeOption -> i
    java.lang.String getFontFamily() -> a
    int getFontSize() -> b
    boolean isBold() -> c
    boolean isItalic() -> d
    boolean isUnderline() -> e
    boolean isStrikeThrough() -> f
    int getLeftIndent() -> g
    int getRightIndent() -> h
    int getFirstLineIndentDelta() -> i
    int getLineSpacePercent() -> j
    int getVerticalShift() -> k
    int getSpaceBefore() -> l
    int getSpaceAfter() -> m
    byte getAlignment() -> n
    boolean allowHyphenations() -> o
org.socool.zlibrary.text.ZLTextControlElement -> org.socool.b.d.c:
    org.socool.zlibrary.text.ZLTextControlElement[] myStartElements -> f
    org.socool.zlibrary.text.ZLTextControlElement[] myEndElements -> g
    byte Kind -> a
    boolean IsStart -> b
    org.socool.zlibrary.text.ZLTextControlElement get(byte,boolean) -> a
org.socool.zlibrary.text.ZLTextDecoratedStyle -> org.socool.b.d.d:
    java.lang.String myFontFamily -> a
    int myFontSize -> b
    boolean myIsItalic -> c
    boolean myIsBold -> d
    boolean myIsUnderline -> e
    boolean myIsStrikeThrough -> f
    int myVerticalShift -> g
    boolean myIsNotCached -> h
    void initCache() -> w
    java.lang.String getFontFamily() -> a
    java.lang.String getFontFamilyInternal() -> p
    int getFontSize() -> b
    int getFontSizeInternal() -> q
    boolean isItalic() -> d
    boolean isItalicInternal() -> r
    boolean isBold() -> c
    boolean isBoldInternal() -> s
    boolean isUnderline() -> e
    boolean isUnderlineInternal() -> t
    boolean isStrikeThrough() -> f
    boolean isStrikeThroughInternal() -> u
    int getVerticalShift() -> k
    int getVerticalShiftInternal() -> v
org.socool.zlibrary.text.ZLTextElement -> org.socool.b.d.e:
    org.socool.zlibrary.text.ZLTextElement HSpace -> c
    org.socool.zlibrary.text.ZLTextElement AfterParagraph -> d
    org.socool.zlibrary.text.ZLTextElement IndentElement -> e
org.socool.zlibrary.text.ZLTextElementArea -> org.socool.b.d.f:
    int XStart -> a
    int XEnd -> b
    int YStart -> c
    int YEnd -> d
    int Length -> e
    boolean AddHyphenationSign -> f
    boolean ChangeStyle -> g
    org.socool.zlibrary.text.ZLTextStyle Style -> h
    org.socool.zlibrary.text.ZLTextElement Element -> i
    boolean myIsLastInElement -> m
    boolean isFirstInElement() -> a
    boolean isLastInElement() -> b
org.socool.zlibrary.text.ZLTextElementAreaVector -> org.socool.b.d.g:
    java.util.List myAreas -> a
    java.util.List myElementRegions -> b
    org.socool.zlibrary.text.ZLTextRegion myCurrentElementRegion -> c
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Direction -> d
    void clear() -> a
    int size() -> b
    org.socool.zlibrary.text.ZLTextElementArea get(int) -> a
    org.socool.zlibrary.text.ZLTextElementArea getFirstArea() -> c
    org.socool.zlibrary.text.ZLTextElementArea getLastArea() -> d
    boolean add(org.socool.zlibrary.text.ZLTextElementArea) -> a
    org.socool.zlibrary.text.ZLTextRegion getRegion(org.socool.zlibrary.text.ZLTextRegion$Soul) -> a
    org.socool.zlibrary.text.ZLTextRegion findRegion(int,int,int,org.socool.zlibrary.text.ZLTextRegion$Filter) -> a
    org.socool.zlibrary.text.ZLTextRegion nextRegion(org.socool.zlibrary.text.ZLTextRegion,org.socool.zlibrary.text.ZLTextView$Direction,org.socool.zlibrary.text.ZLTextRegion$Filter) -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Direction() -> e
org.socool.zlibrary.text.ZLTextFixedHSpaceElement -> org.socool.b.d.h:
    org.socool.zlibrary.text.ZLTextElement[] ourCollection -> b
    short Length -> a
    org.socool.zlibrary.text.ZLTextElement getElement(short) -> a
org.socool.zlibrary.text.ZLTextFixedPosition -> org.socool.b.d.i:
    int ParagraphIndex -> j
    int ElementIndex -> k
    int CharIndex -> l
    int getParagraphIndex() -> c
    int getElementIndex() -> d
    int getCharIndex() -> e
org.socool.zlibrary.text.ZLTextFullDecoratedStyle -> org.socool.b.d.j:
    org.socool.zlibrary.text.ZLTextFullStyleDecoration myFullDecoration -> a
    int getLeftIndent() -> g
    int getRightIndent() -> h
    int getFirstLineIndentDelta() -> i
    int getLineSpacePercent() -> j
    int getSpaceBefore() -> l
    int getSpaceAfter() -> m
    byte getAlignment() -> n
    boolean allowHyphenations() -> o
org.socool.zlibrary.text.ZLTextFullStyleDecoration -> org.socool.b.d.k:
    org.socool.zlibrary.options.ZLIntegerRangeOption SpaceBeforeOption -> a
    org.socool.zlibrary.options.ZLIntegerRangeOption LeftIndentOption -> b
    org.socool.zlibrary.options.ZLIntegerRangeOption RightIndentOption -> c
    org.socool.zlibrary.options.ZLIntegerRangeOption AlignmentOption -> d
    org.socool.zlibrary.options.ZLIntegerOption LineSpacePercentOption -> e
    org.socool.zlibrary.text.ZLTextStyle createDecoratedStyle(org.socool.zlibrary.text.ZLTextStyle,org.socool.zlibrary.text.ZLTextHyperlink) -> a
org.socool.zlibrary.text.ZLTextHighlighting -> org.socool.b.d.l:
    org.socool.zlibrary.text.ZLTextPosition myStartPosition -> a
    org.socool.zlibrary.text.ZLTextPosition myEndPosition -> b
    void setup(org.socool.zlibrary.text.ZLTextPosition,org.socool.zlibrary.text.ZLTextPosition) -> a
org.socool.zlibrary.text.ZLTextHorizontalConvexHull -> org.socool.b.d.m:
    java.util.LinkedList myRectangles -> a
    void addArea(org.socool.zlibrary.text.ZLTextElementArea) -> a
    void normalize() -> a
    int distanceTo(int,int) -> a
    void draw(org.socool.zlibrary.view.ZLPaintContext) -> a
org.socool.zlibrary.text.ZLTextHorizontalConvexHull$Rectangle -> org.socool.b.d.n:
    int Left -> a
    int Right -> b
    int Top -> c
    int Bottom -> d
org.socool.zlibrary.text.ZLTextHyperlink -> org.socool.b.d.o:
    byte Type -> a
    java.lang.String Id -> b
    java.util.List myElementIndexes -> d
    org.socool.zlibrary.text.ZLTextHyperlink NO_LINK -> c
    void addElementIndex(int) -> a
    java.util.List elementIndexes() -> a
org.socool.zlibrary.text.ZLTextHyperlinkControlElement -> org.socool.b.d.p:
    org.socool.zlibrary.text.ZLTextHyperlink Hyperlink -> f
org.socool.zlibrary.text.ZLTextHyperlinkRegionSoul -> org.socool.b.d.q:
    org.socool.zlibrary.text.ZLTextHyperlink Hyperlink -> a
    int startElementIndex(org.socool.zlibrary.text.ZLTextHyperlink,int) -> a
    int endElementIndex(org.socool.zlibrary.text.ZLTextHyperlink,int) -> b
org.socool.zlibrary.text.ZLTextHyphenationInfo -> org.socool.b.d.r:
    boolean[] Mask -> a
    boolean isHyphenationPossible(int) -> a
org.socool.zlibrary.text.ZLTextHyphenator -> org.socool.b.d.s:
    org.socool.zlibrary.text.ZLTextHyphenator ourInstance -> a
    org.socool.zlibrary.text.ZLTextHyphenator Instance() -> a
    org.socool.zlibrary.text.ZLTextHyphenationInfo getInfo(org.socool.zlibrary.text.ZLTextWord) -> a
org.socool.zlibrary.text.ZLTextImageElement -> org.socool.b.d.t:
    java.lang.String Id -> a
    org.socool.zlibrary.image.ZLImageData ImageData -> b
    java.lang.String URI -> f
    boolean IsCover -> g
org.socool.zlibrary.text.ZLTextImageRegionSoul -> org.socool.b.d.u:
    org.socool.zlibrary.text.ZLTextImageElement ImageElement -> a
org.socool.zlibrary.text.ZLTextLineInfo -> org.socool.b.d.v:
    org.socool.zlibrary.text.ZLTextParagraphCursor ParagraphCursor -> a
    int ParagraphCursorLength -> b
    int StartElementIndex -> c
    int StartCharIndex -> d
    int RealStartElementIndex -> e
    int RealStartCharIndex -> f
    int EndElementIndex -> g
    int EndCharIndex -> h
    boolean IsVisible -> i
    int LeftIndent -> j
    int Width -> k
    int Height -> l
    int Descent -> m
    int VSpaceAfter -> n
    int SpaceCounter -> o
    org.socool.zlibrary.text.ZLTextStyle StartStyle -> p
    boolean isEndOfParagraph() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.socool.zlibrary.text.ZLTextMark -> org.socool.b.d.w:
    int ParagraphIndex -> a
    int Offset -> b
    int Length -> c
    int compareTo(org.socool.zlibrary.text.ZLTextMark) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.socool.zlibrary.text.ZLTextPage -> org.socool.b.d.x:
    org.socool.zlibrary.text.ZLTextWordCursor StartCursor -> a
    org.socool.zlibrary.text.ZLTextWordCursor EndCursor -> b
    java.util.ArrayList LineInfos -> c
    int PaintState -> d
    org.socool.zlibrary.text.ZLTextElementAreaVector TextElementMap -> e
    int OldWidth -> f
    int OldHeight -> g
    void reset() -> a
    void moveStartCursor(org.socool.zlibrary.text.ZLTextParagraphCursor) -> a
    void moveStartCursor(int,int,int) -> a
    void moveEndCursor(int,int,int) -> b
    boolean isEmptyPage() -> b
    void findLineFromStart(org.socool.zlibrary.text.ZLTextWordCursor,int) -> a
    void findLineFromEnd(org.socool.zlibrary.text.ZLTextWordCursor,int) -> b
    void findPercentFromStart(org.socool.zlibrary.text.ZLTextWordCursor,int,int) -> a
org.socool.zlibrary.text.ZLTextParagraphCursor -> org.socool.b.d.y:
    int Index -> a
    org.socool.screader.bookmodel.BookModel Model -> b
    java.util.ArrayList myElements -> c
    char[] SPACE_ARRAY -> d
    org.socool.zlibrary.text.ZLTextParagraphCursor cursor(org.socool.screader.bookmodel.BookModel,int) -> a
    void fill() -> a
    void clear() -> b
    boolean isFirst() -> c
    boolean isLast() -> d
    boolean isEndOfSection() -> e
    int getParagraphLength() -> f
    org.socool.zlibrary.text.ZLTextParagraphCursor previous() -> g
    org.socool.zlibrary.text.ZLTextParagraphCursor next() -> h
    org.socool.zlibrary.text.ZLTextElement getElement(int) -> a
    java.lang.String toString() -> toString
org.socool.zlibrary.text.ZLTextParagraphCursor$Processor -> org.socool.b.d.z:
    org.socool.screader.bookmodel.BookParagraph$ParagraphData myParagraph -> a
    java.util.ArrayList myElements -> b
    int myOffset -> c
    int myFirstMark -> d
    int myLastMark -> e
    java.util.List myMarks -> f
    byte[] ourBreaks -> g
    void fill() -> a
    void processTextEntry(char[],int,int,org.socool.zlibrary.text.ZLTextHyperlink) -> a
    void addWord(char[],int,int,int,org.socool.zlibrary.text.ZLTextHyperlink) -> a
org.socool.zlibrary.text.ZLTextParagraphCursorCache -> org.socool.b.d.aa:
    java.util.HashMap ourMap -> a
    void put(org.socool.screader.bookmodel.BookModel,int,org.socool.zlibrary.text.ZLTextParagraphCursor) -> a
    org.socool.zlibrary.text.ZLTextParagraphCursor get(org.socool.screader.bookmodel.BookModel,int) -> a
    void clear() -> a
org.socool.zlibrary.text.ZLTextParagraphCursorCache$Key -> org.socool.b.d.ab:
    org.socool.screader.bookmodel.BookModel myModel -> a
    int myIndex -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.socool.zlibrary.text.ZLTextPartialDecoratedStyle -> org.socool.b.d.ac:
    org.socool.zlibrary.text.ZLTextStyleDecoration myDecoration -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$util$ZLBoolean3 -> b
    java.lang.String getFontFamilyInternal() -> p
    int getFontSizeInternal() -> q
    boolean isBoldInternal() -> s
    boolean isItalicInternal() -> r
    boolean isUnderlineInternal() -> t
    boolean isStrikeThroughInternal() -> u
    int getLeftIndent() -> g
    int getRightIndent() -> h
    int getFirstLineIndentDelta() -> i
    int getLineSpacePercent() -> j
    int getVerticalShiftInternal() -> v
    int getSpaceBefore() -> l
    int getSpaceAfter() -> m
    byte getAlignment() -> n
    boolean allowHyphenations() -> o
    int[] $SWITCH_TABLE$org$socool$zlibrary$util$ZLBoolean3() -> w
org.socool.zlibrary.text.ZLTextPosition -> org.socool.b.d.ad:
    int getParagraphIndex() -> c
    int getElementIndex() -> d
    int getCharIndex() -> e
    boolean samePositionAs(org.socool.zlibrary.text.ZLTextPosition) -> a
    int compareTo(org.socool.zlibrary.text.ZLTextPosition) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.socool.zlibrary.text.ZLTextRegion -> org.socool.b.d.ae:
    org.socool.zlibrary.text.ZLTextRegion$Filter AnyRegionFilter -> a
    org.socool.zlibrary.text.ZLTextRegion$Filter HyperlinkFilter -> b
    org.socool.zlibrary.text.ZLTextRegion$Filter ImageOrHyperlinkFilter -> c
    org.socool.zlibrary.text.ZLTextRegion$Soul mySoul -> d
    java.util.List myAreaList -> e
    org.socool.zlibrary.text.ZLTextElementArea[] myAreas -> f
    int myFromIndex -> g
    int myToIndex -> h
    org.socool.zlibrary.text.ZLTextHorizontalConvexHull myHull -> i
    void extend() -> a
    org.socool.zlibrary.text.ZLTextRegion$Soul getSoul() -> b
    org.socool.zlibrary.text.ZLTextElementArea[] textAreas() -> g
    org.socool.zlibrary.text.ZLTextHorizontalConvexHull convexHull() -> h
    org.socool.zlibrary.text.ZLTextElementArea getFirstArea() -> c
    org.socool.zlibrary.text.ZLTextElementArea getLastArea() -> d
    int getTop() -> e
    int getBottom() -> f
    void draw(org.socool.zlibrary.view.ZLPaintContext) -> a
    int distanceTo(int,int) -> a
    boolean isAtRightOf(org.socool.zlibrary.text.ZLTextRegion) -> a
    boolean isAtLeftOf(org.socool.zlibrary.text.ZLTextRegion) -> b
    boolean isUnder(org.socool.zlibrary.text.ZLTextRegion) -> c
    boolean isOver(org.socool.zlibrary.text.ZLTextRegion) -> d
    boolean isExactlyUnder(org.socool.zlibrary.text.ZLTextRegion) -> e
    boolean isExactlyOver(org.socool.zlibrary.text.ZLTextRegion) -> f
org.socool.zlibrary.text.ZLTextRegion$1 -> org.socool.b.d.af:
    boolean accepts(org.socool.zlibrary.text.ZLTextRegion) -> a
org.socool.zlibrary.text.ZLTextRegion$2 -> org.socool.b.d.ag:
    boolean accepts(org.socool.zlibrary.text.ZLTextRegion) -> a
org.socool.zlibrary.text.ZLTextRegion$3 -> org.socool.b.d.ah:
    boolean accepts(org.socool.zlibrary.text.ZLTextRegion) -> a
org.socool.zlibrary.text.ZLTextRegion$Filter -> org.socool.b.d.ai:
    boolean accepts(org.socool.zlibrary.text.ZLTextRegion) -> a
org.socool.zlibrary.text.ZLTextRegion$Soul -> org.socool.b.d.aj:
    int ParagraphIndex -> b
    int StartElementIndex -> c
    int EndElementIndex -> d
    boolean accepts(org.socool.zlibrary.text.ZLTextElementArea) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.socool.zlibrary.text.ZLTextRegion$Soul) -> a
    int compareTo(org.socool.zlibrary.text.ZLTextElementArea) -> b
    int compareTo(java.lang.Object) -> compareTo
org.socool.zlibrary.text.ZLTextSelection -> org.socool.b.d.ak:
    org.socool.zlibrary.text.ZLTextView myView -> a
    org.socool.zlibrary.text.ZLTextRegion$Soul myLeftMostRegionSoul -> b
    org.socool.zlibrary.text.ZLTextRegion$Soul myRightMostRegionSoul -> c
    org.socool.zlibrary.text.ZLTextSelectionCursor myCursorInMovement -> d
    org.socool.zlibrary.text.ZLTextSelection$Point myCursorInMovementPoint -> e
    boolean isEmpty() -> a
    boolean clear() -> b
    void setCursorInMovement(org.socool.zlibrary.text.ZLTextSelectionCursor,int,int) -> a
    org.socool.zlibrary.text.ZLTextSelectionCursor getCursorInMovement() -> c
    org.socool.zlibrary.text.ZLTextSelection$Point getCursorInMovementPoint() -> d
    boolean start(int,int) -> a
    void stop() -> e
    void expandTo(int,int) -> b
    boolean isAreaSelected(org.socool.zlibrary.text.ZLTextElementArea) -> a
    org.socool.zlibrary.text.ZLTextPosition getStartPosition() -> f
    org.socool.zlibrary.text.ZLTextPosition getEndPosition() -> g
    org.socool.zlibrary.text.ZLTextElementArea getStartArea(org.socool.zlibrary.text.ZLTextPage) -> a
    org.socool.zlibrary.text.ZLTextElementArea getEndArea(org.socool.zlibrary.text.ZLTextPage) -> b
    boolean hasAPartBeforePage(org.socool.zlibrary.text.ZLTextPage) -> c
    boolean hasAPartAfterPage(org.socool.zlibrary.text.ZLTextPage) -> d
org.socool.zlibrary.text.ZLTextSelection$Point -> org.socool.b.d.al:
    int X -> a
    int Y -> b
org.socool.zlibrary.text.ZLTextSelectionCursor -> org.socool.b.d.am:
    org.socool.zlibrary.text.ZLTextSelectionCursor None -> a
    org.socool.zlibrary.text.ZLTextSelectionCursor Left -> b
    org.socool.zlibrary.text.ZLTextSelectionCursor Right -> c
    int ourHeight -> d
    int ourWidth -> e
    int ourAccent -> f
    org.socool.zlibrary.text.ZLTextSelectionCursor[] ENUM$VALUES -> g
    void init() -> d
    int getHeight() -> a
    int getWidth() -> b
    int getAccent() -> c
    org.socool.zlibrary.text.ZLTextSelectionCursor[] values() -> values
    org.socool.zlibrary.text.ZLTextSelectionCursor valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.text.ZLTextStyle -> org.socool.b.d.an:
    org.socool.zlibrary.text.ZLTextStyle Base -> j
    org.socool.zlibrary.text.ZLTextHyperlink Hyperlink -> k
    java.lang.String getFontFamily() -> a
    int getFontSize() -> b
    boolean isBold() -> c
    boolean isItalic() -> d
    boolean isUnderline() -> e
    boolean isStrikeThrough() -> f
    int getLeftIndent() -> g
    int getRightIndent() -> h
    int getFirstLineIndentDelta() -> i
    int getLineSpacePercent() -> j
    int getVerticalShift() -> k
    int getSpaceBefore() -> l
    int getSpaceAfter() -> m
    byte getAlignment() -> n
    boolean allowHyphenations() -> o
org.socool.zlibrary.text.ZLTextStyleCollection -> org.socool.b.d.ao:
    org.socool.zlibrary.text.ZLTextStyleCollection ourInstance -> a
    org.socool.zlibrary.text.ZLTextBaseStyle myBaseStyle -> b
    org.socool.zlibrary.text.ZLTextStyleDecoration[] myDecorationMap -> c
    org.socool.zlibrary.text.ZLTextStyleCollection Instance() -> a
    org.socool.zlibrary.text.ZLTextBaseStyle getBaseStyle() -> b
    org.socool.zlibrary.text.ZLTextStyleDecoration getDecoration(byte) -> a
    void access$0(org.socool.zlibrary.text.ZLTextStyleCollection,org.socool.zlibrary.text.ZLTextBaseStyle) -> a
    org.socool.zlibrary.text.ZLTextStyleDecoration[] access$1(org.socool.zlibrary.text.ZLTextStyleCollection) -> a
org.socool.zlibrary.text.ZLTextStyleCollection$TextStyleReader -> org.socool.b.d.ap:
    int myDpi -> a
    org.socool.zlibrary.text.ZLTextStyleCollection myCollection -> b
    boolean dontCacheAttributeValues() -> a
    int intValue(org.socool.zlibrary.xml.ZLStringMap,java.lang.String,int) -> a
    boolean booleanValue(org.socool.zlibrary.xml.ZLStringMap,java.lang.String) -> a
    org.socool.zlibrary.util.ZLBoolean3 b3Value(org.socool.zlibrary.xml.ZLStringMap,java.lang.String) -> b
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
org.socool.zlibrary.text.ZLTextStyleDecoration -> org.socool.b.d.aq:
    org.socool.zlibrary.options.ZLStringOption FontFamilyOption -> f
    org.socool.zlibrary.options.ZLIntegerRangeOption FontSizeDeltaOption -> g
    org.socool.zlibrary.options.ZLBoolean3Option BoldOption -> h
    org.socool.zlibrary.options.ZLBoolean3Option ItalicOption -> i
    org.socool.zlibrary.options.ZLBoolean3Option UnderlineOption -> j
    org.socool.zlibrary.options.ZLBoolean3Option StrikeThroughOption -> k
    org.socool.zlibrary.options.ZLIntegerOption VerticalShiftOption -> l
    org.socool.zlibrary.options.ZLBoolean3Option AllowHyphenationsOption -> m
    java.lang.String myName -> a
    org.socool.zlibrary.text.ZLTextStyle createDecoratedStyle(org.socool.zlibrary.text.ZLTextStyle) -> a
    org.socool.zlibrary.text.ZLTextStyle createDecoratedStyle(org.socool.zlibrary.text.ZLTextStyle,org.socool.zlibrary.text.ZLTextHyperlink) -> a
org.socool.zlibrary.text.ZLTextStyleEntry -> org.socool.b.d.ar:
org.socool.zlibrary.text.ZLTextTraverser -> org.socool.b.d.as:
    org.socool.zlibrary.text.ZLTextView myView -> a
    void processWord(org.socool.zlibrary.text.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    void traverse(org.socool.zlibrary.text.ZLTextPosition,org.socool.zlibrary.text.ZLTextPosition) -> a
org.socool.zlibrary.text.ZLTextView -> org.socool.b.d.at:
    org.socool.screader.bookmodel.BookModel myModel -> d
    int myScrollingMode -> e
    int myOverlappingValue -> f
    org.socool.zlibrary.text.ZLTextPage myPreviousPage -> g
    org.socool.zlibrary.text.ZLTextPage myCurrentPage -> a
    org.socool.zlibrary.text.ZLTextPage myNextPage -> h
    java.util.HashMap myLineInfoCache -> i
    org.socool.zlibrary.text.ZLTextRegion$Soul mySelectedRegionSoul -> j
    boolean myHighlightSelectedRegion -> k
    org.socool.zlibrary.text.ZLTextSelection mySelection -> l
    org.socool.zlibrary.view.ZLPaintContext myContext -> b
    java.util.ArrayList m_bookMarkHighlighting -> c
    java.lang.Runnable UpdateTask -> m
    char[] SPACE -> n
    org.socool.zlibrary.text.ZLTextStyle myTextStyle -> o
    int myWordHeight -> p
    char[] myWordPartArray -> q
    java.lang.String myZoneMapId -> r
    org.socool.screader.screader.TapZoneMap myZoneMap -> s
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$PageIndex -> t
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$WordTappingAction -> u
    void setModel(org.socool.screader.bookmodel.BookModel) -> a
    void loadBookMark() -> O
    void addBookmarkHighlight(org.socool.screader.library.Bookmark) -> a
    org.socool.screader.bookmodel.BookModel getModel() -> a
    org.socool.zlibrary.text.ZLTextWordCursor getStartCursor() -> b
    int getCurrentPercent() -> c
    int getCurrentChapter() -> d
    void gotoChapter(int) -> a
    void gotoPercent(int) -> b
    org.socool.zlibrary.text.ZLTextWordCursor getEndCursor() -> e
    void gotoMark(org.socool.zlibrary.text.ZLTextMark) -> a
    int search(java.lang.String,boolean,boolean,boolean,boolean) -> a
    boolean canFindNext() -> f
    void findNext() -> g
    boolean canFindPrevious() -> h
    void findPrevious() -> i
    void clearFindResults() -> j
    boolean findResultsAreEmpty() -> k
    void onScrollingFinished(org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    void moveSelectionCursorTo(org.socool.zlibrary.text.ZLTextSelectionCursor,int,int) -> a
    void releaseSelectionCursor() -> l
    org.socool.zlibrary.text.ZLTextSelectionCursor getSelectionCursorInMovement() -> m
    org.socool.zlibrary.text.ZLTextSelection$Point getSelectionCursorPoint(org.socool.zlibrary.text.ZLTextPage,org.socool.zlibrary.text.ZLTextSelectionCursor) -> a
    int distanceToCursor(int,int,org.socool.zlibrary.text.ZLTextSelection$Point) -> a
    org.socool.zlibrary.text.ZLTextSelectionCursor findSelectionCursor(int,int) -> a
    org.socool.zlibrary.text.ZLTextSelectionCursor findSelectionCursor(int,int,int) -> a
    void drawSelectionCursor(org.socool.zlibrary.view.ZLPaintContext,org.socool.zlibrary.text.ZLTextSelection$Point) -> a
    void paint(org.socool.zlibrary.view.ZLPaintContext,org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    void drawFooter(org.socool.zlibrary.view.ZLPaintContext,org.socool.zlibrary.text.ZLTextView$PageIndex) -> b
    void drawBackgroung(org.socool.zlibrary.text.ZLTextSelection,org.socool.zlibrary.util.ZLColor,org.socool.zlibrary.text.ZLTextPage,org.socool.zlibrary.text.ZLTextLineInfo,int,int,int) -> a
    void drawTextLine(org.socool.zlibrary.text.ZLTextPage,org.socool.zlibrary.text.ZLTextLineInfo,int,int,int) -> a
    void buildInfos(org.socool.zlibrary.text.ZLTextPage,org.socool.zlibrary.text.ZLTextWordCursor,org.socool.zlibrary.text.ZLTextWordCursor) -> a
    boolean isHyphenationPossible() -> P
    org.socool.zlibrary.text.ZLTextLineInfo processTextLine(org.socool.zlibrary.text.ZLTextParagraphCursor,int,int,int) -> a
    void prepareTextLine(org.socool.zlibrary.text.ZLTextPage,org.socool.zlibrary.text.ZLTextLineInfo,int) -> a
    void scrollPage(boolean,int,int) -> a
    void gotoPosition(int,int,int) -> b
    void gotoPositionByEnd(int,int,int) -> c
    void preparePaintInfo() -> n
    void preparePaintInfo(org.socool.zlibrary.text.ZLTextPage) -> a
    void clearCaches() -> o
    void rebuildPaintInfo() -> p
    int infoSize(org.socool.zlibrary.text.ZLTextLineInfo,int) -> a
    int paragraphSize(org.socool.zlibrary.text.ZLTextWordCursor,boolean,int) -> a
    void skip(org.socool.zlibrary.text.ZLTextWordCursor,int,int) -> a
    org.socool.zlibrary.text.ZLTextWordCursor findStart(org.socool.zlibrary.text.ZLTextWordCursor,int,int) -> b
    void hideSelectedRegionBorder() -> q
    org.socool.zlibrary.text.ZLTextRegion getSelectedRegion(org.socool.zlibrary.text.ZLTextPage) -> b
    org.socool.zlibrary.text.ZLTextRegion getSelectedRegion() -> r
    org.socool.zlibrary.text.ZLTextRegion findRegion(int,int,org.socool.zlibrary.text.ZLTextRegion$Filter) -> a
    org.socool.zlibrary.text.ZLTextRegion findRegion(int,int,int,org.socool.zlibrary.text.ZLTextRegion$Filter) -> a
    void selectRegion(org.socool.zlibrary.text.ZLTextRegion) -> a
    boolean initSelection(int,int) -> b
    void clearSelection() -> s
    int getSelectionStartY() -> t
    int getSelectionEndY() -> u
    org.socool.zlibrary.text.ZLTextPosition getSelectionStartPosition() -> v
    org.socool.zlibrary.text.ZLTextPosition getSelectionEndPosition() -> w
    boolean isSelectionEmpty() -> x
    org.socool.zlibrary.text.ZLTextRegion nextRegion(org.socool.zlibrary.text.ZLTextView$Direction,org.socool.zlibrary.text.ZLTextRegion$Filter) -> a
    boolean canScroll(org.socool.zlibrary.text.ZLTextView$PageIndex) -> b
    int getWordHeight() -> y
    org.socool.zlibrary.view.ZLPaintContext$Size getTextAreaSize() -> z
    int getTextAreaHeight() -> A
    int getTextAreaWidth() -> B
    int getBottomLine() -> C
    int getRightLine() -> D
    void setTextStyle(org.socool.zlibrary.text.ZLTextStyle) -> a
    void resetTextStyle() -> E
    void applyControl(org.socool.zlibrary.text.ZLTextControlElement) -> a
    void applyControls(org.socool.zlibrary.text.ZLTextParagraphCursor,int,int) -> a
    int getElementWidth(org.socool.zlibrary.text.ZLTextElement,int) -> a
    int getElementHeight(org.socool.zlibrary.text.ZLTextElement) -> a
    int getElementDescent(org.socool.zlibrary.text.ZLTextElement) -> b
    int getWordWidth(org.socool.zlibrary.text.ZLTextWord,int) -> a
    int getWordWidth(org.socool.zlibrary.text.ZLTextWord,int,int,boolean) -> a
    void drawWord(int,int,org.socool.zlibrary.text.ZLTextWord,int,int,boolean,org.socool.zlibrary.util.ZLColor) -> a
    void drawString(int,int,char[],int,int,org.socool.zlibrary.text.ZLTextWord$Mark,int) -> a
    org.socool.screader.screader.TapZoneMap getZoneMap() -> Q
    boolean onFingerSingleTap(int,int) -> c
    boolean onFingerPress(int,int) -> d
    boolean isFlickScrollingEnabled() -> R
    void startManualScrolling(int,int) -> k
    boolean onFingerMove(int,int) -> e
    boolean onFingerRelease(int,int) -> f
    boolean onFingerLongPress(int,int) -> g
    boolean onFingerMoveAfterLongPress(int,int) -> h
    boolean onFingerReleaseAfterLongPress(int,int) -> i
    boolean onTrackballRotated(int,int) -> j
    org.socool.zlibrary.filesystem.ZLFile getWallpaperFile() -> F
    org.socool.zlibrary.util.ZLColor getBackgroundColor() -> G
    org.socool.zlibrary.util.ZLColor getSelectedBackgroundColor() -> H
    org.socool.zlibrary.util.ZLColor getSelectedForegroundColor() -> I
    org.socool.zlibrary.util.ZLColor getTextColor(org.socool.zlibrary.text.ZLTextHyperlink) -> a
    org.socool.zlibrary.util.ZLColor getHighlightingColor() -> J
    java.lang.String getSelectedText() -> K
    int getCountOfSelectedWords() -> L
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$PageIndex() -> M
    int[] $SWITCH_TABLE$org$socool$screader$screader$FBReaderApp$WordTappingAction() -> N
org.socool.zlibrary.text.ZLTextView$1 -> org.socool.b.d.au:
    org.socool.zlibrary.text.ZLTextView this$0 -> a
    void run() -> run
org.socool.zlibrary.text.ZLTextView$Animation -> org.socool.b.d.av:
    org.socool.zlibrary.text.ZLTextView$Animation none -> a
    org.socool.zlibrary.text.ZLTextView$Animation shift -> b
    org.socool.zlibrary.text.ZLTextView$Animation shift2 -> c
    org.socool.zlibrary.text.ZLTextView$Animation curl -> d
    org.socool.zlibrary.text.ZLTextView$Animation[] ENUM$VALUES -> e
    org.socool.zlibrary.text.ZLTextView$Animation[] values() -> values
    org.socool.zlibrary.text.ZLTextView$Animation valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.text.ZLTextView$Direction -> org.socool.b.d.aw:
    org.socool.zlibrary.text.ZLTextView$Direction leftToRight -> a
    org.socool.zlibrary.text.ZLTextView$Direction rightToLeft -> b
    org.socool.zlibrary.text.ZLTextView$Direction up -> c
    org.socool.zlibrary.text.ZLTextView$Direction down -> d
    org.socool.zlibrary.text.ZLTextView$Direction[] ENUM$VALUES -> e
    org.socool.zlibrary.text.ZLTextView$Direction[] values() -> values
    org.socool.zlibrary.text.ZLTextView$Direction valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.text.ZLTextView$PageIndex -> org.socool.b.d.ax:
    org.socool.zlibrary.text.ZLTextView$PageIndex previous -> a
    org.socool.zlibrary.text.ZLTextView$PageIndex current -> b
    org.socool.zlibrary.text.ZLTextView$PageIndex next -> c
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$PageIndex -> d
    org.socool.zlibrary.text.ZLTextView$PageIndex[] ENUM$VALUES -> e
    org.socool.zlibrary.text.ZLTextView$PageIndex getNext() -> a
    org.socool.zlibrary.text.ZLTextView$PageIndex getPrevious() -> b
    org.socool.zlibrary.text.ZLTextView$PageIndex[] values() -> values
    org.socool.zlibrary.text.ZLTextView$PageIndex valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$PageIndex() -> c
org.socool.zlibrary.text.ZLTextWord -> org.socool.b.d.ay:
    char[] Data -> a
    int Offset -> b
    int Length -> f
    int myWidth -> g
    org.socool.zlibrary.text.ZLTextWord$Mark myMark -> h
    int myParagraphOffset -> i
    boolean isASpace() -> a
    org.socool.zlibrary.text.ZLTextWord$Mark getMark() -> b
    int getParagraphOffset() -> c
    void addMark(int,int) -> a
    int getWidth(org.socool.zlibrary.view.ZLPaintContext) -> a
    java.lang.String toString() -> toString
org.socool.zlibrary.text.ZLTextWord$Mark -> org.socool.b.d.az:
    int Start -> a
    int Length -> b
    org.socool.zlibrary.text.ZLTextWord$Mark myNext -> d
    org.socool.zlibrary.text.ZLTextWord this$0 -> c
    org.socool.zlibrary.text.ZLTextWord$Mark getNext() -> a
    void setNext(org.socool.zlibrary.text.ZLTextWord$Mark) -> a
    void access$1(org.socool.zlibrary.text.ZLTextWord$Mark,org.socool.zlibrary.text.ZLTextWord$Mark) -> a
org.socool.zlibrary.text.ZLTextWordCursor -> org.socool.b.d.ba:
    org.socool.zlibrary.text.ZLTextParagraphCursor myParagraphCursor -> a
    int myElementIndex -> b
    int myCharIndex -> c
    void setCursor(org.socool.zlibrary.text.ZLTextWordCursor) -> a
    void setCursor(org.socool.zlibrary.text.ZLTextParagraphCursor) -> a
    boolean isNull() -> a
    boolean isStartOfParagraph() -> b
    boolean isEndOfParagraph() -> f
    int getParagraphIndex() -> c
    int getElementIndex() -> d
    int getCharIndex() -> e
    org.socool.zlibrary.text.ZLTextElement getElement() -> g
    org.socool.zlibrary.text.ZLTextParagraphCursor getParagraphCursor() -> h
    org.socool.zlibrary.text.ZLTextMark getMark() -> i
    void nextWord() -> j
    boolean nextParagraph() -> k
    boolean previousParagraph() -> l
    void moveToParagraphStart() -> m
    void moveToParagraphEnd() -> n
    void moveToParagraph(int) -> a
    void moveTo(int,int) -> a
    void setCharIndex(int) -> b
    void reset() -> o
    void rebuild() -> p
    java.lang.String toString() -> toString
org.socool.zlibrary.text.ZLTextWordRegionSoul -> org.socool.b.d.bb:
    org.socool.zlibrary.text.ZLTextWord Word -> a
org.socool.zlibrary.util.Base64InputStream -> org.socool.b.e.a:
    java.io.InputStream myBaseStream -> a
    int myDecoded0 -> b
    int myDecoded1 -> c
    int myDecoded2 -> d
    byte[] myBuffer -> e
    int myBufferOffset -> f
    int myBufferLength -> g
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    void fillDecodedBuffer() -> a
    void fillBuffer() -> b
    int decode(byte) -> a
org.socool.zlibrary.util.HexInputStream -> org.socool.b.e.b:
    java.io.InputStream myBaseStream -> a
    byte[] myBuffer -> b
    int myBufferOffset -> c
    int myBufferLength -> d
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    void fillBuffer() -> a
    int decode(byte) -> a
org.socool.zlibrary.util.LineBreaker -> org.socool.b.e.c:
    boolean isAsciiLetter(char) -> a
    void setLineBreaks(char[],int,int,byte[]) -> a
org.socool.zlibrary.util.MimeType -> org.socool.b.e.d:
    java.util.Map ourSimpleTypesMap -> J
    org.socool.zlibrary.util.MimeType APP_ZIP -> a
    org.socool.zlibrary.util.MimeType APP_EPUB_ZIP -> b
    org.socool.zlibrary.util.MimeType APP_MOBIPOCKET -> c
    org.socool.zlibrary.util.MimeType APP_PDF -> d
    org.socool.zlibrary.util.MimeType APP_RTF -> e
    org.socool.zlibrary.util.MimeType APP_MSWORD -> f
    org.socool.zlibrary.util.MimeType APP_FB2_ZIP -> g
    org.socool.zlibrary.util.MimeType APP_ATOM_XML -> h
    org.socool.zlibrary.util.MimeType APP_OPENSEARCHDESCRIPTION -> i
    org.socool.zlibrary.util.MimeType APP_LITRES -> j
    org.socool.zlibrary.util.MimeType TEXT_XML -> k
    org.socool.zlibrary.util.MimeType TEXT_HTML -> l
    org.socool.zlibrary.util.MimeType TEXT_XHTML -> m
    org.socool.zlibrary.util.MimeType TEXT_PLAIN -> n
    org.socool.zlibrary.util.MimeType TEXT_RTF -> o
    org.socool.zlibrary.util.MimeType TEXT_FB2 -> p
    org.socool.zlibrary.util.MimeType IMAGE_PNG -> q
    org.socool.zlibrary.util.MimeType IMAGE_JPEG -> r
    org.socool.zlibrary.util.MimeType IMAGE_AUTO -> s
    org.socool.zlibrary.util.MimeType IMAGE_PALM -> t
    org.socool.zlibrary.util.MimeType IMAGE_VND_DJVU -> u
    org.socool.zlibrary.util.MimeType IMAGE_XDJVU -> v
    org.socool.zlibrary.util.MimeType UNKNOWN -> w
    org.socool.zlibrary.util.MimeType NULL -> x
    java.util.List TYPES_FB2 -> y
    java.util.List TYPES_EPUB -> z
    java.util.List TYPES_MOBIPOCKET -> A
    java.util.List TYPES_TXT -> B
    java.util.List TYPES_RTF -> C
    java.util.List TYPES_HTML -> D
    java.util.List TYPES_PDF -> E
    java.util.List TYPES_DJVU -> F
    java.util.List TYPES_DOC -> G
    java.util.List TYPES_FB2_ZIP -> H
    java.lang.String Name -> I
    java.util.Map myParameters -> K
    org.socool.zlibrary.util.MimeType get(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.socool.zlibrary.util.SliceInputStream -> org.socool.b.e.e:
    int myStart -> a
    int myLength -> b
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void reset() -> reset
    int offset() -> a
org.socool.zlibrary.util.ZLAndroidColorUtil -> org.socool.b.e.f:
    int rgba(org.socool.zlibrary.util.ZLColor,int) -> a
    int rgb(org.socool.zlibrary.util.ZLColor) -> a
    org.socool.zlibrary.util.ZLColor getAverageColor(android.graphics.Bitmap) -> a
org.socool.zlibrary.util.ZLArrayUtils -> org.socool.b.e.g:
    byte[] createCopy(byte[],int,int) -> a
    char[] createCopy(char[],int,int) -> a
    java.lang.String[] createCopy(java.lang.String[],int,int) -> a
org.socool.zlibrary.util.ZLBoolean3 -> org.socool.b.e.h:
    org.socool.zlibrary.util.ZLBoolean3 B3_FALSE -> a
    org.socool.zlibrary.util.ZLBoolean3 B3_TRUE -> b
    org.socool.zlibrary.util.ZLBoolean3 B3_UNDEFINED -> c
    java.lang.String Name -> d
    org.socool.zlibrary.util.ZLBoolean3[] ENUM$VALUES -> e
    org.socool.zlibrary.util.ZLBoolean3 getByName(java.lang.String) -> a
    org.socool.zlibrary.util.ZLBoolean3[] values() -> values
    org.socool.zlibrary.util.ZLBoolean3 valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.util.ZLCharacterUtil -> org.socool.b.e.i:
    boolean isLetter(char) -> a
org.socool.zlibrary.util.ZLColor -> org.socool.b.e.j:
    short Red -> a
    short Green -> b
    short Blue -> c
    short alpha -> d
    short getColorValue(java.lang.String) -> a
    int getIntValue() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.socool.zlibrary.util.ZLConfig -> org.socool.b.e.k:
    org.socool.zlibrary.util.ZLConfig ourInstance -> a
    android.database.sqlite.SQLiteDatabase myDatabase -> b
    android.database.sqlite.SQLiteStatement myGetValueStatement -> c
    android.database.sqlite.SQLiteStatement mySetValueStatement -> d
    android.database.sqlite.SQLiteStatement myUnsetValueStatement -> e
    android.database.sqlite.SQLiteStatement myDeleteGroupStatement -> f
    org.socool.zlibrary.util.ZLConfig Instance() -> a
    java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    void unsetValue(java.lang.String,java.lang.String) -> a
org.socool.zlibrary.util.ZLInputStreamWithOffset -> org.socool.b.e.l:
    java.io.InputStream myDecoratedStream -> a
    int myOffset -> b
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    int offset() -> a
org.socool.zlibrary.util.ZLMiscUtil -> org.socool.b.e.m:
    boolean equals(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object) -> a
    boolean mapsEquals(java.util.Map,java.util.Map) -> a
    java.lang.String listToString(java.util.List,java.lang.String) -> a
    java.util.List stringToList(java.lang.String,java.lang.String) -> a
org.socool.zlibrary.util.ZLTTFInfo -> org.socool.b.e.n:
    java.lang.String FamilyName -> a
    java.lang.String SubFamilyName -> b
org.socool.zlibrary.util.ZLTTFInfoDetector -> org.socool.b.e.o:
    java.io.InputStream myStream -> a
    int myPosition -> b
    java.util.Map collectFonts(java.lang.Iterable) -> a
    org.socool.zlibrary.util.ZLTTFInfo detectInfo(java.io.File) -> a
    int getInt16(byte[],int) -> b
    int getInt32(byte[],int) -> c
    byte[] readTable(org.socool.zlibrary.util.ZLTTFInfoDetector$TableInfo) -> a
    org.socool.zlibrary.util.ZLTTFInfo readFontInfo(org.socool.zlibrary.util.ZLTTFInfoDetector$TableInfo) -> b
    int access$0(byte[],int) -> a
org.socool.zlibrary.util.ZLTTFInfoDetector$TableInfo -> org.socool.b.e.p:
    java.lang.String Name -> a
    int Offset -> b
    int Length -> c
org.socool.zlibrary.util.ZLTree -> org.socool.b.e.q:
    int mySize -> a
    org.socool.zlibrary.util.ZLTree Parent -> b
    int Level -> c
    java.util.List mySubTrees -> d
    int getSize() -> p
    boolean hasChildren() -> q
    java.util.List subTrees() -> r
    void addSubTree(org.socool.zlibrary.util.ZLTree,int) -> a
    void removeSelf() -> s
    void clear() -> t
    org.socool.zlibrary.util.ZLTree$TreeIterator iterator() -> u
    java.util.Iterator iterator() -> iterator
    java.util.List access$1(org.socool.zlibrary.util.ZLTree) -> a
org.socool.zlibrary.util.ZLTree$TreeIterator -> org.socool.b.e.r:
    org.socool.zlibrary.util.ZLTree myCurrentElement -> b
    java.util.LinkedList myIndexStack -> c
    int myMaxLevel -> d
    org.socool.zlibrary.util.ZLTree this$0 -> a
    boolean hasNext() -> hasNext
    org.socool.zlibrary.util.ZLTree next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.socool.zlibrary.view.AndroidFontUtil -> org.socool.b.f.a:
    java.lang.reflect.Method ourFontCreationMethod -> a
    java.util.Map ourFontMap -> b
    java.util.Set ourFileSet -> c
    long myTimeStamp -> d
    android.graphics.Typeface createFontFromFile(java.io.File) -> a
    java.util.Map getFontMap(boolean) -> a
    java.lang.String realFontFamilyName(java.lang.String) -> a
    void fillFamiliesList(java.util.ArrayList,boolean) -> a
org.socool.zlibrary.view.AndroidFontUtil$1 -> org.socool.b.f.b:
    boolean accept(java.io.File,java.lang.String) -> accept
org.socool.zlibrary.view.AnimationProvider -> org.socool.b.f.c:
    org.socool.zlibrary.view.AnimationProvider$Mode myMode -> h
    int myStartX -> a
    int myStartY -> b
    int myEndX -> c
    int myEndY -> d
    float mySpeed -> e
    int myWidth -> f
    int myHeight -> g
    java.util.List myDrawInfos -> i
    org.socool.zlibrary.view.AnimationProvider$Mode getMode() -> a
    void terminate() -> b
    void startManualScrolling(int,int) -> a
    void scrollTo(int,int) -> b
    int getDiff(int,int) -> c
    int getMinDiff() -> c
    void startAnimatedScrolling(int,int,int) -> a
    void startAnimatedScrolling(org.socool.zlibrary.text.ZLTextView$PageIndex,java.lang.Integer,java.lang.Integer,int) -> a
    void startAnimatedScrollingInternal(int,boolean) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    boolean inProgress() -> d
    void setup(int,int) -> d
    void doStep() -> e
    void draw(android.graphics.Canvas) -> a
    void drawInternal(android.graphics.Canvas) -> b
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo(int,int) -> e
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo() -> f
    android.graphics.Bitmap getBitmapFrom() -> g
    android.graphics.Bitmap getBitmapTo() -> h
org.socool.zlibrary.view.AnimationProvider$DrawInfo -> org.socool.b.f.d:
    int X -> a
    int Y -> b
    long Start -> c
    int Duration -> d
org.socool.zlibrary.view.AnimationProvider$Mode -> org.socool.b.f.e:
    org.socool.zlibrary.view.AnimationProvider$Mode NoScrolling -> a
    org.socool.zlibrary.view.AnimationProvider$Mode ManualScrolling -> b
    org.socool.zlibrary.view.AnimationProvider$Mode AnimatedScrollingForward -> c
    org.socool.zlibrary.view.AnimationProvider$Mode AnimatedScrollingBackward -> d
    boolean Auto -> e
    org.socool.zlibrary.view.AnimationProvider$Mode[] ENUM$VALUES -> f
    org.socool.zlibrary.view.AnimationProvider$Mode[] values() -> values
    org.socool.zlibrary.view.AnimationProvider$Mode valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.view.CurlAnimationProvider -> org.socool.b.f.f:
    android.graphics.Paint myPaint -> k
    android.graphics.Paint myBackPaint -> l
    android.graphics.Paint myEdgePaint -> m
    android.graphics.Path myFgPath -> h
    android.graphics.Path myEdgePath -> i
    android.graphics.Path myQuadPath -> j
    float mySpeedFactor -> n
    android.graphics.Bitmap myBuffer -> o
    boolean myUseCanvasHack -> p
    void drawInternal(android.graphics.Canvas) -> b
    void drawInternalNoHack(android.graphics.Canvas) -> c
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo(int,int) -> e
    void startAnimatedScrollingInternal(int,boolean) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void doStep() -> e
    int getDiff(int,int) -> c
    int getMinDiff() -> c
org.socool.zlibrary.view.CurlMesh -> org.socool.b.f.g:
    float[] SHADOW_INNER_COLOR -> a
    float[] SHADOW_OUTER_COLOR -> b
    boolean mFlipTexture -> c
    java.nio.FloatBuffer mVertices -> d
    java.nio.FloatBuffer mTexCoords -> e
    java.nio.FloatBuffer mColors -> f
    int mVerticesCountFront -> g
    int mVerticesCountBack -> h
    java.nio.FloatBuffer mShadowColors -> i
    java.nio.FloatBuffer mShadowVertices -> j
    int mDropShadowCount -> k
    int mSelfShadowCount -> l
    int mMaxCurlSplits -> m
    org.socool.zlibrary.view.CurlMesh$Vertex[] mRectangle -> n
    int[] mTextureIds -> o
    android.graphics.Bitmap mBitmap -> p
    android.graphics.RectF mTextureRect -> q
    org.socool.zlibrary.view.CurlMesh$Array mTempVertices -> r
    org.socool.zlibrary.view.CurlMesh$Array mIntersections -> s
    org.socool.zlibrary.view.CurlMesh$Array mOutputVertices -> t
    org.socool.zlibrary.view.CurlMesh$Array mRotatedVertices -> u
    org.socool.zlibrary.view.CurlMesh$Array mScanLines -> v
    org.socool.zlibrary.view.CurlMesh$Array mTempShadowVertices -> w
    org.socool.zlibrary.view.CurlMesh$Array mSelfShadowVertices -> x
    org.socool.zlibrary.view.CurlMesh$Array mDropShadowVertices -> y
    void curl(android.graphics.PointF,android.graphics.PointF,double) -> a
    void draw(javax.microedition.khronos.opengles.GL10) -> a
    void reset() -> a
    void resetTexture() -> b
    void setBitmap(android.graphics.Bitmap) -> a
    void setFlipTexture(boolean) -> a
    void setRect(android.graphics.RectF) -> a
    void addVertex(org.socool.zlibrary.view.CurlMesh$Vertex) -> a
    org.socool.zlibrary.view.CurlMesh$Array getIntersections(org.socool.zlibrary.view.CurlMesh$Array,int[][],double) -> a
    int getNextHighestPO2(int) -> a
    void setTexCoords(float,float,float,float) -> a
org.socool.zlibrary.view.CurlMesh$Array -> org.socool.b.f.h:
    java.lang.Object[] mArray -> b
    int mSize -> c
    int mCapacity -> d
    org.socool.zlibrary.view.CurlMesh this$0 -> a
    void add(int,java.lang.Object) -> a
    void add(java.lang.Object) -> a
    void addAll(org.socool.zlibrary.view.CurlMesh$Array) -> a
    void clear() -> a
    java.lang.Object get(int) -> a
    java.lang.Object remove(int) -> b
    int size() -> b
org.socool.zlibrary.view.CurlMesh$ShadowVertex -> org.socool.b.f.i:
    double mPosX -> a
    double mPosY -> b
    double mPosZ -> c
    double mPenumbraX -> d
    double mPenumbraY -> e
    double mPenumbraColor -> f
    org.socool.zlibrary.view.CurlMesh this$0 -> g
org.socool.zlibrary.view.CurlMesh$Vertex -> org.socool.b.f.j:
    double mPosX -> a
    double mPosY -> b
    double mPosZ -> c
    double mTexX -> d
    double mTexY -> e
    double mPenumbraX -> f
    double mPenumbraY -> g
    double mColor -> h
    double mAlpha -> i
    org.socool.zlibrary.view.CurlMesh this$0 -> j
    void rotateZ(double) -> a
    void set(org.socool.zlibrary.view.CurlMesh$Vertex) -> a
    void translate(double,double) -> a
org.socool.zlibrary.view.CurlRenderer -> org.socool.b.f.k:
    android.graphics.RectF mViewRect -> a
    android.graphics.RectF mMargins -> b
    int mViewportWidth -> c
    int mViewportHeight -> d
    java.util.Vector mCurlMeshes -> e
    boolean mBackgroundColorChanged -> f
    int mBackgroundColor -> g
    org.socool.zlibrary.view.CurlRenderer$Observer mObserver -> h
    android.graphics.RectF mPageRectLeft -> i
    android.graphics.RectF mPageRectRight -> j
    void addCurlMesh(org.socool.zlibrary.view.CurlMesh) -> a
    android.graphics.RectF getPageRect(int) -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void removeCurlMesh(org.socool.zlibrary.view.CurlMesh) -> b
    void translate(android.graphics.PointF) -> a
    void updatePageRects() -> a
org.socool.zlibrary.view.CurlRenderer$Observer -> org.socool.b.f.l:
    void onDrawFrame() -> a
    void onPageSizeChanged(int,int) -> a
    void onSurfaceCreated() -> b
org.socool.zlibrary.view.NoneAnimationProvider -> org.socool.b.f.m:
    android.graphics.Paint myPaint -> h
    void drawInternal(android.graphics.Canvas) -> b
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void startAnimatedScrollingInternal(int,boolean) -> a
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo(int,int) -> e
    void doStep() -> e
    int getDiff(int,int) -> c
    int getMinDiff() -> c
org.socool.zlibrary.view.ShiftAnimationProvider -> org.socool.b.f.n:
    android.graphics.Paint myPaint -> h
    float mySpeedFactor -> i
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo(int,int) -> e
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void startAnimatedScrollingInternal(int,boolean) -> a
    void doStep() -> e
    void drawInternal(android.graphics.Canvas) -> b
    int getScrollingShift() -> i
    int getDiff(int,int) -> c
    int getMinDiff() -> c
org.socool.zlibrary.view.SlideAnimationProvider -> org.socool.b.f.o:
    android.graphics.Paint myPaint -> h
    float mySpeedFactor -> i
    org.socool.zlibrary.text.ZLTextView$PageIndex getPageToScrollTo(int,int) -> e
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void startAnimatedScrollingInternal(int,boolean) -> a
    void doStep() -> e
    void drawInternal(android.graphics.Canvas) -> b
    int getScrollingShift() -> i
    int getDiff(int,int) -> c
    int getMinDiff() -> c
org.socool.zlibrary.view.ZLGLWidget -> org.socool.b.f.p:
    org.socool.zlibrary.view.CurlMesh mPageCurl -> a
    org.socool.zlibrary.view.CurlMesh mPageLeft -> b
    org.socool.zlibrary.view.CurlMesh mPageRight -> c
    org.socool.zlibrary.view.CurlMesh mPageNextCache -> d
    int mCurlState -> e
    int mPageBitmapWidth -> f
    int mPageBitmapHeight -> g
    int SIZE -> h
    android.graphics.Bitmap[] myBitmaps -> i
    org.socool.zlibrary.text.ZLTextView$PageIndex[] myIndexes -> j
    android.graphics.PointF mDragStartPos -> k
    android.graphics.PointF mCurlPos -> l
    android.graphics.PointF mCurlDir -> m
    boolean m_needRepaint -> n
    boolean mAnimate -> o
    android.graphics.PointF mAnimationSource -> p
    android.graphics.PointF mAnimationTarget -> q
    long mAnimationStartTime -> r
    long mAnimationDurationTime -> s
    int mAnimationTargetEvent -> t
    org.socool.zlibrary.view.CurlRenderer mRenderer -> u
    org.socool.zlibrary.view.ZLGLWidget$LongClickRunnable myPendingLongClickRunnable -> v
    boolean myLongClickPerformed -> w
    boolean myPendingPress -> x
    int myPressedX -> y
    int myPressedY -> z
    boolean myScreenIsTouched -> A
    int myKeyUnderTracking -> B
    long myTrackingStartTime -> C
    void reset() -> c
    android.graphics.Bitmap getBitmap(org.socool.zlibrary.text.ZLTextView$PageIndex,boolean) -> a
    int getInternalIndex(org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    void shift(boolean) -> a
    void repaint(boolean) -> b
    void repaintStatusBar() -> d
    void drawOnBitmap(android.graphics.Bitmap,org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    void postLongClickRunnable() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onDrawFrame() -> a
    void onPageSizeChanged(int,int) -> a
    void onSurfaceCreated() -> b
    void startManualScrolling(int,int) -> b
    void scrollManuallyTo(int,int) -> c
    void startAnimatedScrolling(org.socool.zlibrary.text.ZLTextView$PageIndex,int) -> a
    void startAnimatedScrolling(org.socool.zlibrary.text.ZLTextView$PageIndex,int,int,org.socool.zlibrary.text.ZLTextView$Direction,int) -> a
    void init(android.content.Context) -> a
    void setCurlPos(android.graphics.PointF,android.graphics.PointF,double) -> a
    void startCurl(int) -> a
    void updateBitmaps() -> f
    void updateCurlPos(float,float) -> a
    void access$0(org.socool.zlibrary.view.ZLGLWidget,boolean) -> a
org.socool.zlibrary.view.ZLGLWidget$LongClickRunnable -> org.socool.b.f.q:
    org.socool.zlibrary.view.ZLGLWidget this$0 -> a
    void run() -> run
org.socool.zlibrary.view.ZLPaintContext -> org.socool.b.f.r:
    java.util.ArrayList myFamilies -> f
    org.socool.zlibrary.options.ZLBooleanOption AntiAliasOption -> a
    org.socool.zlibrary.options.ZLBooleanOption DeviceKerningOption -> b
    org.socool.zlibrary.options.ZLBooleanOption DitheringOption -> c
    org.socool.zlibrary.options.ZLBooleanOption SubpixelOption -> d
    android.graphics.Canvas myCanvas -> e
    android.graphics.Paint myTextPaint -> g
    android.graphics.Paint myLinePaint -> h
    android.graphics.Paint myFillPaint -> i
    android.graphics.Paint myOutlinePaint -> j
    int myWidth -> k
    int myHeight -> l
    org.socool.zlibrary.util.ZLColor myBackgroundColor -> m
    java.util.HashMap myTypefaces -> n
    org.socool.zlibrary.filesystem.ZLFile ourWallpaperFile -> o
    android.graphics.Bitmap ourWallpaper -> p
    int m_widthWallpaper -> q
    int m_heightWallpaper -> r
    boolean myResetFont -> s
    java.lang.String myFontFamily -> t
    int myFontSize -> u
    boolean myFontIsBold -> v
    boolean myFontIsItalic -> w
    boolean myFontIsUnderlined -> x
    boolean myFontIsStrikedThrough -> y
    int mySpaceWidth -> z
    int myStringHeight -> A
    int myDescent -> B
    void setFont(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void setLineColor(org.socool.zlibrary.util.ZLColor) -> a
    void setFillColor(org.socool.zlibrary.util.ZLColor,int) -> a
    void setFillColor(org.socool.zlibrary.util.ZLColor) -> b
    int getStringWidth(java.lang.String) -> a
    int getSpaceWidth() -> a
    int getStringHeight() -> b
    int getDescent() -> c
    void drawString(int,int,java.lang.String) -> a
    void clear(org.socool.zlibrary.filesystem.ZLFile) -> a
    void clear(org.socool.zlibrary.util.ZLColor) -> c
    org.socool.zlibrary.util.ZLColor getBackgroundColor() -> d
    void fillPolygon(int[],int[]) -> a
    void drawPolygonalLine(int[],int[]) -> b
    void drawOutline(int[],int[]) -> c
    void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> b
    void setTextColor(org.socool.zlibrary.util.ZLColor) -> d
    void setLineColor(org.socool.zlibrary.util.ZLColor,int) -> b
    void setFillColor(org.socool.zlibrary.util.ZLColor,int,int) -> a
    int getWidth() -> e
    int getHeight() -> f
    int getStringWidth(char[],int,int) -> a
    int getSpaceWidthInternal() -> g
    int getStringHeightInternal() -> h
    int getDescentInternal() -> i
    void drawString(int,int,char[],int,int) -> a
    org.socool.zlibrary.view.ZLPaintContext$Size imageSize(org.socool.zlibrary.image.ZLImageData,org.socool.zlibrary.view.ZLPaintContext$Size,org.socool.zlibrary.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,org.socool.zlibrary.image.ZLImageData,org.socool.zlibrary.view.ZLPaintContext$Size,org.socool.zlibrary.view.ZLPaintContext$ScalingType) -> a
    void fillRectangle(int,int,int,int) -> a
    java.lang.String realFontFamilyName(java.lang.String) -> b
org.socool.zlibrary.view.ZLPaintContext$ScalingType -> org.socool.b.f.s:
    org.socool.zlibrary.view.ZLPaintContext$ScalingType OriginalSize -> a
    org.socool.zlibrary.view.ZLPaintContext$ScalingType IntegerCoefficient -> b
    org.socool.zlibrary.view.ZLPaintContext$ScalingType FitMaximum -> c
    org.socool.zlibrary.view.ZLPaintContext$ScalingType[] ENUM$VALUES -> d
    org.socool.zlibrary.view.ZLPaintContext$ScalingType[] values() -> values
    org.socool.zlibrary.view.ZLPaintContext$ScalingType valueOf(java.lang.String) -> valueOf
org.socool.zlibrary.view.ZLPaintContext$Size -> org.socool.b.f.t:
    int Width -> a
    int Height -> b
    boolean equals(java.lang.Object) -> equals
org.socool.zlibrary.view.ZLViewWidget -> org.socool.b.f.u:
    android.graphics.Paint myPaint -> a
    int SIZE -> b
    android.graphics.Bitmap[] myBitmaps -> c
    org.socool.zlibrary.text.ZLTextView$PageIndex[] myIndexes -> d
    int myWidth -> e
    int myHeight -> f
    org.socool.zlibrary.view.AnimationProvider myAnimationProvider -> g
    org.socool.zlibrary.text.ZLTextView$Animation myAnimationType -> h
    org.socool.zlibrary.view.ZLViewWidget$LongClickRunnable myPendingLongClickRunnable -> i
    boolean myLongClickPerformed -> j
    boolean myPendingPress -> k
    int myPressedX -> l
    int myPressedY -> m
    boolean myScreenIsTouched -> n
    int myKeyUnderTracking -> o
    long myTrackingStartTime -> p
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Animation -> q
    int[] $SWITCH_TABLE$org$socool$zlibrary$view$AnimationProvider$Mode -> r
    void init() -> e
    void setBitmapSize(int,int) -> a
    android.graphics.Bitmap getBitmap(org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    int getInternalIndex(org.socool.zlibrary.text.ZLTextView$PageIndex) -> b
    void reset() -> a
    void shift(boolean) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    org.socool.zlibrary.view.AnimationProvider getAnimationProvider() -> f
    void onDrawInScrolling(android.graphics.Canvas) -> a
    void repaint() -> b
    void startManualScrolling(int,int) -> b
    void scrollManuallyTo(int,int) -> c
    void startAnimatedScrolling(org.socool.zlibrary.text.ZLTextView$PageIndex,int,int,int) -> a
    void startAnimatedScrolling(int,int,int) -> a
    void drawOnBitmap(android.graphics.Bitmap,org.socool.zlibrary.text.ZLTextView$PageIndex) -> a
    void onDrawStatic(android.graphics.Canvas) -> b
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    void postLongClickRunnable() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void access$0(org.socool.zlibrary.view.ZLViewWidget,boolean) -> a
    int[] $SWITCH_TABLE$org$socool$zlibrary$text$ZLTextView$Animation() -> c
    int[] $SWITCH_TABLE$org$socool$zlibrary$view$AnimationProvider$Mode() -> d
org.socool.zlibrary.view.ZLViewWidget$LongClickRunnable -> org.socool.b.f.v:
    org.socool.zlibrary.view.ZLViewWidget this$0 -> a
    void run() -> run
org.socool.zlibrary.xml.ZLDTDParser -> org.socool.b.g.a:
    void doIt(java.io.InputStream,java.util.HashMap) -> a
org.socool.zlibrary.xml.ZLMutableString -> org.socool.b.g.b:
    char[] myData -> a
    int myLength -> b
    void append(char[],int,int) -> a
    void clear() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.socool.zlibrary.xml.ZLStringMap -> org.socool.b.g.c:
    java.lang.String[] myKeys -> a
    java.lang.String[] myValues -> b
    int mySize -> c
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String getValue(java.lang.String) -> a
    void clear() -> a
org.socool.zlibrary.xml.ZLXMLParser -> org.socool.b.g.d:
    java.io.InputStreamReader myStreamReader -> a
    org.socool.zlibrary.xml.ZLXMLReader myXMLReader -> b
    boolean myProcessNamespaces -> c
    java.util.HashMap ourBufferPool -> d
    java.util.Queue ourStringPool -> e
    char[] myBuffer -> f
    int myBufferDescriptionLength -> g
    org.socool.zlibrary.xml.ZLMutableString myTagName -> h
    org.socool.zlibrary.xml.ZLMutableString myCData -> i
    org.socool.zlibrary.xml.ZLMutableString myAttributeName -> j
    org.socool.zlibrary.xml.ZLMutableString myAttributeValue -> k
    org.socool.zlibrary.xml.ZLMutableString myEntityName -> l
    java.util.HashMap ourDTDMaps -> m
    java.lang.String convertToString(java.util.Map,org.socool.zlibrary.xml.ZLMutableString) -> a
    char[] getBuffer(int) -> a
    void storeBuffer(char[]) -> a
    org.socool.zlibrary.xml.ZLMutableString getMutableString() -> c
    void storeString(org.socool.zlibrary.xml.ZLMutableString) -> a
    void finish() -> a
    char[] getEntityValue(java.util.HashMap,java.lang.String) -> a
    java.util.HashMap getDTDMap(java.util.List) -> a
    void doIt() -> b
    boolean processFullTag(org.socool.zlibrary.xml.ZLXMLReader,java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
    boolean processStartTag(org.socool.zlibrary.xml.ZLXMLReader,java.lang.String,org.socool.zlibrary.xml.ZLStringMap,java.util.HashMap) -> a
    boolean processEndTag(org.socool.zlibrary.xml.ZLXMLReader,java.lang.String,java.util.HashMap) -> a
org.socool.zlibrary.xml.ZLXMLProcessor -> org.socool.b.g.e:
    void read(org.socool.zlibrary.xml.ZLXMLReader,java.io.InputStream,int) -> a
    void read(org.socool.zlibrary.xml.ZLXMLReader,org.socool.zlibrary.filesystem.ZLFile) -> a
    void read(org.socool.zlibrary.xml.ZLXMLReader,org.socool.zlibrary.filesystem.ZLFile,int) -> a
org.socool.zlibrary.xml.ZLXMLReader -> org.socool.b.g.f:
    boolean dontCacheAttributeValues() -> a
    void startDocumentHandler() -> b
    void endDocumentHandler() -> c
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
    boolean endElementHandler(java.lang.String) -> a
    void characterDataHandler(char[],int,int) -> a
    void characterDataHandlerFinal(char[],int,int) -> b
    boolean processNamespaces() -> d
    void namespaceMapChangedHandler(java.util.Map) -> a
    void collectExternalEntities(java.util.HashMap) -> a
    java.util.List externalDTDs() -> e
org.socool.zlibrary.xml.ZLXMLReaderAdapter -> org.socool.b.g.g:
    java.util.Map myNamespaceMap -> a
    boolean readQuietly(org.socool.zlibrary.filesystem.ZLFile) -> a
    boolean dontCacheAttributeValues() -> a
    boolean startElementHandler(java.lang.String,org.socool.zlibrary.xml.ZLStringMap) -> a
    boolean endElementHandler(java.lang.String) -> a
    void characterDataHandler(char[],int,int) -> a
    void characterDataHandlerFinal(char[],int,int) -> b
    void startDocumentHandler() -> b
    void endDocumentHandler() -> c
    boolean processNamespaces() -> d
    void namespaceMapChangedHandler(java.util.Map) -> a
    void collectExternalEntities(java.util.HashMap) -> a
    java.util.List externalDTDs() -> e
